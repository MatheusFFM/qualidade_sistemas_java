file,class,method,constructor,line,cbo,cboModified,fanin,fanout,wmc,rfc,loc,returnsQty,variablesQty,parametersQty,methodsInvokedQty,methodsInvokedLocalQty,methodsInvokedIndirectLocalQty,loopQty,comparisonsQty,tryCatchQty,parenthesizedExpsQty,stringLiteralsQty,numbersQty,assignmentsQty,mathOperationsQty,maxNestedBlocksQty,anonymousClassesQty,innerClassesQty,lambdasQty,uniqueWordsQty,modifiers,logStatementsQty,hasJavaDoc
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Rotation.java,strings.Rotation,"rotation/2[java.lang.String,int]",false,25,0,1,1,0,1,2,3,1,0,2,2,0,0,0,0,0,0,0,1,0,1,0,0,0,0,20,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Rotation.java,strings.Rotation,"rotation/2[char[],int]",false,36,2,2,1,1,1,1,5,0,0,2,1,1,1,0,0,0,0,0,5,0,3,0,0,0,0,20,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Rotation.java,strings.Rotation,main/1[java.lang.String[]],false,9,2,2,0,2,1,4,6,0,1,1,4,2,2,0,0,0,0,4,2,1,0,0,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Rotation.java,strings.Rotation,"reverse/3[char[],int,int]",false,49,1,1,1,0,2,0,9,0,1,3,0,0,0,1,0,0,0,0,0,3,0,1,0,0,0,13,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TreeTraversal.java,DataStructures.Trees.Node,printPreOrder/0,false,77,1,3,2,1,3,2,9,0,0,0,2,1,0,0,2,0,0,1,0,0,1,1,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TreeTraversal.java,DataStructures.Trees.Node,printLevelOrder/0,false,98,1,1,1,0,4,4,14,0,2,0,4,0,0,1,2,0,0,1,1,2,1,2,0,0,0,18,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TreeTraversal.java,DataStructures.Trees.Node,insert/1[int],false,51,1,4,2,2,4,1,18,0,0,1,1,1,0,0,2,0,0,0,0,2,0,2,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TreeTraversal.java,DataStructures.Trees.Node,Node/1[int],true,47,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TreeTraversal.java,DataStructures.Trees.Node,printInOrder/0,false,67,1,3,2,1,3,2,9,0,0,0,2,1,0,0,2,0,0,1,0,0,1,1,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TreeTraversal.java,DataStructures.Trees.Node,printPostOrder/0,false,87,1,3,2,1,3,2,9,0,0,0,2,1,0,0,2,0,0,1,0,0,1,1,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinHeap.java,DataStructures.Heaps.MinHeap,insertElement/1[DataStructures.Heaps.HeapElement],false,83,2,2,1,1,1,3,4,0,0,1,3,1,2,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinHeap.java,DataStructures.Heaps.MinHeap,MinHeap/1[java.util.List<DataStructures.Heaps.HeapElement>],true,16,2,1,0,1,4,3,8,0,0,1,3,1,3,1,2,0,0,2,1,1,0,2,0,0,0,16,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinHeap.java,DataStructures.Heaps.MinHeap,deleteElement/1[int],false,89,2,6,1,5,10,10,13,0,0,1,10,4,3,0,0,1,8,2,7,0,6,2,0,0,0,23,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinHeap.java,DataStructures.Heaps.MinHeap,toggleDown/1[int],false,55,2,4,1,3,7,6,15,0,2,1,6,2,1,1,0,0,7,0,16,5,16,2,0,0,0,11,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinHeap.java,DataStructures.Heaps.MinHeap,extractMin/0,false,76,2,2,1,1,1,2,5,1,1,0,2,1,4,0,0,0,0,0,2,1,0,0,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinHeap.java,DataStructures.Heaps.MinHeap,getElement/1[int],false,26,1,1,1,0,3,2,4,1,0,1,2,0,0,0,0,0,2,1,2,0,1,1,0,0,0,12,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinHeap.java,DataStructures.Heaps.MinHeap,getElementKey/1[int],false,33,1,4,3,1,1,2,3,1,0,1,2,0,0,0,0,0,0,0,1,0,1,0,0,0,0,5,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinHeap.java,DataStructures.Heaps.MinHeap,"swap/2[int,int]",false,38,1,2,2,0,1,2,5,0,1,2,2,0,0,0,0,0,0,0,4,1,4,0,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinHeap.java,DataStructures.Heaps.MinHeap,toggleUp/1[int],false,45,2,5,2,3,2,5,7,0,1,1,5,2,1,1,0,0,0,0,4,2,4,1,0,0,0,9,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinHeap.java,DataStructures.Heaps.MinHeap,getElement/0,false,113,3,2,0,2,2,1,8,1,0,0,1,1,5,0,0,1,0,1,0,0,0,1,0,0,0,11,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.MatrixGraphs,main/1[java.lang.String[]],false,5,1,2,0,2,1,2,12,0,1,1,2,0,0,0,0,0,0,0,17,1,0,0,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LongestValidParentheses.java,DynamicProgramming.LongestValidParentheses,getLongestValidParentheses/1[java.lang.String],false,14,2,1,1,0,11,3,26,2,6,1,3,0,0,1,6,0,1,0,23,11,9,4,0,0,0,12,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LongestValidParentheses.java,DynamicProgramming.LongestValidParentheses,main/1[java.lang.String[]],false,44,1,1,0,1,3,5,11,0,2,1,5,1,1,1,0,0,0,2,0,2,1,2,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\LinearCongruentialGenerator.java,Others.LinearCongruentialGenerator,nextNumber/0,false,47,0,1,1,0,1,0,4,1,0,0,0,0,0,0,0,0,1,0,0,1,3,0,0,0,0,21,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\LinearCongruentialGenerator.java,Others.LinearCongruentialGenerator,main/1[java.lang.String[]],false,52,1,2,0,2,2,3,6,0,2,1,3,1,1,1,0,0,0,0,6,2,0,1,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\LinearCongruentialGenerator.java,Others.LinearCongruentialGenerator,"LinearCongruentialGenerator/4[double,double,double,double]",true,34,0,0,0,0,1,0,6,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,28,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\LinearCongruentialGenerator.java,Others.LinearCongruentialGenerator,"LinearCongruentialGenerator/3[double,double,double]",true,21,0,1,1,0,1,1,3,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Mandelbrot.java,Others.Mandelbrot,colorCodedColorMap/1[double],false,130,0,1,1,0,7,1,30,7,9,1,1,0,0,0,0,0,6,0,20,9,13,2,0,0,0,28,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Mandelbrot.java,Others.Mandelbrot,"getDistance/3[double,double,int]",false,174,0,1,1,0,3,0,15,1,5,3,0,0,0,1,0,0,1,0,5,8,11,2,0,0,0,45,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Mandelbrot.java,Others.Mandelbrot,"getImage/7[int,int,double,double,double,int,boolean]",false,75,1,4,1,3,7,5,22,1,7,7,5,3,1,2,0,0,2,3,7,7,10,2,0,0,0,75,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Mandelbrot.java,Others.Mandelbrot,main/1[java.lang.String[]],false,25,1,1,0,1,6,5,14,0,2,1,5,1,2,0,4,1,0,2,32,2,0,1,0,0,0,16,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Mandelbrot.java,Others.Mandelbrot,blackAndWhiteColorMap/1[double],false,120,0,1,1,0,2,0,3,1,0,1,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,26,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\LevelOrderTraversalQueue.java,DataStructures.Trees.LevelOrderTraversalQueue$Node,Node/1[int],true,14,0,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\TimSort.java,Sorts.TimSort,change_run/1[int],false,43,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,12,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\TimSort.java,Sorts.TimSort,"merge_runs/4[int[],int,int,int]",false,87,1,1,1,0,8,0,31,0,7,4,0,0,0,5,0,0,0,0,9,18,5,2,0,0,0,30,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\TimSort.java,Sorts.TimSort,TimSort/1[int[]],true,18,1,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,13,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\TimSort.java,Sorts.TimSort,showArrayElements/0,false,151,0,1,1,0,2,2,6,0,1,0,2,0,0,1,0,0,0,1,1,1,1,1,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\TimSort.java,Sorts.TimSort,TimSort/0,true,51,1,1,1,0,2,1,9,0,3,0,1,0,0,1,0,0,0,0,3,6,0,1,0,0,0,22,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\TimSort.java,Sorts.TimSort,"insertion_sort/3[int[],int,int]",false,68,1,1,1,0,4,0,11,0,3,3,0,0,0,2,0,0,0,0,5,5,3,2,0,0,0,31,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\TimSort.java,Sorts.TimSort,algorithm/0,false,126,1,4,1,3,4,6,16,0,5,0,6,3,1,3,0,0,3,2,9,8,10,2,0,0,0,12,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\TimSort.java,Sorts.TimSort,test/0,false,159,2,5,1,4,4,1,18,0,7,0,1,1,2,3,0,0,6,3,17,7,6,1,0,0,0,18,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\TimSort.java,Sorts.TimSort,main/1[java.lang.String[]],false,185,1,1,0,1,1,1,3,0,0,1,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\TimSort.java,Sorts.TimSort,TimSort/1[int],true,27,1,1,1,0,2,1,9,0,3,1,1,0,0,1,0,0,0,0,2,6,0,1,0,0,0,21,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Area.java,Maths.Area,surfaceAreaCube/1[double],false,39,0,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,13,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Area.java,Maths.Area,"surfaceAreaTrapezium/3[double,double,double]",false,104,0,1,1,0,1,0,3,1,0,3,0,0,0,0,0,0,1,0,1,0,3,0,0,0,0,16,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Area.java,Maths.Area,main/1[java.lang.String[]],false,5,1,8,0,8,10,9,11,0,0,1,9,8,1,0,9,0,0,0,32,0,0,0,0,0,0,13,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Area.java,Maths.Area,"surfaceAreaRectangle/2[double,double]",false,60,0,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Area.java,Maths.Area,surfaceAreaCircle/1[double],false,114,0,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Area.java,Maths.Area,surfaceAreaSquare/1[double],false,70,0,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Area.java,Maths.Area,"surfaceAreaTriangle/2[double,double]",false,81,0,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,12,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Area.java,Maths.Area,surfaceAreaSphere/1[double],false,49,0,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,11,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Area.java,Maths.Area,"surfaceAreaParallelogram/2[double,double]",false,92,0,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FibonacciNumber.java,Maths.FibonacciNumber,main/1[java.lang.String[]],false,5,1,1,0,1,1,1,7,0,0,1,1,1,2,0,0,0,0,0,5,0,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FibonacciNumber.java,Maths.FibonacciNumber,isPerfectSquare/1[int],false,19,0,1,1,0,2,1,4,1,1,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FibonacciNumber.java,Maths.FibonacciNumber,isFibonacciNumber/1[int],false,32,1,2,1,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,4,0,4,0,0,0,0,24,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PerfectCube.java,Maths.PerfectCube,isPerfectCube/1[int],false,20,0,1,1,0,2,1,4,1,1,1,1,0,0,0,1,0,0,0,2,1,2,0,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PerfectCube.java,Maths.PerfectCube,main/1[java.lang.String[]],false,5,1,1,0,1,1,1,8,0,0,1,1,1,1,0,0,0,0,0,6,0,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\HexToOct.java,Conversions.HexToOct,decimal2octal/1[int],false,35,0,1,1,0,2,1,13,1,3,1,1,0,0,1,0,0,2,0,7,6,3,1,0,0,0,16,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\HexToOct.java,Conversions.HexToOct,main/1[java.lang.String[]],false,54,1,2,0,2,1,6,11,0,4,1,6,2,1,0,0,0,0,2,0,4,1,0,0,0,0,26,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\HexToOct.java,Conversions.HexToOct,hex2decimal/1[java.lang.String],false,17,0,1,1,0,2,4,11,1,5,1,4,0,0,1,0,0,0,1,3,7,2,1,0,0,0,17,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\LowestBasePalindrome.java,Others.LowestBasePalindrome,"base2base/3[java.lang.String,int,int]",false,102,0,1,1,0,6,3,17,1,5,3,3,0,0,2,1,0,3,1,6,10,11,2,0,0,0,10,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\LowestBasePalindrome.java,Others.LowestBasePalindrome,main/1[java.lang.String[]],false,17,1,2,0,2,3,8,18,0,2,1,8,2,2,1,0,1,0,3,2,3,1,2,0,0,0,19,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\LowestBasePalindrome.java,Others.LowestBasePalindrome,lowestBasePalindrome/1[int],false,42,1,2,1,1,6,4,30,2,8,1,4,1,1,3,0,0,2,3,3,14,2,4,0,0,0,34,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\LowestBasePalindrome.java,Others.LowestBasePalindrome,reverse/1[java.lang.String],false,94,0,1,1,0,2,2,7,1,2,1,2,0,0,1,0,0,0,1,2,3,1,1,0,0,0,3,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CircleLinkedList.java,DataStructures.Lists.CircleLinkedList$Node,"Node/2[E,DataStructures.Lists.CircleLinkedList.Node<E>]",true,8,2,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CursorLinkedList.java,DataStructures.Lists.CursorLinkedList,get/1[int],false,76,1,0,0,0,5,0,15,2,3,1,0,0,0,1,2,0,0,0,3,4,0,3,0,0,0,26,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CursorLinkedList.java,DataStructures.Lists.CursorLinkedList,CursorLinkedList/0,true,33,0,0,0,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CursorLinkedList.java,DataStructures.Lists.CursorLinkedList,printList/0,false,39,1,0,0,0,3,2,10,0,2,0,2,0,0,1,2,0,0,0,2,3,0,2,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CursorLinkedList.java,DataStructures.Lists.CursorLinkedList,remove/1[T],false,106,2,1,0,1,4,3,24,0,5,1,3,0,0,1,1,0,0,0,1,9,0,3,0,0,0,11,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CursorLinkedList.java,DataStructures.Lists.CursorLinkedList,free/1[int],false,138,1,0,0,0,1,0,7,0,2,1,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,7,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CursorLinkedList.java,DataStructures.Lists.CursorLinkedList,removeByIndex/1[int],false,97,2,2,0,2,3,2,6,0,1,1,2,0,0,0,0,0,0,0,1,1,0,1,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CursorLinkedList.java,DataStructures.Lists.CursorLinkedList,append/1[T],false,147,2,1,0,1,3,2,15,0,2,1,2,0,0,1,2,0,0,0,3,7,0,1,0,0,0,9,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CursorLinkedList.java,DataStructures.Lists.CursorLinkedList,alloc/0,false,169,0,0,0,0,2,0,10,1,2,0,0,0,0,0,1,0,0,0,2,4,0,1,0,0,0,14,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CursorLinkedList.java,DataStructures.Lists.CursorLinkedList,(initializer 1),false,24,2,1,0,1,2,0,7,0,1,0,0,0,0,1,0,0,0,0,4,4,2,1,0,0,0,14,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CursorLinkedList.java,DataStructures.Lists.CursorLinkedList,indexOf/1[T],false,57,2,0,0,0,3,2,11,2,2,1,2,0,0,1,0,0,0,0,2,3,0,2,0,0,0,15,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\DecimalToAnyBase.java,Conversions.DecimalToAnyBase,reVal/1[int],false,57,0,1,1,0,3,0,4,2,0,1,0,0,0,0,0,0,2,0,3,0,3,1,0,0,0,18,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\DecimalToAnyBase.java,Conversions.DecimalToAnyBase,main/1[java.lang.String[]],false,11,1,1,0,1,1,6,12,0,3,1,6,1,2,0,0,0,0,7,0,3,2,0,0,0,0,19,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\DecimalToAnyBase.java,Conversions.DecimalToAnyBase,"convertToAnyBase/2[int,int]",false,34,1,2,1,1,3,6,12,1,2,2,6,1,1,2,0,0,0,0,1,3,1,1,0,0,0,34,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SkylineProblem.java,Others.SkylineProblem,"mergeSkyline/2[java.util.ArrayList<Others.SkylineProblem.Skyline>,java.util.ArrayList<Others.SkylineProblem.Skyline>]",false,60,1,2,1,1,10,4,42,1,6,2,4,0,0,3,2,0,0,0,17,10,0,4,0,0,0,10,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SkylineProblem.java,Others.SkylineProblem,main/1[java.lang.String[]],false,128,1,2,0,2,1,1,4,0,1,1,1,1,3,0,0,0,0,0,0,1,0,0,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SkylineProblem.java,Others.SkylineProblem,"add/3[int,int,int]",false,27,1,2,1,1,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SkylineProblem.java,Others.SkylineProblem,"findSkyline/2[int,int]",false,43,2,5,2,3,2,3,12,2,4,2,3,2,1,0,1,0,1,0,3,4,3,1,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SkylineProblem.java,Others.SkylineProblem,run/0,false,11,2,4,1,3,2,8,12,0,5,0,8,3,2,1,0,0,0,1,6,6,1,1,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SkylineProblem.java,Others.SkylineProblem,print/1[java.util.ArrayList<Others.SkylineProblem.Skyline>],false,31,1,1,1,0,3,4,10,0,2,1,4,0,0,1,0,0,0,2,0,2,1,2,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\WordBoggle.java,Trie,add/1[java.lang.String],false,117,1,2,1,1,3,5,13,0,4,1,5,0,0,1,0,0,0,0,1,6,0,2,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\WordBoggle.java,Trie,Trie/0,true,112,1,2,1,1,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KochSnowflake.java,Others.KochSnowflake,"GetImage/3[java.util.ArrayList<Others.KochSnowflake.Vector2>,int,int]",false,144,1,1,1,0,2,8,17,1,8,3,8,0,0,1,0,0,0,0,7,8,3,1,0,0,0,34,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KochSnowflake.java,Others.KochSnowflake,"Iterate/2[java.util.ArrayList<Others.KochSnowflake.Vector2>,int]",false,75,2,3,2,1,2,1,7,1,2,2,1,1,1,1,0,0,0,0,1,3,0,1,0,0,0,37,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KochSnowflake.java,Others.KochSnowflake,main/1[java.lang.String[]],false,25,2,3,0,3,14,9,28,0,6,1,9,2,3,0,12,1,0,2,41,6,7,1,0,0,0,23,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KochSnowflake.java,Others.KochSnowflake,"GetKochSnowflake/2[int,int]",false,91,2,4,1,3,2,4,17,1,7,2,4,2,2,0,0,0,0,1,6,7,7,1,0,0,0,37,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KochSnowflake.java,Others.KochSnowflake,IterationStep/1[java.util.ArrayList<Others.KochSnowflake.Vector2>],false,119,1,5,1,4,2,7,14,1,5,1,7,0,0,1,0,0,0,0,8,5,4,1,0,0,0,49,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.Link,displayLink/0,false,271,0,1,1,0,1,1,3,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.Link,main/1[java.lang.String[]],false,280,1,9,0,9,1,8,23,0,1,1,8,0,0,0,0,0,0,0,11,1,0,0,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.Link,Link/1[int],true,266,0,4,4,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\ReverseStackUsingRecursion.java,Others.ReverseStackUsingRecursion,main/1[java.lang.String[]],false,13,1,1,0,1,4,7,14,0,2,1,7,1,2,3,0,0,0,2,4,2,0,1,0,0,0,13,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\ReverseStackUsingRecursion.java,Others.ReverseStackUsingRecursion,insertAtEnd/1[int],false,50,1,3,2,1,2,5,11,0,1,1,5,1,0,0,0,0,0,0,0,1,0,1,0,0,0,5,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\ReverseStackUsingRecursion.java,Others.ReverseStackUsingRecursion,reverseUsingRecursion/1[java.util.Stack<java.lang.Integer>],false,36,1,4,2,2,2,5,9,1,1,1,5,2,1,0,0,0,0,0,0,1,0,1,0,0,0,8,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\HeapSort.java,Sorts.HeapSort$Heap,"heapSubtree/2[int,int]",false,35,3,3,0,3,7,3,24,0,6,2,3,0,0,0,0,0,0,0,4,6,4,2,0,0,0,20,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\HeapSort.java,Sorts.HeapSort$Heap,Heap/1[T[]],true,25,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\HeapSort.java,Sorts.HeapSort$Heap,getRoot/1[int],false,82,3,2,0,2,1,2,5,1,0,1,2,0,0,0,0,0,0,0,3,0,1,0,0,0,0,11,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\HeapSort.java,Sorts.HeapSort$Heap,makeMinHeap/1[int],false,63,1,2,0,2,5,2,14,0,4,1,2,0,0,0,0,0,0,0,6,4,6,1,0,0,0,18,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.Node,Node/0,true,271,0,1,1,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.Node,Node/1[int],true,278,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.Node,"Node/2[int,DataStructures.Lists.Node]",true,288,1,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,12,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive$Node,Node/1[int],true,236,0,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CircleLinkedList.java,DataStructures.Lists.CircleLinkedList,remove/1[int],false,44,2,0,0,0,4,0,15,1,4,1,0,0,0,1,0,0,0,1,2,7,0,1,0,0,0,20,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CircleLinkedList.java,DataStructures.Lists.CircleLinkedList,CircleLinkedList/0,true,21,2,1,0,1,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CircleLinkedList.java,DataStructures.Lists.CircleLinkedList,getSize/0,false,28,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CircleLinkedList.java,DataStructures.Lists.CircleLinkedList,append/1[E],false,34,2,1,0,1,2,0,7,0,0,1,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,12,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SJF.java,Others.Schedule,timeElapsed/1[int],false,129,0,1,1,0,2,3,8,2,0,1,3,0,0,0,0,0,0,0,4,0,0,1,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SJF.java,Others.Schedule,Schedule/0,true,42,1,2,1,1,3,7,27,0,3,0,7,0,0,1,1,0,0,2,3,16,0,2,0,0,0,20,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SJF.java,Others.Schedule,solve/0,false,147,0,1,1,0,3,6,18,0,4,0,6,0,0,2,0,0,1,8,5,7,10,1,0,0,0,17,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SJF.java,Others.Schedule,startScheduling/0,false,74,2,5,1,4,4,10,31,0,1,0,10,3,1,1,3,0,2,1,3,1,2,2,2,0,0,19,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SJF.java,Others.Schedule,removeFinishedProcess/0,false,114,0,1,1,0,4,6,13,0,4,0,6,0,0,2,1,0,0,0,3,5,0,2,0,0,0,6,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SJF.java,Others.Schedule,ageing/1[int],false,138,0,1,1,0,3,2,8,0,1,1,2,0,0,1,1,0,0,0,2,1,1,2,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\GCDRecursion.java,Maths.GCDRecursion,main/1[java.lang.String[]],false,5,1,1,0,1,1,2,5,0,0,1,2,1,1,0,0,0,0,0,8,0,0,0,0,0,0,3,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\GCDRecursion.java,Maths.GCDRecursion,"gcd/2[int,int]",false,18,1,3,2,1,6,2,14,3,0,2,2,1,0,0,3,0,0,0,5,0,3,1,0,0,0,13,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\RodCutting.java,DynamicProgramming.RodCutting,"cutRod/2[int[],int]",false,9,1,1,1,0,3,1,10,1,4,2,1,0,0,2,0,0,0,0,6,7,3,2,0,0,0,7,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\RodCutting.java,DynamicProgramming.RodCutting,main/1[java.lang.String[]],false,24,2,1,0,1,1,2,5,0,2,1,2,1,1,0,0,0,0,1,5,2,1,0,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\JumpSearch.java,Searches.JumpSearch,main/1[java.lang.String[]],false,5,1,2,0,2,4,1,9,0,3,1,1,0,0,1,3,0,0,0,16,3,0,1,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\JumpSearch.java,Searches.JumpSearch,"find/2[T[],T]",false,23,1,0,0,0,5,3,14,2,4,2,3,0,0,2,1,0,0,0,4,5,4,2,0,0,0,21,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\QueueUsingTwoStacks.java,Others.QueueUsingTwoStacks,main/1[java.lang.String[]],false,99,1,6,0,6,1,7,24,0,1,1,7,0,0,0,0,0,0,0,5,1,0,0,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\HorspoolSearch.java,strings.HorspoolSearch,"findFirst/2[java.lang.String,java.lang.String]",false,52,1,1,0,1,1,1,3,1,0,2,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,23,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\HorspoolSearch.java,strings.HorspoolSearch,"firstOccurrence/3[java.lang.String,java.lang.String,boolean]",false,85,1,5,2,3,5,5,22,2,4,3,5,3,1,2,1,0,2,0,8,7,7,3,0,0,0,53,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\HorspoolSearch.java,strings.HorspoolSearch,"findFirstInsensitive/2[java.lang.String,java.lang.String]",false,63,1,1,0,1,1,1,3,1,0,2,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,24,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\HorspoolSearch.java,strings.HorspoolSearch,calcShiftValues/1[java.lang.String],false,143,0,1,1,0,2,3,10,1,5,1,3,0,0,1,0,0,0,0,3,5,2,1,0,0,1,50,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\HorspoolSearch.java,strings.HorspoolSearch,"charEquals/3[char,char,boolean]",false,126,0,1,1,0,3,1,6,2,0,3,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,20,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\HorspoolSearch.java,strings.HorspoolSearch,getShiftValue/1[char],false,165,0,1,1,0,2,1,8,2,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,25,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\HorspoolSearch.java,strings.HorspoolSearch,getLastComparisons/0,false,72,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FindMinRecursion.java,Maths.FindMinRecursion,"min/2[int[],int]",false,53,2,3,2,1,2,2,3,1,0,2,2,1,0,0,1,0,0,0,4,0,2,0,0,0,0,13,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FindMinRecursion.java,Maths.FindMinRecursion,main/1[java.lang.String[]],false,9,2,2,0,2,4,7,10,0,4,1,7,2,1,1,2,0,0,0,6,5,3,1,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FindMinRecursion.java,Maths.FindMinRecursion,"min/3[int[],int,int]",false,33,2,3,2,1,2,2,9,2,3,3,2,1,0,0,1,0,1,0,2,3,3,1,0,0,0,22,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\WordBoggle.java,WordBoggle,"explore/6[int,int,char[][],TrieNode,boolean[][],java.util.Set<java.lang.String>]",false,59,4,4,2,2,5,5,13,2,2,6,5,2,1,1,0,0,0,0,2,5,0,1,0,0,0,12,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\WordBoggle.java,WordBoggle,main/1[java.lang.String[]],false,21,2,1,0,1,1,3,4,0,1,1,3,1,3,0,0,0,1,17,0,1,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\WordBoggle.java,WordBoggle,"boggleBoard/2[char[][],java.lang.String[]]",false,10,4,4,1,3,4,2,8,1,5,2,2,1,2,3,0,0,0,0,2,5,0,2,0,0,0,33,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\WordBoggle.java,WordBoggle,"getNeighbors/3[int,int,char[][]]",false,77,1,1,1,0,13,1,12,1,1,3,1,0,0,0,0,0,0,0,27,1,18,1,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\Caesar.java,ciphers.Caesar,"decode/2[java.lang.String,int]",false,57,1,3,1,2,6,4,20,1,4,2,4,2,1,1,0,0,2,1,4,10,2,2,0,0,0,28,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\Caesar.java,ciphers.Caesar,IsSmallLatinLetter/1[char],false,94,0,2,2,0,3,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\Caesar.java,ciphers.Caesar,main/1[java.lang.String[]],false,98,1,2,0,2,5,8,22,0,4,1,8,2,3,0,0,0,0,6,2,4,3,1,0,0,0,23,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\Caesar.java,ciphers.Caesar,"encode/2[java.lang.String,int]",false,21,1,3,1,2,6,4,20,1,4,2,4,2,1,1,0,0,2,1,4,10,2,2,0,0,0,26,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\Caesar.java,ciphers.Caesar,IsCapitalLatinLetter/1[char],false,86,0,2,2,0,3,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\EmptyHeapException.java,DataStructures.Heaps.EmptyHeapException,EmptyHeapException/1[java.lang.String],true,9,0,4,4,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SJF.java,Others.Schedule$Anonymous1,"compare/2[Others.Process,Others.Process]",false,79,1,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SJF.java,Others.Schedule$Anonymous2,"compare/2[Others.Process,Others.Process]",false,97,1,0,0,0,1,0,7,1,4,2,0,0,0,0,0,0,2,0,0,4,7,0,0,0,0,9,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\GnomeSort.java,Sorts.GnomeSort,main/1[java.lang.String[]],false,30,2,4,0,4,1,4,10,0,3,1,4,0,0,0,0,0,0,14,15,3,0,0,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\GnomeSort.java,Sorts.GnomeSort,sort/1[T[]],false,14,2,2,0,2,4,2,14,1,2,1,2,0,0,1,1,0,0,0,5,4,2,4,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BucketSort.java,Sorts.BucketSort,max/1[int[]],false,87,1,1,1,0,3,0,9,1,1,1,0,0,0,1,0,0,0,0,1,2,0,2,0,0,0,10,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BucketSort.java,Sorts.BucketSort,min/1[int[]],false,103,1,1,1,0,3,0,9,1,1,1,0,0,0,1,0,0,0,0,1,2,0,2,0,0,0,10,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BucketSort.java,Sorts.BucketSort,"hash/3[int,int,int]",false,77,0,1,1,0,1,0,3,1,0,3,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,23,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BucketSort.java,Sorts.BucketSort,main/1[java.lang.String[]],false,10,2,1,0,1,3,2,11,0,5,1,2,1,2,2,0,0,0,0,7,6,3,1,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BucketSort.java,Sorts.BucketSort,bucketSort/1[int[]],false,32,2,4,1,3,6,7,22,0,7,1,7,3,1,5,0,0,0,0,3,8,2,2,0,0,0,19,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PerfectNumber.java,Maths.PerfectNumber,isPerfectNumber/1[int],false,23,0,1,1,0,4,0,9,1,2,1,0,0,0,1,2,0,0,0,3,3,1,2,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PerfectNumber.java,Maths.PerfectNumber,main/1[java.lang.String[]],false,11,1,1,0,1,1,1,5,0,0,1,1,1,1,0,0,0,0,0,3,0,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\PriorityQueues.java,DataStructures.Queues.PriorityQueues,main/1[java.lang.String[]],false,106,1,3,0,3,2,3,8,0,2,1,3,0,0,1,0,0,0,1,7,2,1,1,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\SearchAlgorithm.java,Searches.SearchAlgorithm,"find/2[T[],T]",false,10,1,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\SimpleSubstitutionCipher.java,ciphers.SimpleSubstitutionCipher,main/1[java.lang.String[]],false,82,1,2,0,2,1,3,5,0,2,1,3,2,1,0,0,0,0,3,0,2,0,0,0,0,0,19,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\SimpleSubstitutionCipher.java,ciphers.SimpleSubstitutionCipher,"encode/2[java.lang.String,java.lang.String]",false,23,0,1,1,0,4,7,17,1,7,2,7,0,0,2,0,0,0,1,2,10,0,2,0,0,0,20,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\SimpleSubstitutionCipher.java,ciphers.SimpleSubstitutionCipher,"decode/2[java.lang.String,java.lang.String]",false,56,0,1,1,0,4,7,17,1,7,2,7,0,0,2,0,0,0,1,2,10,0,2,0,0,0,22,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\Heap.java,DataStructures.Heaps.Heap,getElement/0,false,19,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\Heap.java,DataStructures.Heaps.Heap,insertElement/1[DataStructures.Heaps.HeapElement],false,26,1,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\Heap.java,DataStructures.Heaps.Heap,deleteElement/1[int],false,34,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTIterative.java,BSTIterative,preorder/0,false,226,1,0,0,0,5,6,21,1,2,0,6,0,0,1,3,0,0,3,0,2,1,2,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTIterative.java,BSTIterative,postorder/0,false,196,1,0,0,0,8,7,30,1,3,0,7,0,0,2,5,0,0,4,0,6,2,4,0,0,0,18,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTIterative.java,BSTIterative,remove/1[int],false,99,1,2,2,0,13,0,63,0,6,1,0,0,0,2,11,0,0,0,4,27,0,4,0,0,0,29,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTIterative.java,BSTIterative,BSTIterative/0,true,19,0,2,2,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,12,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTIterative.java,BSTIterative,main/1[java.lang.String[]],false,24,1,5,0,5,1,4,16,0,1,1,4,4,1,0,0,0,0,5,12,1,0,0,0,0,0,28,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTIterative.java,BSTIterative,find/1[int],false,254,1,2,2,0,4,1,17,2,1,1,1,0,0,1,1,0,0,2,0,3,2,2,0,0,0,28,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTIterative.java,BSTIterative,add/1[int],false,51,1,3,2,1,6,1,33,1,4,1,1,0,0,1,3,0,0,1,4,13,1,2,0,0,0,29,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTIterative.java,BSTIterative,inorder/0,false,175,1,2,2,0,5,6,19,1,2,0,6,0,0,2,3,0,0,3,0,5,1,2,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,main/1[java.lang.String[]],false,592,1,2,0,2,5,6,31,0,7,1,6,2,10,0,0,1,0,8,7,10,2,2,0,0,0,29,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,subBytesDec/1[java.math.BigInteger],false,407,2,3,1,2,2,2,7,1,2,1,2,2,1,1,0,0,0,0,2,3,0,1,0,0,0,28,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,subBytes/1[java.math.BigInteger],false,389,2,3,1,2,2,2,7,1,2,1,2,2,1,1,0,0,0,0,2,3,0,1,0,0,0,25,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,"decrypt/2[java.math.BigInteger,java.math.BigInteger]",false,569,1,6,1,5,2,5,14,1,2,2,5,5,5,1,0,0,0,0,4,10,0,1,0,0,0,35,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,"scheduleCore/2[java.math.BigInteger,int]",false,223,0,1,1,0,5,6,23,1,6,2,6,0,0,3,1,0,2,1,18,13,10,2,0,0,0,20,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,mergeCellsIntoBlock/1[int[]],false,357,1,6,6,0,3,2,11,1,3,1,2,0,0,2,0,0,0,1,4,5,1,2,0,0,0,24,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,mixColumns/1[java.math.BigInteger],false,496,2,3,1,2,2,2,12,1,4,1,2,2,1,1,0,0,0,0,33,8,14,1,0,0,0,22,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,mixColumnsDec/1[java.math.BigInteger],false,517,2,3,1,2,2,2,12,1,4,1,2,2,1,1,0,0,0,0,33,8,14,1,0,0,0,25,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,"encrypt/2[java.math.BigInteger,java.math.BigInteger]",false,540,1,6,1,5,2,5,14,1,2,2,5,5,5,1,0,0,0,0,4,10,0,1,0,0,0,31,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,shiftRowsDec/1[java.math.BigInteger],false,460,2,3,1,2,1,2,21,1,2,1,2,2,1,0,0,0,0,0,33,18,0,0,0,0,0,25,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,splitBlockIntoCells/1[java.math.BigInteger],false,332,1,6,6,0,3,4,12,1,4,1,4,0,0,2,0,0,1,0,8,6,4,1,0,0,0,20,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,shiftRows/1[java.math.BigInteger],false,423,2,3,1,2,1,2,21,1,2,1,2,2,1,0,0,0,0,0,33,18,0,0,0,0,0,22,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,keyExpansion/1[java.math.BigInteger],false,272,1,3,2,1,2,6,19,1,9,1,6,1,1,1,0,0,0,20,23,15,5,1,0,0,0,30,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AES.java,ciphers.AES,"addRoundKey/2[java.math.BigInteger,java.math.BigInteger]",false,379,0,2,2,0,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\IterativeTernarySearch.java,Searches.IterativeTernarySearch,main/1[java.lang.String[]],false,50,1,2,0,2,2,9,12,0,8,1,9,0,0,0,1,0,0,2,3,8,1,0,0,0,1,31,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\IterativeTernarySearch.java,Searches.IterativeTernarySearch,"find/2[T[],T]",false,26,1,0,0,0,5,1,19,3,6,2,1,0,0,1,2,0,2,0,10,8,9,2,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\SkylineAlgorithm.java,divideconquer.SkylineAlgorithm$XComparator,"compare/2[divideconquer.SkylineAlgorithm.Point,divideconquer.SkylineAlgorithm.Point]",false,165,1,0,0,0,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Combinations.java,Maths.Combinations,factorial/1[int],false,18,1,3,2,1,4,1,6,1,0,1,1,1,0,0,2,0,0,1,5,0,2,1,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Combinations.java,Maths.Combinations,main/1[java.lang.String[]],false,5,1,1,0,1,5,1,6,0,0,1,1,1,2,0,4,0,0,0,12,0,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Combinations.java,Maths.Combinations,"combinations/2[int,int]",false,32,1,2,1,1,1,1,3,1,0,2,1,1,1,0,0,0,1,0,0,0,3,0,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\BalancedBrackets.java,DataStructures.Stacks.BalancedBrackets,isBalanced/1[java.lang.String],false,48,1,3,2,1,11,5,25,3,1,1,5,1,1,1,1,0,0,1,0,1,0,3,0,0,0,16,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\BalancedBrackets.java,DataStructures.Stacks.BalancedBrackets,main/1[java.lang.String[]],false,74,1,1,0,1,1,1,4,0,0,1,1,1,2,0,0,0,0,2,0,0,0,0,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\BalancedBrackets.java,DataStructures.Stacks.BalancedBrackets,"isPaired/2[char,char]",false,27,1,1,1,0,4,0,9,2,1,2,0,0,0,1,2,0,0,0,2,1,0,2,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\CheckAnagrams.java,strings.CheckAnagrams,"isAnagrams/2[java.lang.String,java.lang.String]",false,24,0,1,1,0,6,8,25,3,8,2,8,0,0,3,1,0,0,0,6,10,2,2,0,0,0,27,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\CheckAnagrams.java,strings.CheckAnagrams,main/1[java.lang.String[]],false,11,1,1,0,1,1,1,5,0,0,1,1,1,1,0,0,0,0,6,0,0,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\PrintTopViewofTree.java,DataStructures.Trees.TreeNode,TreeNode/1[int],true,14,0,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\EulersFunction.java,Others.EulersFunction,getEuler/1[int],false,11,0,1,1,0,5,0,11,1,2,1,0,0,0,2,2,0,0,0,4,5,5,3,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\EulersFunction.java,Others.EulersFunction,main/1[java.lang.String[]],false,23,1,1,0,1,2,2,5,0,1,1,2,1,1,1,0,0,0,0,2,1,0,1,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\ConvolutionFFT.java,com.maths.ConvolutionFFT,"convolutionFFT/2[java.util.ArrayList<com.maths.FFT.Complex>,java.util.ArrayList<com.maths.FFT.Complex>]",false,40,3,4,1,3,2,8,12,1,3,2,8,1,1,1,0,0,0,0,2,3,2,1,0,0,0,51,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\ConvolutionFFT.java,com.maths.ConvolutionFFT,"padding/2[java.util.ArrayList<com.maths.FFT.Complex>,int]",false,18,1,2,1,1,3,2,6,0,2,2,2,0,0,1,0,0,0,0,1,2,1,2,0,0,0,21,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Alphabetical.java,strings.Alphabetical,isAlphabetical/1[java.lang.String],false,24,0,1,1,0,4,4,9,2,1,1,4,0,0,1,0,0,1,0,3,2,2,2,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Alphabetical.java,strings.Alphabetical,main/1[java.lang.String[]],false,10,1,1,0,1,1,1,7,0,0,1,1,1,1,0,0,0,0,5,0,0,0,0,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\LinkedQueue.java,DataStructures.Queues.LinkedQueue$Node,Node/0,true,10,0,1,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\LinkedQueue.java,DataStructures.Queues.LinkedQueue$Node,"Node/2[int,DataStructures.Queues.LinkedQueue.Node]",true,18,1,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\LinkedQueue.java,DataStructures.Queues.LinkedQueue$Node,Node/1[int],true,14,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CRCAlgorithm.java,Others.CRCAlgorithm,generateRandomMess/0,false,107,0,0,0,0,2,3,6,0,2,0,3,0,0,1,0,0,0,0,3,2,0,1,0,0,0,18,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CRCAlgorithm.java,Others.CRCAlgorithm,"CRCAlgorithm/3[java.lang.String,int,double]",true,40,0,0,0,0,2,4,16,0,1,3,4,0,0,1,0,0,0,0,5,12,0,1,0,0,0,48,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CRCAlgorithm.java,Others.CRCAlgorithm,refactor/0,false,98,0,0,0,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,30,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CRCAlgorithm.java,Others.CRCAlgorithm,getWrongMessNotCaught/0,false,81,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CRCAlgorithm.java,Others.CRCAlgorithm,getCorrectMess/0,false,90,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CRCAlgorithm.java,Others.CRCAlgorithm,getWrongMess/0,false,62,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CRCAlgorithm.java,Others.CRCAlgorithm,divideMessageWithP/1[boolean],false,125,0,0,0,0,18,8,45,0,5,1,8,0,0,6,3,0,0,0,13,6,1,4,0,0,0,53,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CRCAlgorithm.java,Others.CRCAlgorithm,changeMess/0,false,174,0,0,0,0,7,3,20,0,1,0,3,0,0,2,1,0,0,0,5,3,0,3,0,0,0,44,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CRCAlgorithm.java,Others.CRCAlgorithm,getWrongMessCaught/0,false,71,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\AnytoAny.java,Conversions.AnytoAny,main/1[java.lang.String[]],false,10,0,0,0,0,3,3,20,0,7,1,3,0,0,2,2,0,2,0,9,14,6,1,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\ColorContrastRatio.java,Misc.ColorContrastRatio,getColor/1[int],false,52,1,2,1,1,2,2,4,1,1,1,2,1,1,0,0,0,2,0,5,1,3,0,0,0,0,27,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\ColorContrastRatio.java,Misc.ColorContrastRatio,test/0,false,73,1,4,1,3,7,2,19,0,11,0,2,2,4,0,6,0,0,6,12,11,0,0,0,0,0,33,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\ColorContrastRatio.java,Misc.ColorContrastRatio,getColorSRgb/1[double],false,62,0,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,26,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\ColorContrastRatio.java,Misc.ColorContrastRatio,getRelativeLuminance/1[java.awt.Color],false,38,1,3,2,1,1,4,6,1,3,1,4,1,2,0,0,0,0,0,3,3,5,0,0,0,0,29,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\ColorContrastRatio.java,Misc.ColorContrastRatio,main/1[java.lang.String[]],false,101,1,1,0,1,1,1,3,0,0,1,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,2,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\ColorContrastRatio.java,Misc.ColorContrastRatio,"getContrastRatio/2[java.awt.Color,java.awt.Color]",false,21,1,2,1,1,2,1,6,2,2,2,1,1,3,0,0,0,4,0,4,2,6,1,0,0,0,28,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\PriorityQueues.java,DataStructures.Queues.PriorityQueue,peek/0,false,63,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,8,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\PriorityQueues.java,DataStructures.Queues.PriorityQueue,PriorityQueue/1[int],true,24,1,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,12,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\PriorityQueues.java,DataStructures.Queues.PriorityQueue,insert/1[int],false,35,1,2,1,1,4,1,14,0,1,1,1,1,1,1,0,0,0,1,4,3,3,2,0,0,0,19,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\PriorityQueues.java,DataStructures.Queues.PriorityQueue,isEmpty/0,false,72,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\PriorityQueues.java,DataStructures.Queues.PriorityQueue,remove/0,false,54,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\PriorityQueues.java,DataStructures.Queues.PriorityQueue,isFull/0,false,81,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\PriorityQueues.java,DataStructures.Queues.PriorityQueue,getSize/0,false,90,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\PrintTopViewofTree.java,DataStructures.Trees.PrintTopViewofTree,main/1[java.lang.String[]],false,83,2,3,0,3,1,2,11,0,2,1,2,0,0,0,0,0,0,1,6,7,0,0,0,0,0,13,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\FordFulkerson.java,DynamicProgramming.FordFulkerson,main/1[java.lang.String[]],false,13,2,1,0,1,1,2,15,0,0,1,2,1,1,0,0,0,0,2,30,11,1,0,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\FordFulkerson.java,DynamicProgramming.FordFulkerson,"networkFlow/2[int,int]",false,31,1,1,1,0,11,12,36,1,11,2,12,0,0,6,5,0,0,3,8,19,4,4,0,0,0,23,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Graphs.java,DataStructures.Graphs.AdjacencyListGraph,toString/0,false,98,0,0,0,0,3,3,15,1,1,0,3,0,0,2,0,0,0,5,0,1,0,2,0,0,0,21,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Graphs.java,DataStructures.Graphs.AdjacencyListGraph,"removeEdge/2[E,E]",false,52,2,1,0,1,4,2,11,2,1,2,2,0,0,1,2,0,0,0,1,2,0,2,0,0,0,30,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Graphs.java,DataStructures.Graphs.AdjacencyListGraph,"addEdge/2[E,E]",false,71,2,2,0,2,8,3,21,1,2,2,3,0,0,1,6,0,0,0,2,6,0,2,0,0,0,31,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Graphs.java,DataStructures.Graphs.AdjacencyListGraph,AdjacencyListGraph/0,true,9,1,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\ValidBSTOrNot.java,DataStructures.Trees.ValidBSTOrNot,"isBSTUtil/3[DataStructures.Trees.ValidBSTOrNot.Node,int,int]",false,28,2,3,2,1,4,1,5,3,0,3,1,1,0,0,1,0,1,0,2,0,2,1,0,0,0,12,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\ValidBSTOrNot.java,DataStructures.Trees.ValidBSTOrNot,isBST/1[DataStructures.Trees.ValidBSTOrNot.Node],false,22,2,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\Vigenere.java,ciphers.Vigenere,"decrypt/2[java.lang.String,java.lang.String]",false,32,0,1,1,0,4,8,19,1,4,2,8,0,0,1,0,0,6,0,6,5,9,3,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\Vigenere.java,ciphers.Vigenere,"encrypt/2[java.lang.String,java.lang.String]",false,11,0,1,1,0,4,8,19,1,4,2,8,0,0,1,0,0,4,0,6,5,11,3,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\Vigenere.java,ciphers.Vigenere,main/1[java.lang.String[]],false,54,1,2,0,2,1,3,8,0,3,1,3,2,1,0,0,0,0,2,0,3,0,0,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CountChar.java,Others.CountChar,CountCharacters/1[java.lang.String],false,21,0,1,1,0,1,2,3,1,0,1,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,15,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CountChar.java,Others.CountChar,main/1[java.lang.String[]],false,7,1,1,0,1,1,5,7,0,2,1,5,1,1,0,0,0,0,3,0,2,1,0,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\ConnectedComponent.java,DataStructures.Graphs.Graph,"addEdge/2[E,E]",false,45,2,2,0,2,6,3,20,0,2,2,3,0,0,1,4,0,0,0,2,6,0,2,0,0,0,25,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\ConnectedComponent.java,DataStructures.Graphs.Graph,"depthFirstSearch/2[DataStructures.Graphs.Graph<E>.Node,java.util.ArrayList<DataStructures.Graphs.Graph<E>.Node>]",false,95,1,1,0,1,4,4,9,1,0,2,4,0,0,1,0,0,0,0,0,0,0,2,0,0,0,26,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\ConnectedComponent.java,DataStructures.Graphs.Graph,Graph/0,true,34,1,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\ConnectedComponent.java,DataStructures.Graphs.Graph,countGraphs/0,false,73,1,1,0,1,3,4,12,1,2,0,4,0,0,1,0,0,0,0,1,2,0,2,0,0,0,45,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\SaddlebackSearch.java,Searches.SaddlebackSearch,main/1[java.lang.String[]],false,52,2,1,0,1,3,4,15,0,8,1,4,1,1,2,0,0,0,1,6,9,2,2,0,0,0,16,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\SaddlebackSearch.java,Searches.SaddlebackSearch,"find/4[int[][],int,int,int]",false,27,2,3,2,1,5,1,15,4,1,4,1,1,0,0,1,0,0,0,7,3,2,1,0,0,0,31,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BubbleSort.java,Sorts.BubbleSort,main/1[java.lang.String[]],false,37,2,4,0,4,3,4,15,0,5,1,4,0,0,2,0,0,0,5,16,5,4,1,0,0,0,12,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BubbleSort.java,Sorts.BubbleSort,sort/1[T[]],false,20,2,2,0,2,5,2,15,1,4,1,2,0,0,2,0,0,0,0,6,5,4,3,0,0,0,22,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TrieImp.java,DataStructures.Trees.TrieImp,search/1[java.lang.String],false,41,1,1,1,0,3,2,12,2,4,1,2,0,0,1,1,0,0,0,1,5,1,2,0,0,0,11,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TrieImp.java,DataStructures.Trees.TrieImp,isValid/1[java.lang.String],false,76,0,1,1,0,1,1,3,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TrieImp.java,DataStructures.Trees.TrieImp,delete/1[java.lang.String],false,54,1,1,1,0,4,2,16,3,4,1,2,0,0,1,2,0,0,0,1,6,1,2,0,0,0,12,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TrieImp.java,DataStructures.Trees.TrieImp,main/1[java.lang.String[]],false,80,1,6,0,6,12,8,50,0,7,1,8,5,1,1,0,1,0,13,5,11,1,4,0,0,0,33,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TrieImp.java,DataStructures.Trees.TrieImp,sop/1[java.lang.String],false,71,0,1,1,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TrieImp.java,DataStructures.Trees.TrieImp,TrieImp/0,true,24,1,2,1,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TrieImp.java,DataStructures.Trees.TrieImp,insert/1[java.lang.String],false,28,1,2,1,1,3,2,12,0,3,1,2,0,0,1,1,0,0,0,1,7,2,2,0,0,0,10,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\Knapsack.java,DynamicProgramming.Knapsack,"knapSack/4[int,int[],int[],int]",false,6,1,1,1,0,8,1,13,1,3,4,1,0,0,2,4,0,0,0,13,6,10,4,0,0,0,12,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\Knapsack.java,DynamicProgramming.Knapsack,main/1[java.lang.String[]],false,25,2,1,0,1,1,2,6,0,3,1,2,1,1,0,0,0,0,0,7,3,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\InfixToPostfix.java,DataStructures.Stacks.InfixToPostfix,infix2PostFix/1[java.lang.String],false,12,2,3,1,2,11,11,31,1,2,1,11,1,1,4,3,0,0,1,0,2,0,3,0,0,0,12,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\InfixToPostfix.java,DataStructures.Stacks.InfixToPostfix,main/1[java.lang.String[]],false,6,1,1,0,1,1,2,5,0,0,1,2,1,2,0,0,0,0,6,0,0,0,0,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\InfixToPostfix.java,DataStructures.Stacks.InfixToPostfix,precedence/1[char],false,41,0,1,1,0,6,0,14,4,0,1,0,0,0,0,0,0,0,0,4,0,0,1,0,0,0,2,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MatrixChainMultiplication.java,DynamicProgramming.Matrix,row/0,false,132,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MatrixChainMultiplication.java,DynamicProgramming.Matrix,col/0,false,128,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MatrixChainMultiplication.java,DynamicProgramming.Matrix,"Matrix/3[int,int,int]",true,118,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MatrixChainMultiplication.java,DynamicProgramming.Matrix,count/0,false,124,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MinimumSumPartition.java,DynamicProgramming.MinimumSumPartition,"getMin/2[int[],int]",false,72,1,1,1,0,3,1,10,2,1,2,1,0,0,1,1,0,0,0,3,2,2,1,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MinimumSumPartition.java,DynamicProgramming.MinimumSumPartition,main/1[java.lang.String[]],false,84,2,1,0,1,4,1,5,0,0,1,1,1,2,0,3,0,0,0,15,0,0,0,0,0,0,7,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MinimumSumPartition.java,DynamicProgramming.MinimumSumPartition,subSet/1[int[]],false,22,3,3,1,2,9,2,32,1,10,1,2,2,1,5,1,0,0,0,17,16,10,3,0,0,0,15,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MinimumSumPartition.java,DynamicProgramming.MinimumSumPartition,getSum/1[int[]],false,64,1,1,1,0,2,0,7,1,1,1,0,0,0,1,0,0,0,0,1,2,0,1,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\QueueUsingTwoStacks.java,Others.QueueWithStack,peekFront/0,false,58,0,1,1,0,3,4,8,1,0,0,4,0,0,1,0,0,0,0,0,0,0,2,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\QueueUsingTwoStacks.java,Others.QueueWithStack,isEmpty/0,false,82,0,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,7,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\QueueUsingTwoStacks.java,Others.QueueWithStack,insert/1[java.lang.Object],false,33,0,1,1,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\QueueUsingTwoStacks.java,Others.QueueWithStack,remove/0,false,43,0,1,1,0,3,3,8,1,0,0,3,0,0,1,0,0,0,0,0,0,0,2,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\QueueUsingTwoStacks.java,Others.QueueWithStack,peekBack/0,false,73,0,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\QueueUsingTwoStacks.java,Others.QueueWithStack,QueueWithStack/0,true,23,0,1,1,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\CountingSort.java,Sorts.CountingSort,main/1[java.lang.String[]],false,65,2,6,0,6,1,11,18,0,3,1,11,0,0,0,0,0,0,16,12,3,0,0,0,0,0,14,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\CountingSort.java,Sorts.CountingSort,streamSort/1[java.util.List<T>],false,55,1,0,0,0,1,12,3,1,6,1,12,0,0,0,0,0,0,0,2,0,1,0,0,0,5,23,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\CountingSort.java,Sorts.CountingSort,sort/1[T[]],false,18,2,1,0,1,1,3,3,1,0,1,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\CountingSort.java,Sorts.CountingSort,sort/1[java.util.List<T>],false,30,1,1,1,0,3,8,11,1,4,1,8,0,0,2,0,0,0,0,3,3,1,2,0,0,1,26,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star$Graph,getNeighbours/1[int],false,23,1,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star$Graph,addEdge/1[A_Star.A_Star.Edge],false,28,1,5,1,4,1,4,4,0,0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star$Graph,Graph/1[int],true,16,1,1,1,0,2,0,6,0,1,1,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\AbsoluteMin.java,Maths.AbsoluteMin,absMin/1[int[]],false,25,1,1,1,0,3,1,9,1,3,1,1,0,0,1,0,0,0,0,2,4,0,2,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\AbsoluteMin.java,Maths.AbsoluteMin,main/1[java.lang.String[]],false,11,2,1,0,1,2,3,6,0,2,1,3,1,1,0,1,0,0,2,7,2,1,0,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\RangeInSortedArray.java,Misc.RangeInSortedArray,"alteredBinSearch/6[int[],int,int,int,int[],boolean]",false,26,2,2,1,1,9,1,16,1,1,6,1,1,0,0,4,0,1,0,11,3,9,5,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\RangeInSortedArray.java,Misc.RangeInSortedArray,"alteredBinSearchIter/6[int[],int,int,int,int[],boolean]",false,45,1,1,1,0,9,0,23,2,1,6,0,0,0,1,4,0,1,0,11,7,9,6,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\RangeInSortedArray.java,Misc.RangeInSortedArray,"getLessThan/4[int[],int,int,int]",false,70,1,1,1,0,4,0,12,1,2,4,0,0,0,1,0,0,1,0,5,5,5,3,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\RangeInSortedArray.java,Misc.RangeInSortedArray,"sortedRange/2[int[],int]",false,16,2,2,1,1,1,1,6,1,1,2,1,1,1,0,0,0,0,0,6,1,2,0,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\RangeInSortedArray.java,Misc.RangeInSortedArray,main/1[java.lang.String[]],false,7,2,1,0,1,1,2,5,0,0,1,2,1,2,0,0,0,0,0,26,0,0,0,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\RangeInSortedArray.java,Misc.RangeInSortedArray,"getCountLessThan/2[int[],int]",false,66,2,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,2,0,1,0,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FindMaxRecursion.java,Maths.FindMaxRecursion,"max/3[int[],int,int]",false,31,2,3,2,1,2,2,9,2,3,3,2,1,0,0,1,0,1,0,2,3,3,1,0,0,0,22,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FindMaxRecursion.java,Maths.FindMaxRecursion,"max/2[int[],int]",false,51,2,3,2,1,2,2,3,1,0,2,2,1,0,0,1,0,0,0,4,0,2,0,0,0,0,13,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FindMaxRecursion.java,Maths.FindMaxRecursion,main/1[java.lang.String[]],false,7,2,2,0,2,4,7,10,0,4,1,7,2,1,1,2,0,0,0,6,5,3,1,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$Node,getKey/0,false,137,0,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$Node,getNext/0,false,133,1,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$Node,Node/1[int],true,128,0,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$Node,setNext/1[DataStructures.HashMap.Hashing.HashMap.Node],false,141,1,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\IntegerToRoman.java,Conversions.IntegerToRoman,integerToRoman/1[int],false,17,0,1,1,0,4,2,14,2,4,1,2,0,0,2,0,0,0,1,3,5,2,2,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\IntegerToRoman.java,Conversions.IntegerToRoman,main/1[java.lang.String[]],false,36,1,1,0,1,1,2,3,0,0,1,2,1,1,0,0,0,0,0,1,0,0,0,0,0,0,2,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CursorLinkedList.java,DataStructures.Lists.CursorLinkedList$Node,"Node/2[T,int]",true,12,1,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\Queues.java,DataStructures.Queues.Queue,Queue/1[int],true,34,1,1,1,0,1,0,7,0,0,1,0,0,0,0,0,0,0,0,3,5,0,0,0,0,0,13,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\Queues.java,DataStructures.Queues.Queue,peekFront/0,false,77,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\Queues.java,DataStructures.Queues.Queue,isEmpty/0,false,95,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\Queues.java,DataStructures.Queues.Queue,remove/0,false,62,1,2,1,1,2,1,9,2,1,0,1,1,1,0,0,0,1,0,2,2,2,1,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\Queues.java,DataStructures.Queues.Queue,getSize/0,false,113,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\Queues.java,DataStructures.Queues.Queue,isFull/0,false,104,0,2,2,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\Queues.java,DataStructures.Queues.Queue,toString/0,false,118,0,1,1,0,3,5,12,1,2,0,5,0,0,1,1,0,0,3,1,3,2,2,0,0,0,9,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\Queues.java,DataStructures.Queues.Queue,Queue/0,true,25,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\Queues.java,DataStructures.Queues.Queue,insert/1[int],false,48,1,2,1,1,2,1,7,2,0,1,1,1,1,0,0,0,1,0,1,2,2,1,0,0,0,24,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\Queues.java,DataStructures.Queues.Queue,peekRear/0,false,86,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\StringMatchFiniteAutomata.java,StringMatchFiniteAutomata,"searchPat/2[java.lang.String,java.lang.String]",false,24,2,2,1,1,3,4,13,0,4,2,4,1,2,1,1,0,1,1,4,6,4,2,0,0,0,13,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\StringMatchFiniteAutomata.java,StringMatchFiniteAutomata,"computeFA/3[java.lang.String,int,int[][]]",false,44,2,2,1,1,3,1,7,0,2,3,1,1,1,2,0,0,0,0,2,3,0,2,0,0,0,13,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\StringMatchFiniteAutomata.java,StringMatchFiniteAutomata,main/1[java.lang.String[]],false,11,1,1,0,1,1,4,9,0,2,1,4,1,3,0,0,0,0,2,0,3,0,0,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\StringMatchFiniteAutomata.java,StringMatchFiniteAutomata,"getNextState/4[java.lang.String,int,int,int]",false,53,0,1,1,0,8,1,18,3,2,4,1,0,0,2,4,0,0,0,8,2,7,4,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\GenericArrayListQueue.java,DataStructures.Queues.GenericArrayListQueue,peek/0,false,31,2,1,0,1,2,2,7,1,1,0,2,0,0,0,0,0,0,0,1,2,0,1,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\GenericArrayListQueue.java,DataStructures.Queues.GenericArrayListQueue,poll/0,false,54,2,1,0,1,2,2,7,1,1,0,2,0,0,0,0,0,0,0,1,2,0,1,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\GenericArrayListQueue.java,DataStructures.Queues.GenericArrayListQueue,main/1[java.lang.String[]],false,67,1,4,0,4,12,4,16,0,1,1,4,0,0,0,11,0,0,2,7,1,0,0,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\GenericArrayListQueue.java,DataStructures.Queues.GenericArrayListQueue,hasElements/0,false,22,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\GenericArrayListQueue.java,DataStructures.Queues.GenericArrayListQueue,add/1[T],false,45,1,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,size2/1[DataStructures.Trees.GenericTree.Node],false,75,2,3,2,1,2,3,7,1,2,1,3,1,0,1,0,0,0,0,3,3,1,1,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,maxcall/0,false,88,1,1,0,1,1,1,4,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,12,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,postordercall/0,false,168,1,1,0,1,1,2,4,0,0,0,2,1,1,0,0,0,0,1,0,0,0,0,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,"find/2[DataStructures.Trees.GenericTree.Node,int]",false,130,2,3,2,1,4,3,7,3,1,2,3,1,0,1,1,0,0,0,1,1,0,2,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,display/0,false,50,1,1,0,1,1,1,3,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,8,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,height/1[DataStructures.Trees.GenericTree.Node],false,111,2,3,2,1,3,3,8,1,3,1,3,1,0,1,0,0,0,0,3,4,1,2,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,preordercall/0,false,157,1,1,0,1,1,2,4,0,0,0,2,1,1,0,0,0,0,1,0,0,0,0,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,display_1/1[DataStructures.Trees.GenericTree.Node],false,54,2,3,2,1,3,5,10,0,2,1,5,1,0,2,0,0,0,3,2,2,2,1,0,0,0,5,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,"create_treeG/3[DataStructures.Trees.GenericTree.Node,int,java.util.Scanner]",false,29,2,4,2,2,3,4,18,1,3,3,4,1,0,1,1,0,0,4,1,5,1,1,0,0,0,16,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,"max/2[DataStructures.Trees.GenericTree.Node,int]",false,93,2,3,2,1,3,3,7,1,1,2,3,1,0,1,0,0,0,0,1,3,0,1,0,0,0,4,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,removeleaves/1[DataStructures.Trees.GenericTree.Node],false,199,2,3,2,1,4,7,12,0,3,1,7,1,0,2,1,0,0,0,5,3,2,2,0,0,0,5,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,GenericTree/0,true,24,1,1,0,1,1,1,4,0,1,0,1,1,1,0,0,0,0,0,1,2,0,0,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,heightcall/0,false,107,1,1,0,1,1,1,3,1,0,0,1,1,1,0,0,0,0,0,1,0,1,0,0,0,0,15,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,findcall/1[int],false,126,1,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,preorder/1[DataStructures.Trees.GenericTree.Node],false,162,2,3,2,1,2,4,4,0,1,1,4,1,0,1,0,0,0,1,1,1,1,1,0,0,0,4,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,depthcaller/1[int],false,143,1,1,0,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,levelorder/0,false,179,1,0,0,0,3,8,13,0,3,0,8,0,0,2,0,0,0,2,1,3,1,2,0,0,0,13,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,"depth/2[DataStructures.Trees.GenericTree.Node,int]",false,147,2,3,2,1,3,4,8,2,1,2,4,1,0,1,1,0,0,0,3,1,1,1,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,removeleavescall/0,false,195,1,1,0,1,1,1,3,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,postorder/1[DataStructures.Trees.GenericTree.Node],false,173,2,3,2,1,2,4,4,0,1,1,4,1,0,1,0,0,0,1,1,1,1,1,0,0,0,4,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\GenericTree.java,DataStructures.Trees.GenericTree,size2call/0,false,71,1,1,0,1,1,1,3,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,20,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Ceil.java,Maths.Ceil,main/1[java.lang.String[]],false,6,1,1,0,1,2,3,7,0,3,1,3,1,1,1,1,0,0,0,2,3,0,1,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Ceil.java,Maths.Ceil,ceil/1[double],false,20,0,1,1,0,3,0,11,3,0,1,0,0,0,0,1,0,1,0,3,0,3,1,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\BinarySearch.java,Searches.BinarySearch,"search/4[T[],T,int,int]",false,44,2,3,2,1,4,2,14,4,2,4,2,1,0,0,1,0,1,0,6,2,4,1,0,0,0,27,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\BinarySearch.java,Searches.BinarySearch,main/1[java.lang.String[]],false,61,1,2,0,2,2,11,12,0,8,1,11,0,0,0,1,0,0,2,3,8,1,0,0,0,1,29,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\BinarySearch.java,Searches.BinarySearch,"find/2[T[],T]",false,31,2,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,19,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\ConnectedComponent.java,DataStructures.Graphs.Graph$Node,Node/1[E],true,17,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\BrianKernighanAlgorithm.java,Others.BrianKernighanAlgorithm,main/1[java.lang.String[]],false,33,1,1,0,1,1,4,7,0,3,1,4,1,1,0,0,0,0,0,0,3,0,0,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\BrianKernighanAlgorithm.java,Others.BrianKernighanAlgorithm,countSetBits/1[int],false,23,0,1,1,0,2,0,8,1,1,1,0,0,0,1,1,0,1,0,3,2,1,1,0,0,0,14,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\MinimizingLateness\MinimizingLateness.java,MinimizingLateness.MinimizingLateness$Schedule,"Schedule/2[int,int]",true,16,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\FloydWarshall.java,DataStructures.Graphs.FloydWarshall,FloydWarshall/1[int],true,10,1,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\FloydWarshall.java,DataStructures.Graphs.FloydWarshall,main/1[java.lang.String[]],false,53,2,2,0,2,5,4,23,0,6,1,4,1,1,2,2,0,0,3,6,9,2,3,0,0,0,24,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\FloydWarshall.java,DataStructures.Graphs.FloydWarshall,floydwarshall/1[int[][]],false,22,1,1,1,0,10,2,25,0,8,1,2,0,0,8,0,0,0,3,8,10,5,4,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\PrintTopViewofTree.java,DataStructures.Trees.Tree,Tree/0,true,38,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\PrintTopViewofTree.java,DataStructures.Trees.Tree,printTopView/0,false,47,2,2,1,1,6,6,19,1,5,0,6,0,0,1,3,0,0,1,3,5,3,2,0,0,0,13,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\PrintTopViewofTree.java,DataStructures.Trees.Tree,Tree/1[DataStructures.Trees.TreeNode],true,42,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BinaryTree.java,DataStructures.Trees.BinaryTree$Node,Node/1[int],true,37,0,1,1,0,1,0,6,0,0,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,15,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST,treeMinimum/1[DataStructures.Trees.RedBlackBST.Node],false,194,1,1,1,0,2,0,6,1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,7,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST,printTree/1[DataStructures.Trees.RedBlackBST.Node],false,24,2,5,4,1,3,2,8,1,0,1,2,1,0,0,2,0,2,5,0,0,1,1,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST,insert/1[DataStructures.Trees.RedBlackBST.Node],false,62,2,2,1,1,7,1,34,0,1,1,1,1,2,1,3,0,0,0,0,11,0,4,0,0,0,11,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST,"transplant/2[DataStructures.Trees.RedBlackBST.Node,DataStructures.Trees.RedBlackBST.Node]",false,185,1,1,1,0,3,0,10,0,0,2,0,0,0,0,2,0,0,0,0,4,0,1,0,0,0,6,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST,rotateRight/1[DataStructures.Trees.RedBlackBST.Node],false,159,1,2,2,0,4,0,26,0,1,1,0,0,0,0,3,0,0,0,0,14,0,2,0,0,0,7,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST,delete/1[DataStructures.Trees.RedBlackBST.Node],false,201,2,5,1,4,6,4,31,2,3,1,4,4,2,0,5,0,1,0,0,14,0,3,0,0,0,16,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST,deleteFixup/1[DataStructures.Trees.RedBlackBST.Node],false,232,2,3,1,2,14,2,59,0,2,1,2,2,1,1,13,0,0,0,0,27,0,3,0,0,0,11,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST,rotateLeft/1[DataStructures.Trees.RedBlackBST.Node],false,134,1,2,2,0,4,0,26,0,1,1,0,0,0,0,3,0,0,0,0,14,0,2,0,0,0,7,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST,deleteDemo/0,false,311,2,4,0,4,2,8,20,0,3,0,8,3,4,0,0,0,0,5,0,3,1,1,0,0,0,15,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST,"findNode/2[DataStructures.Trees.RedBlackBST.Node,DataStructures.Trees.RedBlackBST.Node]",false,44,2,3,2,1,7,1,19,5,0,2,1,1,0,0,4,0,0,0,0,0,0,2,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST,printTreepre/1[DataStructures.Trees.RedBlackBST.Node],false,34,2,3,2,1,3,2,8,1,0,1,2,1,1,0,2,0,2,5,0,0,1,1,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST,insertDemo/0,false,289,2,4,0,4,3,6,19,0,3,0,6,3,4,2,1,0,0,2,1,4,0,2,0,0,0,12,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST,fixTree/1[DataStructures.Trees.RedBlackBST.Node],false,93,2,3,1,2,9,2,40,0,1,1,2,2,1,1,8,0,0,0,0,18,0,3,0,0,0,11,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Average.java,Maths.Average,average/1[int[]],false,35,1,1,1,0,2,0,7,1,2,1,0,0,0,1,0,0,1,0,2,3,1,1,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Average.java,Maths.Average,main/1[java.lang.String[]],false,7,3,2,0,2,5,3,7,0,1,1,3,2,1,0,1,0,0,0,29,1,3,0,0,0,0,13,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Average.java,Maths.Average,average/1[double[]],false,21,1,1,1,0,2,0,7,1,1,1,0,0,0,1,0,0,0,0,1,2,1,1,0,0,0,13,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\PerfectBinarySearch.java,Searches.PerfectBinarySearch,"binarySearch/2[int[],int]",false,7,1,1,1,0,4,0,17,2,3,2,0,0,0,1,1,0,1,0,6,5,5,2,0,0,0,6,8,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\PerfectBinarySearch.java,Searches.PerfectBinarySearch,main/1[java.lang.String[]],false,25,2,2,0,2,3,1,6,0,2,1,1,1,1,0,2,0,0,0,15,2,0,0,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Kruskal.java,Kruskal$Edge,"Edge/3[int,int,int]",true,25,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PowerOfTwoOrNot.java,Maths.PowerOfTwoOrNot,checkIfPowerOfTwoOrNot/1[int],false,20,0,1,1,0,3,0,3,1,0,1,0,0,0,0,2,0,3,0,3,0,1,0,0,0,0,21,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PowerOfTwoOrNot.java,Maths.PowerOfTwoOrNot,main/1[java.lang.String[]],false,6,1,1,0,1,1,1,7,0,0,1,1,1,1,0,0,0,0,0,5,0,0,0,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KMP.java,Others.KMP,"KMPmatcher/2[java.lang.String,java.lang.String]",false,13,2,2,1,1,6,4,18,0,5,2,4,1,1,2,3,0,1,1,6,7,5,2,0,0,0,12,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KMP.java,Others.KMP,computePrefixFunction/1[java.lang.String],false,35,1,1,1,0,5,2,16,1,4,1,2,0,0,2,2,0,0,0,6,7,1,2,0,0,0,8,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KMP.java,Others.KMP,main/1[java.lang.String[]],false,6,1,1,0,1,1,1,5,0,2,1,1,1,2,0,0,0,0,2,0,2,0,0,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\SkylineAlgorithm.java,divideconquer.SkylineAlgorithm,SkylineAlgorithm/0,true,18,1,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\SkylineAlgorithm.java,divideconquer.SkylineAlgorithm,getPoints/0,false,23,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\SkylineAlgorithm.java,divideconquer.SkylineAlgorithm,produceSubSkyLines/1[java.util.ArrayList<divideconquer.SkylineAlgorithm.Point>],false,40,2,4,1,3,7,7,30,3,6,1,7,2,1,1,2,0,0,0,10,6,1,3,0,0,0,62,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\SkylineAlgorithm.java,divideconquer.SkylineAlgorithm,"produceFinalSkyLine/2[java.util.ArrayList<divideconquer.SkylineAlgorithm.Point>,java.util.ArrayList<divideconquer.SkylineAlgorithm.Point>]",false,87,1,1,1,0,9,4,25,1,4,2,4,0,0,3,2,0,0,0,8,6,3,3,0,0,0,49,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\EditDistance.java,DynamicProgramming.EditDistance,"minDistance/2[java.lang.String,java.lang.String]",false,26,1,1,1,0,8,2,29,1,13,2,2,0,0,4,1,0,0,0,17,18,11,3,0,0,0,13,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\EditDistance.java,DynamicProgramming.EditDistance,main/1[java.lang.String[]],false,67,1,1,0,1,1,4,11,0,4,1,4,1,1,0,0,0,0,5,0,4,1,0,0,0,0,17,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Buffers\CircularBuffer.java,DataStructures.Buffers.CircularBuffer,main/1[java.lang.String[]],false,112,3,3,0,3,1,3,11,0,4,1,3,0,0,0,0,0,0,0,2,4,0,0,0,0,0,17,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Buffers\CircularBuffer.java,DataStructures.Buffers.CircularBuffer,IsPowerOfTwo/1[int],false,21,0,1,1,0,2,0,3,1,0,1,0,0,0,0,1,0,2,0,2,0,1,0,0,0,0,5,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Buffers\CircularBuffer.java,DataStructures.Buffers.CircularBuffer,readOutChar/0,false,29,1,2,1,1,2,4,9,1,1,0,4,1,1,0,0,0,0,0,1,2,0,1,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Buffers\CircularBuffer.java,DataStructures.Buffers.CircularBuffer,getTrueIndex/1[int],false,25,0,2,2,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Buffers\CircularBuffer.java,DataStructures.Buffers.CircularBuffer,writeToCharBuffer/1[char],false,43,1,2,1,1,2,3,10,1,1,1,3,1,1,0,0,0,0,0,0,3,0,1,0,0,0,12,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Buffers\CircularBuffer.java,DataStructures.Buffers.CircularBuffer,CircularBuffer/1[int],true,13,2,2,1,1,2,1,7,0,0,1,1,1,1,0,0,0,0,0,0,2,0,1,0,0,0,12,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SkylineProblem.java,Others.SkylineProblem$Skyline,"Skyline/2[int,int]",true,110,0,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\CombSort.java,Sorts.CombSort,main/1[java.lang.String[]],false,63,2,3,0,3,1,3,7,0,2,1,3,0,0,0,0,0,0,1,18,2,0,0,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\CombSort.java,Sorts.CombSort,nextGap/1[int],false,21,0,1,1,0,2,0,4,1,0,1,0,0,0,0,0,0,2,0,4,1,2,0,0,0,0,3,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\CombSort.java,Sorts.CombSort,sort/1[T[]],false,34,3,3,0,3,5,3,15,1,4,1,3,1,1,2,1,0,0,0,2,7,3,3,0,0,0,21,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\PrimMST.java,DataStructures.Graphs.PrimMST,"minKey/2[int[],java.lang.Boolean[]]",false,13,1,1,1,0,4,0,8,1,3,2,0,0,0,1,1,0,0,0,2,5,0,2,0,0,0,6,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\PrimMST.java,DataStructures.Graphs.PrimMST,main/1[java.lang.String[]],false,84,2,2,0,2,1,1,5,0,2,1,1,1,2,0,0,0,0,0,25,2,0,0,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\PrimMST.java,DataStructures.Graphs.PrimMST,"printMST/3[int[],int,int[][]]",false,28,1,1,1,0,2,1,4,0,1,3,1,0,0,1,0,0,0,3,1,1,1,1,0,0,0,6,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\PrimMST.java,DataStructures.Graphs.PrimMST,primMST/1[int[][]],false,36,2,3,1,2,7,2,20,0,7,1,2,2,1,3,2,0,0,0,9,14,1,3,0,0,0,15,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\LevelOrderTraversalQueue.java,DataStructures.Trees.LevelOrderTraversalQueue,printLevelOrder/1[DataStructures.Trees.LevelOrderTraversalQueue.Node],false,23,1,0,0,0,4,4,14,0,2,1,4,0,0,1,2,0,0,1,0,2,1,2,0,0,0,8,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CRC32.java,Others.CRC32,crc32/1[byte[]],false,16,1,1,1,0,4,3,10,1,3,1,3,0,0,1,1,0,5,0,11,6,4,2,0,0,0,12,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CRC32.java,Others.CRC32,crc32/1[java.lang.String],false,12,1,2,1,1,1,2,3,1,0,1,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CRC32.java,Others.CRC32,main/1[java.lang.String[]],false,8,1,1,0,1,1,3,3,0,0,1,3,1,2,0,0,0,0,1,0,0,0,0,0,0,0,3,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\LucasSeries.java,Maths.LucasSeries,main/1[java.lang.String[]],false,5,1,2,0,2,15,2,9,0,0,1,2,2,1,0,14,0,0,0,28,0,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\LucasSeries.java,Maths.LucasSeries,lucasSeries/1[int],false,22,1,3,2,1,3,1,3,1,0,1,1,1,0,0,2,0,0,0,6,0,3,0,0,0,0,10,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\LucasSeries.java,Maths.LucasSeries,lucasSeriesIteration/1[int],false,33,0,1,1,0,2,0,10,1,4,1,0,0,0,1,0,0,0,0,3,6,1,1,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\LevelOrderTraversal.java,DataStructures.Trees.LevelOrderTraversal,"printGivenLevel/2[DataStructures.Trees.LevelOrderTraversal.Node,int]",false,41,2,3,2,1,4,2,8,1,0,2,2,1,0,0,2,0,0,1,4,0,3,2,0,0,0,7,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\LevelOrderTraversal.java,DataStructures.Trees.LevelOrderTraversal,height/1[DataStructures.Trees.LevelOrderTraversal.Node],false,32,2,3,2,1,2,2,6,2,0,1,2,1,0,0,1,0,0,0,2,0,1,2,0,0,0,4,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\LevelOrderTraversal.java,DataStructures.Trees.LevelOrderTraversal,LevelOrderTraversal/1[DataStructures.Trees.LevelOrderTraversal.Node],true,18,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\LevelOrderTraversal.java,DataStructures.Trees.LevelOrderTraversal,printLevelOrder/0,false,23,1,2,0,2,2,2,5,0,2,0,2,2,1,1,0,0,0,0,1,2,0,1,0,0,0,8,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PrimeCheck.java,Maths.PrimeCheck,main/1[java.lang.String[]],false,6,1,1,0,1,2,5,12,0,2,1,5,1,1,0,0,0,0,3,0,2,2,1,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PrimeCheck.java,Maths.PrimeCheck,isPrime/1[int],false,24,0,1,1,0,6,1,14,4,2,1,1,0,0,1,3,0,0,0,7,3,2,2,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,removeDuplicates/1[DataStructures.Lists.DoublyLinkedList],false,208,2,1,0,1,4,1,11,0,2,1,1,1,2,2,3,0,0,0,0,4,0,3,0,0,0,11,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,insertTail/1[int],false,63,2,6,4,2,2,1,14,0,1,1,1,1,1,0,0,0,0,0,0,7,0,1,0,0,0,20,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,insertOrdered/1[int],false,174,2,4,1,3,5,2,14,0,2,1,2,2,3,1,3,0,0,0,0,7,0,3,0,0,0,19,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,isEmpty/0,false,233,0,2,2,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,8,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,delete/1[int],false,149,2,4,2,2,5,2,18,0,1,1,2,2,1,1,4,0,0,1,0,4,0,3,0,0,0,24,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,display/0,false,238,1,2,1,1,2,2,8,0,1,0,2,0,0,1,1,0,0,0,0,2,0,1,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,DoublyLinkedList/1[int[]],true,35,2,1,0,1,3,1,7,0,0,1,1,1,2,1,1,0,0,0,0,1,0,1,0,0,0,28,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,deleteHead/0,false,111,1,2,2,0,2,0,12,1,1,0,0,0,0,0,1,0,0,0,0,4,0,1,0,0,0,13,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,"insertElementByIndex/2[int,int]",false,83,2,4,1,3,5,2,23,0,3,2,2,2,3,1,2,0,0,2,2,8,1,3,0,0,0,29,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,insertHead/1[int],false,48,2,5,3,2,2,1,8,0,1,1,1,1,1,0,0,0,0,0,0,5,0,1,0,0,0,19,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,DoublyLinkedList/0,true,23,0,1,1,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,deleteTail/0,false,130,1,3,3,0,2,0,12,1,1,0,0,0,0,0,1,0,0,0,0,4,0,1,0,0,0,13,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,deleteNode/1[DataStructures.Lists.Link],false,196,2,2,0,2,3,2,13,0,0,1,2,2,1,0,2,0,0,0,0,2,0,1,0,0,0,20,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\DoublyLinkedList.java,DataStructures.Lists.DoublyLinkedList,clearList/0,false,222,0,1,1,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,7,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PerfectSquare.java,Maths.PerfectSquare,main/1[java.lang.String[]],false,5,1,1,0,1,1,1,7,0,0,1,1,1,1,0,0,0,0,0,5,0,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PerfectSquare.java,Maths.PerfectSquare,isPerfectSquare/1[int],false,19,0,1,1,0,2,1,4,1,1,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackOfLinkedList.java,DataStructures.Stacks.StackOfLinkedList,main/1[java.lang.String[]],false,11,1,5,0,5,3,6,13,0,1,1,6,0,0,0,2,0,0,2,7,1,2,0,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\Fibonacci.java,DynamicProgramming.Fibonacci,fibBotUp/1[int],false,52,0,1,1,0,3,2,14,1,3,1,2,0,0,1,0,0,0,0,4,4,3,2,0,0,0,25,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\Fibonacci.java,DynamicProgramming.Fibonacci,fibMemo/1[int],false,30,1,3,2,1,3,4,14,2,1,1,4,1,0,0,0,0,0,0,3,2,3,1,0,0,0,23,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\Fibonacci.java,DynamicProgramming.Fibonacci,fibOptimized/1[int],false,79,0,1,1,0,3,0,12,2,4,1,0,0,0,1,1,0,0,0,5,6,1,1,0,0,0,51,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\Fibonacci.java,DynamicProgramming.Fibonacci,main/1[java.lang.String[]],false,12,1,3,0,3,1,6,8,0,2,1,6,3,1,0,0,0,0,0,0,2,0,0,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\EggDropping.java,DynamicProgramming.EggDropping,main/1[java.lang.String[]],false,39,1,1,0,1,1,2,5,0,3,1,2,1,1,0,0,0,0,0,2,3,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\EggDropping.java,DynamicProgramming.EggDropping,"minTrials/2[int,int]",false,8,1,1,1,0,7,1,19,1,7,2,1,0,0,5,0,0,0,0,15,12,6,4,0,0,0,10,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT$Complex,divide/1[com.maths.FFT.Complex],false,136,1,2,0,2,1,1,6,1,1,1,1,1,1,0,0,0,4,0,0,3,10,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT$Complex,multiply/1[com.maths.FFT.Complex],false,89,1,5,4,1,1,0,6,1,1,1,0,0,0,0,0,0,0,0,0,3,6,0,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT$Complex,multiply/1[double],false,102,1,1,0,1,1,0,6,1,1,1,0,0,0,0,0,0,0,0,0,3,2,0,0,0,0,13,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT$Complex,Complex/0,true,23,0,11,11,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,8,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT$Complex,"Complex/2[double,double]",true,34,0,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,13,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT$Complex,add/1[com.maths.FFT.Complex],false,63,1,2,1,1,1,0,6,1,1,1,0,0,0,0,0,0,0,0,0,3,2,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT$Complex,conjugate/0,false,114,1,1,0,1,1,0,6,1,1,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,8,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT$Complex,getImaginary/0,false,53,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT$Complex,subtract/1[com.maths.FFT.Complex],false,76,1,2,1,1,1,0,6,1,1,1,0,0,0,0,0,0,0,0,0,3,2,0,0,0,0,12,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT$Complex,abs/0,false,126,0,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT$Complex,getReal/0,false,44,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT$Complex,divide/1[double],false,149,1,3,2,1,1,0,6,1,1,1,0,0,0,0,0,0,0,0,0,3,2,0,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\StackPostfixNotation.java,Others.StackPostfixNotation,postfixEvaluate/1[java.lang.String],false,14,0,1,1,0,6,8,28,1,5,1,8,0,0,1,0,0,0,3,0,5,4,3,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\StackPostfixNotation.java,Others.StackPostfixNotation,main/1[java.lang.String[]],false,6,1,1,0,1,1,4,6,0,2,1,4,1,1,0,0,0,0,0,0,2,0,0,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\HexaDecimalToDecimal.java,Conversions.HexaDecimalToDecimal,main/1[java.lang.String[]],false,21,1,1,0,1,1,5,10,0,3,1,5,1,1,0,0,0,0,2,0,3,1,0,0,0,0,15,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\HexaDecimalToDecimal.java,Conversions.HexaDecimalToDecimal,getHexaToDec/1[java.lang.String],false,8,0,1,1,0,2,4,10,1,4,1,4,0,0,1,0,0,0,1,3,6,2,1,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\PalindromePrime.java,Misc.PalindromePrime,prime/1[int],false,15,0,1,1,0,3,1,8,2,1,1,1,0,0,1,1,0,0,0,3,2,1,2,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\PalindromePrime.java,Misc.PalindromePrime,reverse/1[int],false,24,0,1,1,0,2,0,9,1,1,1,0,0,0,1,1,0,0,0,5,4,1,1,0,0,0,2,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\PalindromePrime.java,Misc.PalindromePrime,functioning/1[int],false,34,1,3,1,2,5,3,13,1,2,1,3,2,1,1,2,0,0,2,5,3,2,2,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\PalindromePrime.java,Misc.PalindromePrime,main/1[java.lang.String[]],false,7,1,1,0,1,1,4,7,0,2,1,4,1,2,0,0,0,0,1,0,2,0,0,0,0,0,13,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray$DynamicArrayIterator,hasNext/0,false,151,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray$DynamicArrayIterator,forEachRemaining/1[java.util.function.Consumer<? super E>],false,177,1,1,0,1,2,3,6,0,1,1,3,0,0,1,0,0,0,0,1,1,0,1,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray$DynamicArrayIterator,remove/0,false,169,1,1,0,1,2,1,5,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray$DynamicArrayIterator,next/0,false,156,2,1,0,1,3,1,7,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,9,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star,"aStar/4[int,int,A_Star.A_Star.Graph,int[]]",false,145,4,8,1,7,7,15,17,1,6,4,15,0,0,2,1,0,2,0,7,7,3,4,0,0,1,19,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star,"initializeGraph/2[A_Star.A_Star.Graph,java.util.ArrayList<java.lang.Integer>]",false,91,2,3,1,2,2,3,5,0,1,2,3,0,0,1,0,0,0,0,4,2,2,1,0,0,0,5,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star,main/1[java.lang.String[]],false,124,4,4,0,4,1,4,8,0,4,1,4,2,1,0,0,0,0,0,95,4,0,0,0,0,0,13,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\ClosestPair.java,divideconquer.ClosestPair$Location,"Location/2[double,double]",true,50,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MaxHeap.java,DataStructures.Heaps.MaxHeap,toggleUp/1[int],false,50,2,5,2,3,2,5,7,0,1,1,5,2,1,1,0,0,0,0,4,2,4,1,0,0,0,9,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MaxHeap.java,DataStructures.Heaps.MaxHeap,getElementKey/1[int],false,38,1,4,3,1,1,2,3,1,0,1,2,0,0,0,0,0,0,0,1,0,1,0,0,0,0,5,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MaxHeap.java,DataStructures.Heaps.MaxHeap,toggleDown/1[int],false,60,2,4,1,3,7,6,15,0,2,1,6,2,1,1,0,0,7,0,16,5,16,2,0,0,0,11,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MaxHeap.java,DataStructures.Heaps.MaxHeap,getElement/0,false,118,3,2,0,2,2,1,8,1,0,0,1,1,5,0,0,1,0,1,0,0,0,1,0,0,0,11,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MaxHeap.java,DataStructures.Heaps.MaxHeap,MaxHeap/1[java.util.List<DataStructures.Heaps.HeapElement>],true,16,2,1,0,1,4,3,8,0,0,1,3,1,3,1,2,0,0,2,1,1,0,2,0,0,0,16,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MaxHeap.java,DataStructures.Heaps.MaxHeap,insertElement/1[DataStructures.Heaps.HeapElement],false,88,2,2,1,1,1,3,4,0,0,1,3,1,2,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MaxHeap.java,DataStructures.Heaps.MaxHeap,"swap/2[int,int]",false,43,1,2,2,0,1,2,5,0,1,2,2,0,0,0,0,0,0,0,4,1,4,0,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MaxHeap.java,DataStructures.Heaps.MaxHeap,deleteElement/1[int],false,94,2,6,1,5,10,10,13,0,0,1,10,4,3,0,0,1,8,2,7,0,6,2,0,0,0,23,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MaxHeap.java,DataStructures.Heaps.MaxHeap,extractMax/0,false,81,2,2,1,1,1,2,5,1,1,0,2,1,4,0,0,0,0,0,2,1,0,0,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MaxHeap.java,DataStructures.Heaps.MaxHeap,getElement/1[int],false,31,1,1,1,0,3,2,4,1,0,1,2,0,0,0,0,0,2,1,2,0,1,1,0,0,0,25,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Krishnamurthy.java,Others.Krishnamurthy,fact/1[int],false,6,0,1,1,0,2,0,5,1,2,1,0,0,0,1,0,0,0,0,2,3,1,1,0,0,0,4,8,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Krishnamurthy.java,Others.Krishnamurthy,main/1[java.lang.String[]],false,12,1,1,0,1,3,4,15,0,5,1,4,1,1,1,1,0,0,3,4,7,5,1,0,0,0,13,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\AbsoluteValue.java,Maths.AbsoluteValue,absVal/1[int],false,23,0,1,1,0,2,0,3,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,13,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\AbsoluteValue.java,Maths.AbsoluteValue,main/1[java.lang.String[]],false,7,1,1,0,1,2,3,7,0,3,1,3,1,1,1,1,0,0,0,2,3,0,1,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,setData/1[Item],false,168,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,setHead/1[DataStructures.Stacks.NodeStack<?>],false,136,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,isEmpty/0,false,107,1,1,0,1,2,1,3,1,0,0,1,1,1,0,1,0,0,0,1,0,0,0,0,0,0,15,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,getPrevious/0,false,148,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,getNext/0,false,140,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,setPrevious/1[DataStructures.Stacks.NodeStack<?>],false,152,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,getSize/0,false,156,0,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,print/0,false,125,1,1,0,1,2,3,5,0,1,0,3,0,0,1,1,0,0,0,0,2,0,1,0,0,0,18,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,push/1[Item],false,59,2,9,0,9,2,8,14,0,1,1,8,3,1,0,0,0,0,0,1,1,1,1,0,0,0,15,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,size/0,false,116,1,1,0,1,1,1,3,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,main/1[java.lang.String[]],false,10,1,5,0,5,1,5,17,0,3,1,5,0,0,0,0,0,0,5,5,3,2,0,0,0,0,9,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,pop/0,false,81,2,6,0,6,1,6,7,1,1,0,6,2,1,0,0,0,0,0,1,1,1,0,0,0,0,13,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,setNext/1[DataStructures.Stacks.NodeStack<?>],false,144,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,NodeStack/0,true,48,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,peek/0,false,98,2,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,getData/0,false,164,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,NodeStack/1[Item],true,50,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,getHead/0,false,132,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\NodeStack.java,DataStructures.Stacks.NodeStack,setSize/1[int],false,160,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Lower.java,strings.Lower,toLowerCase/1[java.lang.String],false,19,1,1,1,0,4,4,9,1,2,1,4,0,0,1,0,0,0,0,1,3,0,2,0,0,0,16,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Lower.java,strings.Lower,main/1[java.lang.String[]],false,6,1,1,0,1,2,3,6,0,1,1,3,1,1,1,0,0,0,4,0,1,0,1,0,0,0,10,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\WorstFit.java,Others.WorstFit,"findWorstFit/2[int[],int]",false,19,1,1,1,0,4,0,14,2,3,2,0,0,0,1,0,0,0,0,3,5,0,2,0,0,0,37,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\WorstFit.java,Others.WorstFit,"worstFit/2[int[],int[]]",false,47,2,1,0,1,3,2,11,1,2,2,2,1,1,1,1,0,0,0,0,3,0,2,0,0,0,61,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\WorstFit.java,Others.WorstFit,printMemoryAllocation/1[java.util.ArrayList<java.lang.Integer>],false,70,0,0,0,0,3,6,10,0,1,1,6,0,0,1,1,0,0,5,1,1,1,2,0,0,0,28,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\FirstFit.java,Others.FirstFit,printMemoryAllocation/1[java.util.ArrayList<java.lang.Integer>],false,62,0,0,0,0,3,6,10,0,1,1,6,0,0,1,1,0,0,5,1,1,1,2,0,0,0,28,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\FirstFit.java,Others.FirstFit,"findFirstFit/2[int[],int]",false,19,1,1,1,0,3,0,8,2,1,2,0,0,0,1,0,0,0,0,1,1,0,2,0,0,0,36,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\FirstFit.java,Others.FirstFit,"firstFit/2[int[],int[]]",false,39,2,1,0,1,3,2,11,1,2,2,2,1,1,1,1,0,0,0,0,3,0,2,0,0,0,61,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BitonicSort.java,Sorts.BitonicSort,printArray/1[int[]],false,60,1,1,1,0,2,2,5,0,2,1,2,0,0,1,0,0,0,1,1,2,1,1,0,0,0,4,8,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BitonicSort.java,Sorts.BitonicSort,main/1[java.lang.String[]],false,66,1,3,0,3,1,3,8,0,3,1,3,2,4,0,0,0,0,1,9,3,0,0,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BitonicSort.java,Sorts.BitonicSort,"sort/3[int[],int,int]",false,55,2,2,1,1,1,1,3,0,0,3,1,1,3,0,0,0,0,0,1,0,0,0,0,0,0,4,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BitonicSort.java,Sorts.BitonicSort,"bitonicMerge/4[int[],int,int,int]",false,24,2,4,2,2,3,2,8,0,2,4,2,2,1,1,0,0,0,0,2,2,4,2,0,0,0,10,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BitonicSort.java,Sorts.BitonicSort,"bitonicSort/4[int[],int,int,int]",false,37,2,4,2,2,2,2,8,0,1,4,2,2,2,0,0,0,0,0,4,1,2,1,0,0,0,6,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BitonicSort.java,Sorts.BitonicSort,"compAndSwap/4[int[],int,int,int]",false,10,1,1,1,0,5,0,7,0,1,4,0,0,0,0,2,0,2,0,2,3,0,1,0,0,0,5,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTIterative.java,BSTIterative$Node,Node/1[int],true,281,0,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\ClosestPair.java,divideconquer.ClosestPair,"yQuickSort/3[divideconquer.ClosestPair.Location[],int,int]",false,143,2,4,2,2,2,2,7,0,1,3,2,2,1,0,0,0,0,0,2,1,2,1,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\ClosestPair.java,divideconquer.ClosestPair,main/1[java.lang.String[]],false,302,1,4,0,4,2,4,27,0,3,1,4,3,5,1,0,0,0,12,40,15,6,1,0,0,0,22,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\ClosestPair.java,divideconquer.ClosestPair,setSecondCount/1[int],false,27,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\ClosestPair.java,divideconquer.ClosestPair,"xPartition/3[divideconquer.ClosestPair.Location[],int,int]",false,72,1,1,1,0,3,0,18,1,4,3,0,0,0,1,0,0,0,0,2,9,2,2,0,0,0,19,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\ClosestPair.java,divideconquer.ClosestPair,ClosestPair/1[int],true,35,1,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,6,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\ClosestPair.java,divideconquer.ClosestPair,createLocation/1[int],false,56,1,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\ClosestPair.java,divideconquer.ClosestPair,"closestPair/2[divideconquer.ClosestPair.Location[],int]",false,159,2,7,2,5,13,10,67,2,18,2,10,5,3,4,0,0,1,0,23,26,13,5,0,0,0,43,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\ClosestPair.java,divideconquer.ClosestPair,setMinNum/1[double],false,23,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\ClosestPair.java,divideconquer.ClosestPair,"xQuickSort/3[divideconquer.ClosestPair.Location[],int,int]",false,127,2,4,2,2,2,2,7,0,1,3,2,2,1,0,0,0,0,0,2,1,2,1,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\ClosestPair.java,divideconquer.ClosestPair,"buildLocation/2[double,double]",false,60,1,2,1,1,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\ClosestPair.java,divideconquer.ClosestPair,bruteForce/1[divideconquer.ClosestPair.Location[]],false,246,2,2,1,1,8,3,37,1,7,1,3,1,1,2,2,0,5,0,19,20,8,5,0,0,0,30,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\ClosestPair.java,divideconquer.ClosestPair,"yPartition/3[divideconquer.ClosestPair.Location[],int,int]",false,100,1,1,1,0,3,0,18,1,4,3,0,0,0,1,0,0,0,0,2,9,2,2,0,0,0,19,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\BinaryToHexadecimal.java,Conversions.BinaryToHexadecimal,main/1[java.lang.String[]],false,47,1,1,0,1,1,4,8,0,3,1,4,1,1,0,0,0,0,2,0,3,1,0,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\BinaryToHexadecimal.java,Conversions.BinaryToHexadecimal,binToHex/1[int],false,18,0,1,1,0,5,5,20,1,5,1,5,0,0,4,1,0,1,1,12,10,6,2,0,0,0,17,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RootPrecision.java,Others.RootPrecision,"squareRoot/2[int,int]",false,21,0,1,1,0,1,1,8,1,3,2,1,0,0,0,0,0,0,0,2,4,2,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RootPrecision.java,Others.RootPrecision,main/1[java.lang.String[]],false,7,1,1,0,1,1,4,7,0,3,1,4,1,1,0,0,0,0,0,0,3,0,0,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\MainLinearProbing.java,DataStructures.HashMap.Hashing.MainLinearProbing,main/1[java.lang.String[]],false,6,1,6,0,6,8,8,54,1,4,1,8,0,0,1,0,0,0,13,7,6,1,2,0,0,0,28,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TreeTraversal.java,DataStructures.Trees.TreeTraversal,main/1[java.lang.String[]],false,9,1,6,0,6,1,7,21,0,1,1,7,0,0,0,0,0,0,4,7,1,0,0,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LongestCommonSubsequence.java,DynamicProgramming.LongestCommonSubsequence,main/1[java.lang.String[]],false,51,1,1,0,1,2,3,11,0,3,1,3,1,2,0,1,0,0,6,0,3,4,1,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LongestCommonSubsequence.java,DynamicProgramming.LongestCommonSubsequence,"lcsString/3[java.lang.String,java.lang.String,int[][]]",false,34,1,1,1,0,5,5,18,1,3,3,5,0,0,1,1,0,0,0,7,3,5,2,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LongestCommonSubsequence.java,DynamicProgramming.LongestCommonSubsequence,"getLCS/2[java.lang.String,java.lang.String]",false,5,2,2,1,1,11,4,20,3,7,2,4,1,1,4,4,0,0,3,25,11,15,3,0,0,0,14,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Bags\Bag.java,DataStructures.Bags.Bag,main/1[java.lang.String[]],false,94,1,4,0,4,2,5,13,0,1,1,5,0,0,1,0,0,0,6,0,1,1,1,0,0,0,8,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Bags\Bag.java,DataStructures.Bags.Bag,add/1[Element],false,38,2,1,0,1,1,0,7,0,1,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,8,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Bags\Bag.java,DataStructures.Bags.Bag,isEmpty/0,false,28,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Bags\Bag.java,DataStructures.Bags.Bag,Bag/0,true,22,0,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Bags\Bag.java,DataStructures.Bags.Bag,contains/1[Element],false,52,2,1,0,1,3,4,9,2,1,1,4,0,0,1,0,0,0,0,0,1,0,2,0,0,0,17,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Bags\Bag.java,DataStructures.Bags.Bag,iterator/0,false,63,2,1,0,1,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Bags\Bag.java,DataStructures.Bags.Bag,size/0,false,33,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Cycles.java,DataStructures.Graphs.Cycle,printAll/0,false,70,0,1,1,0,3,7,9,0,2,0,7,0,0,2,0,0,0,1,3,2,1,2,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Cycles.java,DataStructures.Graphs.Cycle,"dfs/3[java.lang.Integer,java.lang.Integer,java.util.ArrayList<java.lang.Integer>]",false,49,1,3,2,1,6,5,20,0,1,3,5,1,0,1,2,0,0,0,4,3,1,4,0,0,0,9,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Cycles.java,DataStructures.Graphs.Cycle,Cycle/0,true,13,2,1,1,0,3,4,20,0,5,0,4,0,0,2,0,0,0,3,3,11,0,1,0,0,0,17,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Cycles.java,DataStructures.Graphs.Cycle,start/0,false,38,1,2,1,1,3,1,10,0,3,0,1,1,1,2,0,0,0,0,4,5,0,2,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\HeapSort.java,Sorts.HeapSort,sort/1[T[]],false,90,2,1,0,1,1,3,3,1,0,1,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\HeapSort.java,Sorts.HeapSort,sort/1[java.util.List<T>],false,95,2,4,1,3,2,5,11,1,4,1,5,0,0,1,0,0,0,1,2,4,0,1,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\HeapSort.java,Sorts.HeapSort,main/1[java.lang.String[]],false,116,2,3,0,3,1,2,5,0,2,1,2,0,0,0,0,0,0,0,9,2,0,0,0,0,0,12,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\ParseInteger.java,Maths.ParseInteger,main/1[java.lang.String[]],false,4,1,1,0,1,5,2,6,0,0,1,2,1,1,0,4,0,0,8,0,0,0,0,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\ParseInteger.java,Maths.ParseInteger,parseInt/1[java.lang.String],false,18,0,1,1,0,10,3,15,1,5,1,3,0,0,1,4,0,0,2,8,6,4,2,0,0,0,28,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\TopKWords.java,Others.TopKWords,main/1[java.lang.String[]],false,62,1,2,0,2,3,11,17,0,7,1,11,0,0,2,0,0,0,2,2,8,1,1,0,0,1,20,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Bags\Bag.java,DataStructures.Bags.Bag$ListIterator,ListIterator/1[DataStructures.Bags.Bag.Node<Element>],true,71,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Bags\Bag.java,DataStructures.Bags.Bag$ListIterator,remove/0,false,81,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Bags\Bag.java,DataStructures.Bags.Bag$ListIterator,hasNext/0,false,75,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Bags\Bag.java,DataStructures.Bags.Bag$ListIterator,next/0,false,85,2,1,0,1,2,1,6,1,1,0,1,0,0,0,0,0,0,0,0,2,0,1,0,0,0,9,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMapLinearProbing.java,DataStructures.HashMap.Hashing.HashMapLinearProbing,lengthenTable/0,false,145,0,1,1,0,1,2,5,0,0,0,2,0,0,0,0,0,0,1,2,2,2,0,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMapLinearProbing.java,DataStructures.HashMap.Hashing.HashMapLinearProbing,checkLoadFactor/0,false,155,1,2,1,1,2,2,10,0,1,0,2,1,1,0,0,0,0,3,1,1,3,1,0,0,0,24,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMapLinearProbing.java,DataStructures.HashMap.Hashing.HashMapLinearProbing,displayHashtable/0,false,101,0,1,1,0,4,2,10,0,1,0,2,0,0,1,2,0,0,4,1,1,2,2,0,0,0,17,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMapLinearProbing.java,DataStructures.HashMap.Hashing.HashMapLinearProbing,HashMapLinearProbing/1[int],true,20,0,1,1,0,1,0,6,0,0,1,0,0,0,0,0,0,0,0,1,4,0,0,0,0,0,25,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMapLinearProbing.java,DataStructures.HashMap.Hashing.HashMapLinearProbing,isFull/0,false,170,0,1,1,0,4,0,10,1,2,0,0,0,0,1,2,0,0,0,1,3,0,2,0,0,0,22,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMapLinearProbing.java,DataStructures.HashMap.Hashing.HashMapLinearProbing,findHash/1[int],false,117,1,3,1,2,6,4,26,3,3,1,4,2,1,1,0,1,0,3,5,5,2,3,0,0,0,35,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMapLinearProbing.java,DataStructures.HashMap.Hashing.HashMapLinearProbing,isEmpty/0,false,186,0,2,2,0,3,0,10,1,2,0,0,0,0,1,1,0,0,0,1,3,0,2,0,0,0,15,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMapLinearProbing.java,DataStructures.HashMap.Hashing.HashMapLinearProbing,hashing/1[int],false,33,0,3,3,0,2,0,7,1,1,1,0,0,0,0,0,0,0,0,1,2,1,1,0,0,0,24,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMapLinearProbing.java,DataStructures.HashMap.Hashing.HashMapLinearProbing,insertHash/1[int],false,46,1,3,1,2,6,3,21,2,3,1,3,2,1,1,2,0,0,1,3,5,1,2,0,0,0,36,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMapLinearProbing.java,DataStructures.HashMap.Hashing.HashMapLinearProbing,deleteHash/1[int],false,75,1,3,1,2,6,4,22,2,3,1,4,2,1,1,1,0,0,3,3,5,2,2,0,0,0,35,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\DecimalToHexaDecimal.java,Conversions.DecimalToHexaDecimal,decToHex/1[int],false,13,0,1,1,0,2,4,10,1,3,1,4,0,0,1,0,0,0,0,2,4,1,1,0,0,0,19,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\DecimalToHexaDecimal.java,Conversions.DecimalToHexaDecimal,main/1[java.lang.String[]],false,25,1,1,0,1,1,3,8,0,3,1,3,1,1,0,0,0,0,3,1,3,2,0,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FindMax.java,Maths.FindMax,main/1[java.lang.String[]],false,9,2,1,0,1,3,6,9,0,4,1,6,1,1,1,1,0,0,0,4,5,2,1,0,0,0,12,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FindMax.java,Maths.FindMax,findMax/1[int[]],false,30,1,1,1,0,3,0,9,1,2,1,0,0,0,1,0,0,0,0,2,3,0,2,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SkylineProblem.java,Others.SkylineProblem$Building,"Building/3[int,int,int]",true,121,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\OctalToHexadecimal.java,Conversions.OctalToHexadecimal,main/1[java.lang.String[]],false,47,1,2,0,2,1,6,9,0,4,1,6,2,1,0,0,0,0,2,0,4,1,0,0,0,0,13,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\OctalToHexadecimal.java,Conversions.OctalToHexadecimal,decimalToHex/1[int],false,35,0,1,1,0,3,1,11,2,3,1,1,0,0,1,0,0,0,3,4,5,3,1,0,0,0,17,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\OctalToHexadecimal.java,Conversions.OctalToHexadecimal,octToDec/1[java.lang.String],false,18,0,1,1,0,2,2,10,1,3,1,2,0,0,1,0,0,0,0,3,6,0,1,0,0,0,18,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\InsertDeleteInArray.java,Others.InsertDeleteInArray,main/1[java.lang.String[]],false,7,1,0,0,0,7,4,36,0,9,1,4,0,0,5,0,0,0,5,9,18,5,2,0,0,0,21,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\TwoPointers.java,Others.TwoPointers,"isPairedSum/2[int[],int]",false,33,1,1,1,0,4,1,17,2,2,2,1,0,0,1,1,0,0,0,2,2,3,2,0,0,0,33,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\TwoPointers.java,Others.TwoPointers,main/1[java.lang.String[]],false,12,2,1,0,1,1,1,10,0,2,1,1,1,1,0,0,0,0,0,16,5,0,0,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\InterpolationSearch.java,Searches.InterpolationSearch,"find/2[int[],int]",false,24,1,1,1,0,6,0,10,2,3,2,0,0,0,1,1,0,6,0,5,5,9,2,0,0,0,20,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\InterpolationSearch.java,Searches.InterpolationSearch,main/1[java.lang.String[]],false,48,2,2,0,2,2,9,12,0,8,1,9,1,1,0,1,0,0,2,3,8,1,0,0,0,1,30,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BubbleSortRecursion.java,Sorts.BubbleSortRecursion,sort/1[T[]],false,30,2,1,0,1,1,1,4,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BubbleSortRecursion.java,Sorts.BubbleSortRecursion,"bubbleSort/2[T[],int]",false,41,3,5,2,3,4,3,12,0,2,2,3,1,0,1,0,0,0,0,5,3,4,2,0,0,0,18,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BubbleSortRecursion.java,Sorts.BubbleSortRecursion,main/1[java.lang.String[]],false,7,1,2,0,2,3,3,12,0,5,1,3,0,0,2,0,0,1,0,8,6,3,1,0,0,0,11,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Median.java,Maths.Median,median/1[int[]],false,21,1,1,1,0,2,1,5,1,1,1,1,0,0,0,1,0,1,0,7,1,7,0,0,0,0,9,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Median.java,Maths.Median,main/1[java.lang.String[]],false,7,2,1,0,1,6,1,7,0,0,1,1,1,1,0,5,0,0,0,27,0,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\DecimalToOctal.java,Conversions.DecimalToOctal,main/1[java.lang.String[]],false,14,0,0,0,0,2,5,14,0,6,1,5,0,0,1,1,0,0,2,6,8,3,1,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\OctalToDecimal.java,Conversions.OctalToDecimal,main/1[java.lang.String[]],false,17,1,1,0,1,2,5,8,0,3,1,5,1,1,0,1,0,0,2,1,3,1,1,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\OctalToDecimal.java,Conversions.OctalToDecimal,convertOctalToDecimal/1[java.lang.String],false,32,0,1,1,0,2,2,10,2,1,1,2,0,0,0,0,1,0,1,2,1,0,1,0,0,0,22,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Dijkstra.java,Others.Graph$Edge,"Edge/3[java.lang.String,java.lang.String,int]",true,51,0,0,0,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LongestPalindromicSubsequence.java,test.LongestPalindromicSubsequence,"recursiveLPS/2[java.lang.String,java.lang.String]",false,27,1,3,2,1,5,4,23,1,4,2,4,1,0,0,3,0,0,2,13,8,8,3,0,0,0,10,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LongestPalindromicSubsequence.java,test.LongestPalindromicSubsequence,LPS/1[java.lang.String],false,21,1,2,1,1,1,3,5,1,1,1,3,1,1,0,0,0,0,0,0,2,0,0,0,0,0,11,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LongestPalindromicSubsequence.java,test.LongestPalindromicSubsequence,main/1[java.lang.String[]],false,10,1,1,0,1,1,2,8,0,4,1,2,1,2,0,0,0,0,4,0,4,2,0,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\Merge_K_SortedLinkedlist.java,DataStructures.Lists.Merge_K_SortedLinkedlist$Node,Node/1[int],true,49,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\AnyBaseToAnyBase.java,Conversions.AnyBaseToAnyBase,"base2base/3[java.lang.String,int,int]",false,87,0,1,1,0,7,3,18,2,5,3,3,0,0,2,2,0,3,2,7,10,11,2,0,0,0,27,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\AnyBaseToAnyBase.java,Conversions.AnyBaseToAnyBase,main/1[java.lang.String[]],false,23,1,2,0,2,8,7,34,0,4,1,7,2,1,1,0,1,0,11,0,4,2,3,0,0,0,34,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\AnyBaseToAnyBase.java,Conversions.AnyBaseToAnyBase,"validForBase/2[java.lang.String,int]",false,60,1,1,1,0,4,4,8,2,4,2,4,0,0,2,0,0,0,0,2,4,0,2,0,0,0,17,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,remove/1[int],false,76,2,3,0,3,3,4,6,1,1,1,4,0,0,0,0,0,0,0,2,2,2,1,0,0,0,30,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,getElement/1[int],false,117,1,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,stream/0,false,103,1,0,0,0,1,2,3,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,newCapacity/1[int],false,121,0,0,0,0,1,0,4,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,DynamicArray/1[int],true,25,0,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,isEmpty/0,false,99,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,getSize/0,false,90,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,main/1[java.lang.String[]],false,190,1,5,0,5,3,8,15,0,1,1,8,0,0,2,0,0,0,2,1,1,0,1,0,0,0,17,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,"fastRemove/2[java.lang.Object[],int]",false,107,0,0,0,0,2,1,7,0,1,2,1,0,0,0,0,0,0,0,2,3,3,1,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,"put/2[int,E]",false,56,1,0,0,0,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,13,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,add/1[E],false,41,2,1,0,1,2,2,7,0,0,1,2,0,0,0,1,0,0,0,1,2,1,1,0,0,0,20,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,iterator/0,false,142,1,1,0,1,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,toString/0,false,132,0,0,0,0,1,4,3,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,get/1[int],false,66,2,1,0,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\DynamicArray\DynamicArray.java,DataStructures.DynamicArray.DynamicArray,DynamicArray/0,true,32,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Pow.java,Maths.Pow,"pow/2[int,int]",false,19,0,1,1,0,2,0,7,1,2,2,0,0,0,1,0,0,0,0,2,3,0,1,0,0,0,16,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Pow.java,Maths.Pow,main/1[java.lang.String[]],false,5,1,1,0,1,5,2,6,0,0,1,2,1,1,0,4,0,0,0,16,0,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SJF.java,Others.SJF,main/1[java.lang.String[]],false,179,1,3,0,3,1,2,5,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BogoSort.java,Sorts.BogoSort,sort/1[T[]],false,30,2,2,0,2,2,2,6,1,0,1,2,2,1,1,0,0,0,0,0,0,0,1,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BogoSort.java,Sorts.BogoSort,nextPermutation/1[T[]],false,21,2,2,1,1,2,2,7,0,3,1,2,0,0,1,0,0,0,0,1,3,2,1,0,0,0,7,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BogoSort.java,Sorts.BogoSort,main/1[java.lang.String[]],false,38,2,4,0,4,1,3,7,0,3,1,3,0,0,0,0,0,0,5,9,3,0,0,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\BogoSort.java,Sorts.BogoSort,isSorted/1[T[]],false,13,2,2,1,1,3,1,6,2,1,1,1,0,0,1,0,0,0,0,3,1,2,2,0,0,0,6,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\TopKWords.java,Others.TopKWords$CountWords,CountWords/1[java.lang.String],true,13,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\TopKWords.java,Others.TopKWords$CountWords,getDictionary/0,false,17,0,1,1,0,8,8,40,2,4,0,8,0,0,1,2,2,0,2,5,9,1,5,0,0,0,16,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\BinaryToOctal.java,Conversions.BinaryToOctal,main/1[java.lang.String[]],false,17,1,1,0,1,1,4,7,0,2,1,4,1,1,0,0,0,0,2,0,2,1,0,0,0,0,16,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\BinaryToOctal.java,Conversions.BinaryToOctal,convertBinaryToOctal/1[int],false,31,0,1,1,0,3,0,16,1,5,1,0,0,0,2,1,0,0,1,10,11,4,2,0,0,0,19,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap,insertHash/1[int],false,22,2,3,1,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap,displayHashtable/0,false,33,1,2,1,1,2,3,6,0,1,0,3,0,0,1,0,0,0,1,1,1,0,1,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap,hashing/1[int],false,16,0,2,2,0,2,0,5,1,1,1,0,0,0,0,0,0,0,0,1,2,1,1,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap,deleteHash/1[int],false,27,2,3,1,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap,HashMap/1[int],true,7,1,2,1,1,2,0,7,0,1,1,0,0,0,1,0,0,0,0,1,4,0,1,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\SubsetSum.java,DynamicProgramming.SubsetSum,"subsetSum/2[int[],int]",false,21,2,1,1,0,6,0,20,1,6,2,0,0,0,4,0,0,1,0,17,11,12,3,0,0,0,23,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\SubsetSum.java,DynamicProgramming.SubsetSum,main/1[java.lang.String[]],false,6,2,1,0,1,1,1,7,0,1,1,1,1,1,0,0,0,0,0,9,1,0,0,0,0,0,8,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Cycles.java,DataStructures.Graphs.Cycles,main/1[java.lang.String[]],false,82,1,3,0,3,1,2,5,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\CharactersSame.java,strings.CharactersSame,main/1[java.lang.String[]],false,6,1,1,0,1,1,1,6,0,0,1,1,1,1,0,0,0,0,4,0,0,0,0,0,0,0,9,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\CharactersSame.java,strings.CharactersSame,isAllCharactersSame/1[java.lang.String],false,19,0,1,1,0,3,2,8,2,2,1,2,0,0,1,1,0,0,0,2,2,0,2,0,0,0,20,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackOfLinkedList.java,DataStructures.Stacks.LinkedListStack,getSize/0,false,132,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackOfLinkedList.java,DataStructures.Stacks.LinkedListStack,toString/0,false,108,1,0,0,0,2,5,9,1,2,0,5,0,0,1,1,0,0,2,1,3,1,1,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackOfLinkedList.java,DataStructures.Stacks.LinkedListStack,isEmpty/0,false,123,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,8,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackOfLinkedList.java,DataStructures.Stacks.LinkedListStack,push/1[int],false,68,1,2,1,1,1,0,7,1,1,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,17,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackOfLinkedList.java,DataStructures.Stacks.LinkedListStack,peek/0,false,100,0,1,1,0,2,0,6,1,0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackOfLinkedList.java,DataStructures.Stacks.LinkedListStack,LinkedListStack/0,true,57,0,1,1,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,8,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackOfLinkedList.java,DataStructures.Stacks.LinkedListStack,pop/0,false,82,1,1,1,0,2,0,11,1,2,0,0,0,0,0,1,0,0,1,1,4,0,1,0,0,0,22,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\SortUtils.java,Sorts.SortUtils,"swap/3[T[],int,int]",false,20,1,11,11,0,1,0,6,1,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,23,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\SortUtils.java,Sorts.SortUtils,"greater/2[T,T]",false,45,1,2,2,0,2,1,3,1,0,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,15,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\SortUtils.java,Sorts.SortUtils,"flip/3[T[],int,int]",false,76,2,2,1,1,2,1,5,0,0,3,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,16,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\SortUtils.java,Sorts.SortUtils,"less/2[T,T]",false,34,1,10,10,0,2,1,3,1,0,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,15,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\SortUtils.java,Sorts.SortUtils,print/1[java.util.List<?>],false,54,0,1,1,0,1,5,4,0,1,1,5,0,0,0,0,0,0,1,0,0,1,0,0,0,1,11,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\SortUtils.java,Sorts.SortUtils,print/1[java.lang.Object[]],false,65,0,11,11,0,1,2,3,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\Queues.java,DataStructures.Queues.Queues,main/1[java.lang.String[]],false,143,1,7,0,7,1,9,13,0,1,1,9,0,0,0,0,0,0,0,6,1,0,0,0,0,0,9,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Buffers\CircularBuffer.java,DataStructures.Buffers.CircularBuffer$TestReadWorker,run/0,false,93,1,1,0,1,4,8,19,1,1,0,8,0,0,1,1,1,0,1,1,1,0,3,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Buffers\CircularBuffer.java,DataStructures.Buffers.CircularBuffer$TestReadWorker,TestReadWorker/1[DataStructures.Buffers.CircularBuffer],true,88,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\MergeSort.java,Sorts.MergeSort,"doSort/3[T[],int,int]",false,28,2,4,2,2,2,2,8,0,1,3,2,2,1,0,0,0,1,0,2,1,3,1,0,0,0,15,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\MergeSort.java,Sorts.MergeSort,sort/1[T[]],false,18,2,1,0,1,1,1,4,1,0,1,1,1,2,0,0,0,0,0,2,0,1,0,0,0,0,15,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\MergeSort.java,Sorts.MergeSort,main/1[java.lang.String[]],false,73,1,3,0,3,3,3,13,0,5,1,3,0,0,2,0,0,0,5,16,5,4,1,0,0,0,12,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\MergeSort.java,Sorts.MergeSort,"merge/4[T[],int,int,int]",false,45,1,1,1,0,6,2,22,0,5,4,2,0,0,3,0,0,0,1,5,9,3,2,0,0,0,26,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Palindrome.java,strings.Palindrome,isPalindrome/1[java.lang.String],false,25,0,2,2,0,3,4,3,1,0,1,4,0,0,0,1,0,1,0,1,0,0,0,0,0,0,18,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Palindrome.java,strings.Palindrome,isPalindrome1/1[java.lang.String],false,53,0,1,1,0,5,2,11,3,2,1,2,0,0,1,2,0,0,0,3,2,1,2,0,0,0,20,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Palindrome.java,strings.Palindrome,main/1[java.lang.String[]],false,7,1,3,0,3,3,3,10,0,2,1,3,3,2,2,0,0,0,6,0,2,0,1,0,0,0,13,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Palindrome.java,strings.Palindrome,isPalindromeRecursion/1[java.lang.String],false,35,1,2,1,1,4,4,9,3,0,1,4,1,1,0,2,0,0,0,5,0,2,1,0,0,0,19,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\ColumnarTranspositionCipher.java,ciphers.ColumnarTranspositionCipher,"encrpyter/3[java.lang.String,java.lang.String,java.lang.String]",false,47,1,2,0,2,4,2,18,1,4,3,2,2,3,2,1,0,0,1,3,9,0,2,0,0,0,37,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\ColumnarTranspositionCipher.java,ciphers.ColumnarTranspositionCipher,decrypter/0,false,70,0,1,1,0,3,1,9,1,2,0,1,0,0,2,0,0,0,2,1,3,0,2,0,0,0,18,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\ColumnarTranspositionCipher.java,ciphers.ColumnarTranspositionCipher,"getColumn/3[java.lang.Object[][],int,int]",false,155,0,1,1,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,7,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\ColumnarTranspositionCipher.java,ciphers.ColumnarTranspositionCipher,abecedariumBuilder/1[int],false,182,0,1,1,0,2,0,6,0,1,1,0,0,0,1,0,0,0,1,1,3,0,1,0,0,0,24,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\ColumnarTranspositionCipher.java,ciphers.ColumnarTranspositionCipher,showTable/0,false,189,0,1,1,0,3,2,8,0,0,0,2,0,0,2,0,0,0,1,0,0,1,2,0,0,0,6,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\ColumnarTranspositionCipher.java,ciphers.ColumnarTranspositionCipher,numberOfRows/1[java.lang.String],false,111,0,1,1,0,2,1,8,2,0,1,1,0,0,0,0,0,1,0,1,0,5,1,0,0,0,23,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\ColumnarTranspositionCipher.java,ciphers.ColumnarTranspositionCipher,tableBuilder/1[java.lang.String],false,85,2,4,2,2,4,4,18,1,5,1,4,2,1,2,0,0,0,0,5,8,1,3,0,0,0,44,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\ColumnarTranspositionCipher.java,ciphers.ColumnarTranspositionCipher,main/1[java.lang.String[]],false,198,1,3,0,3,1,4,10,0,2,1,4,3,4,0,0,0,0,7,0,2,3,0,0,0,0,22,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\ColumnarTranspositionCipher.java,ciphers.ColumnarTranspositionCipher,"encrpyter/2[java.lang.String,java.lang.String]",false,25,1,4,1,3,3,3,13,1,4,2,3,3,3,2,0,0,0,1,3,7,0,2,0,0,0,26,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\ColumnarTranspositionCipher.java,ciphers.ColumnarTranspositionCipher,"switchColumns/4[java.lang.Object[][],int,int,java.lang.Object[]]",false,170,0,1,1,0,2,0,6,0,1,4,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,11,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\ColumnarTranspositionCipher.java,ciphers.ColumnarTranspositionCipher,sortTable/1[java.lang.Object[][]],false,133,1,4,2,2,5,3,15,1,5,1,3,2,1,3,0,0,0,0,10,5,1,3,0,0,0,11,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\ColumnarTranspositionCipher.java,ciphers.ColumnarTranspositionCipher,findElements/0,false,120,0,1,1,0,3,3,8,1,3,0,3,0,0,1,0,0,0,0,2,4,0,1,0,0,0,8,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\EulerMethod.java,Maths.EulerMethod,"eulerStep/4[double,double,double,java.util.function.BiFunction<java.lang.Double,java.lang.Double,java.lang.Double>]",false,57,0,1,1,0,2,1,7,1,1,4,1,0,0,0,0,0,0,1,1,1,2,1,0,0,0,30,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\EulerMethod.java,Maths.EulerMethod,main/1[java.lang.String[]],false,19,2,1,0,1,4,6,17,0,15,1,6,1,2,0,3,0,0,6,27,6,5,0,0,0,6,27,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\EulerMethod.java,Maths.EulerMethod,"eulerFull/5[double,double,double,double,java.util.function.BiFunction<java.lang.Double,java.lang.Double,java.lang.Double>]",false,81,2,2,1,1,4,2,20,1,5,5,2,1,1,1,0,0,0,2,1,7,0,1,0,0,0,46,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\MedianOfRunningArray.java,Misc.MedianOfRunningArray,insert/1[java.lang.Integer],false,21,0,1,1,0,2,3,4,0,0,1,3,0,0,0,0,0,0,0,1,0,1,1,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\MedianOfRunningArray.java,Misc.MedianOfRunningArray,main/1[java.lang.String[]],false,34,1,3,0,3,2,3,8,0,3,1,3,2,1,1,0,0,0,1,11,3,1,1,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\MedianOfRunningArray.java,Misc.MedianOfRunningArray,median/0,false,29,0,1,1,0,3,2,4,2,0,0,2,0,0,0,1,0,1,0,1,0,2,1,0,0,0,2,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Misc\MedianOfRunningArray.java,Misc.MedianOfRunningArray,MedianOfRunningArray/0,true,12,0,1,1,0,1,1,4,0,0,0,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\ValidBSTOrNot.java,DataStructures.Trees.ValidBSTOrNot$Node,Node/1[int],true,9,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\SumOfArithmeticSeries.java,Maths.SumOfArithmeticSeries,"sumOfSeries/3[double,double,int]",false,37,0,1,1,0,1,0,3,1,0,3,0,0,0,0,0,0,2,0,3,0,6,0,0,0,0,21,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\SumOfArithmeticSeries.java,Maths.SumOfArithmeticSeries,main/1[java.lang.String[]],false,12,1,1,0,1,6,2,7,0,0,1,2,1,1,0,5,0,0,0,25,0,0,0,0,0,0,3,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\BoardPath.java,DynamicProgramming.BoardPath,endAlgo/0,false,35,0,0,0,0,1,1,4,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\BoardPath.java,DynamicProgramming.BoardPath,"bpR/2[int,int]",false,40,1,2,1,1,4,1,11,3,2,2,1,1,0,1,1,0,0,0,5,3,1,1,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\BoardPath.java,DynamicProgramming.BoardPath,"bpIS/3[int,int,int[]]",false,64,1,0,0,0,4,0,11,1,3,3,0,0,0,2,0,0,0,0,7,6,3,2,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\BoardPath.java,DynamicProgramming.BoardPath,"bpRS/3[int,int,int[]]",false,51,2,2,1,1,5,1,13,4,2,3,1,1,0,1,2,0,0,0,6,4,1,1,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\BoardPath.java,DynamicProgramming.BoardPath,startAlgo/0,false,31,0,0,0,0,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Graphs.java,DataStructures.Graphs.AdjacencyListGraph$Vertex,Vertex/1[E],true,17,2,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Graphs.java,DataStructures.Graphs.AdjacencyListGraph$Vertex,removeAdjacentVertex/1[E],false,31,1,0,0,0,3,4,9,2,1,1,4,0,0,1,1,0,0,0,2,1,0,2,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Graphs.java,DataStructures.Graphs.AdjacencyListGraph$Vertex,addAdjacentVertex/1[DataStructures.Graphs.AdjacencyListGraph<E>.Vertex],false,22,1,0,0,0,3,2,8,2,0,1,2,0,0,1,1,0,0,0,1,0,0,2,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RestrictedTowerOfHanoi\Main\Hanoi.java,Hanoi,Hanoi/0,true,127,1,3,1,2,1,2,32,0,0,0,2,1,1,0,0,0,0,1,0,0,0,0,4,0,0,17,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RestrictedTowerOfHanoi\Main\Hanoi.java,Hanoi,startGame/0,false,181,1,3,2,1,2,4,13,0,1,0,4,1,1,1,0,0,0,1,2,6,1,1,0,0,0,15,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RestrictedTowerOfHanoi\Main\Hanoi.java,Hanoi,"towerOfHanoi/4[int,char,char,char]",false,212,1,3,2,1,2,7,28,1,0,4,7,1,0,0,1,0,0,0,8,0,3,1,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RestrictedTowerOfHanoi\Main\Hanoi.java,Hanoi,initialize/0,false,102,0,1,1,0,1,7,18,0,0,0,7,0,0,0,0,0,0,4,18,0,0,0,0,0,0,19,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RestrictedTowerOfHanoi\Main\Hanoi.java,Hanoi,paint/1[java.awt.Graphics],false,65,0,0,0,0,5,6,26,0,4,1,6,0,0,4,0,0,0,0,92,4,54,1,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RestrictedTowerOfHanoi\Main\Hanoi.java,Hanoi,main/1[java.lang.String[]],false,200,1,2,0,2,1,2,6,0,2,1,2,1,2,0,0,0,0,0,1,3,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RestrictedTowerOfHanoi\Main\Hanoi.java,Hanoi,updateStacks/0,false,29,0,1,1,0,9,10,35,0,5,0,10,0,0,0,8,0,0,0,15,5,8,3,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Buffers\CircularBuffer.java,DataStructures.Buffers.CircularBuffer$TestWriteWorker,run/0,false,71,2,2,0,2,4,5,13,1,0,0,5,1,1,1,0,1,0,0,1,0,0,3,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Buffers\CircularBuffer.java,DataStructures.Buffers.CircularBuffer$TestWriteWorker,getRandomChar/0,false,67,0,1,1,0,1,3,3,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Buffers\CircularBuffer.java,DataStructures.Buffers.CircularBuffer$TestWriteWorker,TestWriteWorker/1[DataStructures.Buffers.CircularBuffer],true,63,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,search/1[int],false,182,1,1,1,0,3,0,10,2,1,1,0,0,0,1,2,0,0,0,0,2,0,2,0,0,0,17,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,count/0,false,166,1,1,1,0,2,0,9,1,2,0,0,0,0,1,1,0,0,0,1,3,0,1,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,isEmpty/0,false,139,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,toString/0,false,209,1,2,2,0,2,2,9,1,2,0,2,0,0,1,1,0,0,2,0,3,1,1,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,"SinglyLinkedList/2[DataStructures.Lists.Node,int]",true,25,1,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,insertHead/1[int],false,35,1,2,1,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,1,0,0,0,0,0,0,15,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,size/0,false,148,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,insert/1[int],false,44,1,5,4,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,getNth/1[int],false,199,2,2,1,1,2,1,8,1,2,1,1,1,1,1,0,0,0,0,3,3,1,1,0,0,0,15,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,delete/0,false,84,1,2,1,1,1,1,3,0,0,0,1,1,2,0,0,0,0,0,1,0,1,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,clear/0,false,123,1,1,1,0,2,0,10,0,2,0,0,0,0,1,1,0,0,0,1,6,0,1,0,0,0,13,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,getHead/0,false,157,1,3,3,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,deleteHead/0,false,79,1,2,1,1,1,1,3,0,0,0,1,1,2,0,0,0,0,0,1,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,"insertNth/2[int,int]",false,54,2,5,3,2,4,1,22,2,3,2,1,1,1,1,2,0,0,0,4,9,1,1,0,0,0,28,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,deleteNth/1[int],false,89,2,4,3,1,3,1,18,1,4,1,1,1,1,1,1,0,0,0,5,9,2,1,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,"checkBounds/3[int,int,int]",false,116,0,3,3,0,3,0,5,0,0,3,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,SinglyLinkedList/0,true,14,0,2,2,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,7,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SinglyLinkedList.java,DataStructures.Lists.SinglyLinkedList,main/1[java.lang.String[]],false,220,1,14,0,14,9,14,28,0,1,1,14,13,6,0,7,1,0,3,20,1,0,1,0,0,0,13,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RabinKarp.java,RabinKarp,"searchPat/3[java.lang.String,java.lang.String,int]",false,23,0,1,1,0,9,4,28,0,7,3,4,0,0,3,3,0,5,1,10,15,19,4,0,0,0,14,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RabinKarp.java,RabinKarp,main/1[java.lang.String[]],false,11,1,1,0,1,1,3,9,0,3,1,3,1,1,0,0,0,0,2,1,4,0,0,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\MergeSortedArrayList.java,DataStructures.Lists.MergeSortedArrayList,"merge/3[java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>]",false,34,0,1,1,0,6,3,18,0,2,3,3,0,0,3,0,0,0,0,2,2,0,2,0,0,0,18,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\MergeSortedArrayList.java,DataStructures.Lists.MergeSortedArrayList,main/1[java.lang.String[]],false,8,1,1,0,1,2,3,13,0,4,1,3,1,1,1,0,0,0,3,4,5,4,1,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Upper.java,strings.Upper,toUpperCase/1[java.lang.String],false,19,1,1,1,0,4,4,9,1,2,1,4,0,0,1,0,0,0,0,1,3,0,2,0,0,0,16,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Upper.java,strings.Upper,main/1[java.lang.String[]],false,6,1,1,0,1,2,3,6,0,1,1,3,1,1,1,0,0,0,4,0,1,0,1,0,0,0,10,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\RomanToInteger.java,Conversions.RomanToInteger$Anonymous1,(initializer 1),false,12,0,1,0,1,1,1,9,0,0,0,1,0,0,0,0,0,0,0,7,0,0,0,0,0,0,1,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\RSA.java,ciphers.RSA,encrypt/1[java.lang.String],false,32,0,1,1,0,1,3,3,1,0,1,3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,5,33,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\RSA.java,ciphers.RSA,decrypt/1[java.math.BigInteger],false,56,0,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,33,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\RSA.java,ciphers.RSA,decrypt/1[java.lang.String],false,48,0,1,1,0,1,2,3,1,0,1,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,7,33,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\RSA.java,ciphers.RSA,encrypt/1[java.math.BigInteger],false,40,0,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,33,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\RSA.java,ciphers.RSA,RSA/1[int],true,24,1,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\RSA.java,ciphers.RSA,main/1[java.lang.String[]],false,10,1,3,0,3,1,4,7,0,3,1,4,2,1,0,0,0,0,3,1,3,2,0,0,0,0,15,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\RSA.java,ciphers.RSA,generateKeys/1[int],false,65,0,1,1,0,2,6,12,0,4,1,6,0,0,1,0,0,1,2,5,8,2,1,0,0,0,19,33,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PythagoreanTriple.java,Maths.PythagoreanTriple,"isPythagTriple/3[int,int,int]",false,23,0,1,1,0,4,0,8,2,0,3,0,0,0,0,1,0,3,0,3,0,4,1,0,0,0,21,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PythagoreanTriple.java,Maths.PythagoreanTriple,main/1[java.lang.String[]],false,5,1,1,0,1,1,1,8,0,0,1,1,1,1,0,0,0,0,0,18,0,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\CircularConvolutionFFT.java,com.maths.CircularConvolutionFFT,"padding/2[java.util.ArrayList<com.maths.FFT.Complex>,int]",false,18,1,2,1,1,3,2,6,0,2,2,2,0,0,1,0,0,0,0,1,2,1,2,0,0,0,21,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\CircularConvolutionFFT.java,com.maths.CircularConvolutionFFT,"fftCircularConvolution/2[java.util.ArrayList<com.maths.FFT.Complex>,java.util.ArrayList<com.maths.FFT.Complex>]",false,37,3,3,0,3,2,7,11,1,3,2,7,1,1,1,0,0,0,0,1,3,0,1,0,0,0,36,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LongestIncreasingSubsequence.java,DynamicProgramming.LongestIncreasingSubsequence,"binarySearchBetween/3[int[],int,int]",false,77,1,1,1,0,5,0,12,3,3,3,0,0,0,1,0,0,1,0,6,5,4,2,0,0,0,8,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LongestIncreasingSubsequence.java,DynamicProgramming.LongestIncreasingSubsequence,findLISLen/1[int[]],false,64,2,2,1,1,3,1,12,1,5,1,1,1,1,1,0,0,0,0,4,7,0,2,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LongestIncreasingSubsequence.java,DynamicProgramming.LongestIncreasingSubsequence,LIS/1[int[]],false,32,2,2,1,1,5,1,13,2,4,1,1,1,1,1,1,0,0,0,11,8,2,3,0,0,0,8,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LongestIncreasingSubsequence.java,DynamicProgramming.LongestIncreasingSubsequence,main/1[java.lang.String[]],false,7,2,2,0,2,2,5,11,0,4,1,5,2,3,1,0,0,0,0,1,5,0,1,0,0,0,12,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LongestIncreasingSubsequence.java,DynamicProgramming.LongestIncreasingSubsequence,"upperBound/4[int[],int,int,int]",false,22,1,1,1,0,3,0,8,1,1,4,0,0,0,1,0,0,1,0,2,3,3,2,0,0,0,6,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\LinearSearch.java,Searches.LinearSearch,"find/2[T[],T]",false,29,1,0,0,0,3,1,8,2,1,2,1,0,0,1,1,0,0,0,3,1,0,2,0,0,0,18,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\LinearSearch.java,Searches.LinearSearch,main/1[java.lang.String[]],false,38,1,2,0,2,1,7,10,0,7,1,7,0,0,0,0,0,0,1,3,7,1,0,0,0,1,22,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\CycleSort.java,Sorts.CycleSort,sort/1[T[]],false,10,3,2,0,2,12,3,24,1,6,1,3,1,1,6,6,0,0,0,9,12,3,4,0,0,0,10,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\CycleSort.java,Sorts.CycleSort,main/1[java.lang.String[]],false,63,2,3,0,3,1,3,7,0,2,1,3,0,0,0,0,0,0,1,15,2,0,0,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\CycleSort.java,Sorts.CycleSort,"replace/3[T[],int,T]",false,56,1,1,1,0,1,0,6,1,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\TrieImp.java,DataStructures.Trees.TrieImp$TrieNode,TrieNode/0,true,16,1,2,2,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AESEncryption.java,ciphers.AESEncryption,bytesToHex/1[byte[]],false,101,2,1,1,0,2,0,9,1,3,1,0,0,0,1,0,0,0,0,8,5,5,1,0,0,0,41,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AESEncryption.java,ciphers.AESEncryption,"decryptText/2[byte[],javax.crypto.SecretKey]",false,85,1,1,1,0,1,3,6,1,2,2,3,0,0,0,0,0,0,1,0,2,0,0,0,0,0,26,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AESEncryption.java,ciphers.AESEncryption,getSecretEncryptionKey/0,false,42,0,1,1,0,1,3,6,1,2,0,3,0,0,0,0,0,0,1,1,2,0,0,0,0,0,31,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AESEncryption.java,ciphers.AESEncryption,main/1[java.lang.String[]],false,24,2,4,0,4,1,6,10,0,4,1,6,4,1,0,0,0,0,5,0,4,4,0,0,0,0,41,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ciphers\AESEncryption.java,ciphers.AESEncryption,"encryptText/2[java.lang.String,javax.crypto.SecretKey]",false,63,1,1,1,0,1,4,6,1,2,2,4,0,0,0,0,0,0,1,0,2,0,0,0,0,0,31,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFTBluestein.java,com.maths.FFTBluestein,"fftBluestein/2[java.util.ArrayList<com.maths.FFT.Complex>,boolean]",false,22,2,6,1,5,8,9,29,0,16,2,9,0,0,5,0,0,2,0,14,16,18,2,0,0,0,43,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\GuassLegendre.java,Others.GuassLegendre,pi/1[int],false,14,1,2,1,1,2,2,11,1,6,1,2,1,1,1,0,0,1,0,12,10,3,1,0,0,0,8,8,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\GuassLegendre.java,Others.GuassLegendre,"update/4[double,double,double,double]",false,31,1,1,1,0,1,2,8,1,1,4,2,0,0,0,0,0,1,0,9,5,7,0,0,0,0,6,8,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\GuassLegendre.java,Others.GuassLegendre,main/1[java.lang.String[]],false,10,1,1,0,1,2,2,3,0,1,1,2,1,2,1,0,0,0,0,2,1,0,1,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\AnyBaseToDecimal.java,Conversions.AnyBaseToDecimal,valOfChar/1[char],false,45,0,1,1,0,4,2,6,1,0,1,2,0,0,0,0,0,1,1,1,0,4,1,0,0,0,23,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\AnyBaseToDecimal.java,Conversions.AnyBaseToDecimal,"convertToDecimal/2[java.lang.String,int]",false,23,1,2,1,1,3,3,13,1,4,2,3,1,1,1,0,0,0,1,4,6,3,2,0,0,0,29,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\AnyBaseToDecimal.java,Conversions.AnyBaseToDecimal,main/1[java.lang.String[]],false,7,1,1,0,1,6,2,7,0,0,1,2,1,2,0,5,0,0,10,10,0,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\HeapElement.java,DataStructures.Heaps.HeapElement,HeapElement/1[double],true,60,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\HeapElement.java,DataStructures.Heaps.HeapElement,HeapElement/1[int],true,66,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\HeapElement.java,DataStructures.Heaps.HeapElement,getKey/0,false,91,0,6,6,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\HeapElement.java,DataStructures.Heaps.HeapElement,"HeapElement/2[java.lang.Double,java.lang.Object]",true,54,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,32,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\HeapElement.java,DataStructures.Heaps.HeapElement,"HeapElement/2[double,java.lang.Object]",true,24,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,31,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\HeapElement.java,DataStructures.Heaps.HeapElement,HeapElement/1[java.lang.Integer],true,72,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\HeapElement.java,DataStructures.Heaps.HeapElement,"HeapElement/2[java.lang.Integer,java.lang.Object]",true,44,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,32,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\HeapElement.java,DataStructures.Heaps.HeapElement,getInfo/0,false,86,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\HeapElement.java,DataStructures.Heaps.HeapElement,hashCode/0,false,118,0,0,0,0,2,1,6,1,1,0,1,0,0,0,1,0,1,0,4,3,4,0,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\HeapElement.java,DataStructures.Heaps.HeapElement,toString/0,false,97,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\HeapElement.java,DataStructures.Heaps.HeapElement,equals/1[java.lang.Object],false,107,1,0,0,0,3,1,8,3,1,1,1,0,0,0,2,0,3,0,0,1,0,2,0,0,0,20,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\HeapElement.java,DataStructures.Heaps.HeapElement,"HeapElement/2[int,java.lang.Object]",true,34,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,31,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\HeapElement.java,DataStructures.Heaps.HeapElement,HeapElement/1[java.lang.Double],true,78,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PalindromeNumber.java,Maths.PalindromeNumber,main/1[java.lang.String[]],false,4,1,1,0,1,1,1,5,0,0,1,1,1,1,0,0,0,0,0,3,0,0,0,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PalindromeNumber.java,Maths.PalindromeNumber,isPalindrome/1[int],false,17,0,1,1,0,4,0,13,1,3,1,0,0,0,1,2,0,0,1,6,5,4,1,0,0,0,19,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\SelectionSort.java,Sorts.SelectionSort,main/1[java.lang.String[]],false,32,1,3,0,3,3,3,13,0,7,1,3,0,0,2,0,0,0,5,16,7,4,1,0,0,0,13,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\SelectionSort.java,Sorts.SelectionSort,sort/1[T[]],false,13,1,0,0,0,5,1,17,1,5,1,1,0,0,2,1,0,0,0,4,8,2,3,0,0,0,20,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\RomanToInteger.java,Conversions.RomanToInteger,romanToInt/1[java.lang.String],false,30,0,1,1,0,5,4,21,1,6,1,4,0,0,1,1,0,0,0,4,11,1,2,0,0,0,21,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\RomanToInteger.java,Conversions.RomanToInteger,main/1[java.lang.String[]],false,62,1,1,0,1,1,2,4,0,1,1,2,1,1,0,0,0,0,1,0,1,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\Main.java,DataStructures.HashMap.Hashing.Main,main/1[java.lang.String[]],false,6,1,4,0,4,6,6,40,1,4,1,6,0,0,1,0,0,0,8,5,5,0,2,0,0,0,17,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LevenshteinDistance.java,DynamicProgramming.LevenshteinDistance,main/1[java.lang.String[]],false,45,1,1,0,1,1,3,6,0,2,1,3,1,2,0,0,0,0,5,0,2,1,0,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LevenshteinDistance.java,DynamicProgramming.LevenshteinDistance,"calculate_distance/2[java.lang.String,java.lang.String]",false,19,2,2,1,1,6,3,24,1,8,2,3,1,1,4,1,0,0,0,16,12,9,3,0,0,0,10,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\LevenshteinDistance.java,DynamicProgramming.LevenshteinDistance,"minimum/3[int,int,int]",false,9,0,1,1,0,5,0,11,3,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\BellmanFord.java,DataStructures.Graphs.BellmanFord$Edge,"Edge/3[int,int,int]",true,27,0,2,2,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,12,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\DecimalToBinary.java,Conversions.DecimalToBinary,main/1[java.lang.String[]],false,13,1,2,0,2,1,2,4,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,10,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\DecimalToBinary.java,Conversions.DecimalToBinary,bitwiseConversion/0,false,34,0,1,1,0,2,5,13,0,5,0,5,0,0,1,1,0,1,2,6,7,2,1,0,0,0,20,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\DecimalToBinary.java,Conversions.DecimalToBinary,conventionalConversion/0,false,19,0,1,1,0,2,5,13,0,5,0,5,0,0,1,1,0,0,2,6,7,4,1,0,0,0,19,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CountWords.java,Others.CountWords,main/1[java.lang.String[]],false,13,1,2,0,2,1,5,8,0,2,1,5,2,1,0,0,0,0,5,0,2,2,0,0,0,0,13,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CountWords.java,Others.CountWords,secondaryWordCount/1[java.lang.String],false,35,0,1,1,0,6,8,9,2,1,1,8,0,0,1,1,0,0,1,1,2,0,2,0,0,0,35,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\CountWords.java,Others.CountWords,wordCount/1[java.lang.String],false,23,0,1,1,0,3,3,4,2,0,1,3,0,0,0,1,0,0,1,1,0,0,1,0,0,0,4,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Graphs.java,DataStructures.Graphs.Graphs,main/1[java.lang.String[]],false,117,1,2,0,2,1,2,12,0,1,1,2,0,0,0,0,0,0,0,16,1,0,0,0,0,0,3,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\ConnectedComponent.java,DataStructures.Graphs.Graph$Edge,"Edge/2[DataStructures.Graphs.Graph<E>.Node,DataStructures.Graphs.Graph<E>.Node]",true,25,1,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\RadixSort.java,Sorts.RadixSort,"radixsort/2[int[],int]",false,31,2,3,1,2,2,2,4,0,2,2,2,2,1,1,0,0,0,0,3,3,1,1,0,0,0,8,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\RadixSort.java,Sorts.RadixSort,"countSort/3[int[],int,int]",false,13,1,1,1,0,5,1,13,0,3,3,1,0,0,4,0,0,3,0,13,9,9,1,0,0,0,6,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\RadixSort.java,Sorts.RadixSort,"print/2[int[],int]",false,38,1,1,1,0,2,1,3,0,1,2,1,0,0,1,0,0,0,1,1,1,1,1,0,0,0,3,8,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\RadixSort.java,Sorts.RadixSort,"getMax/2[int[],int]",false,7,1,1,1,0,3,0,5,1,2,2,0,0,0,1,0,0,0,0,2,3,0,2,0,0,0,5,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\RadixSort.java,Sorts.RadixSort,main/1[java.lang.String[]],false,42,2,2,0,2,1,2,6,0,2,1,2,2,2,0,0,0,0,0,8,2,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SieveOfEratosthenes.java,Others.SieveOfEratosthenes,findPrimesTillN/1[int],false,11,1,1,1,0,7,3,20,0,5,1,3,0,0,4,2,0,0,1,13,9,5,3,0,0,0,27,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\SieveOfEratosthenes.java,Others.SieveOfEratosthenes,main/1[java.lang.String[]],false,38,1,1,0,1,1,1,4,0,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\BestFit.java,Others.BestFit,"findBestFit/2[int[],int]",false,35,2,2,1,1,4,1,11,1,3,2,1,1,1,1,0,0,0,0,2,5,3,2,0,0,0,41,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\BestFit.java,Others.BestFit,"bestFit/2[int[],int[]]",false,63,2,1,0,1,3,2,11,1,2,2,2,1,2,1,1,0,0,0,0,3,0,2,0,0,0,61,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\BestFit.java,Others.BestFit,findMaxElement/1[int[]],false,17,1,1,1,0,3,0,9,1,1,1,0,0,0,1,0,0,0,0,1,2,0,2,0,0,0,17,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\BestFit.java,Others.BestFit,printMemoryAllocation/1[java.util.ArrayList<java.lang.Integer>],false,86,0,0,0,0,3,6,10,0,1,1,6,0,0,1,1,0,0,5,1,1,1,2,0,0,0,28,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\FloydTriangle.java,Others.FloydTriangle,main/1[java.lang.String[]],false,6,0,0,0,0,3,5,12,0,5,1,5,0,0,2,0,0,0,2,3,5,1,2,0,0,0,18,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SearchSinglyLinkedListRecursion.java,DataStructures.Lists.SearchSinglyLinkedListRecursion,search/1[int],false,28,2,3,1,2,1,2,3,1,0,1,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SearchSinglyLinkedListRecursion.java,DataStructures.Lists.SearchSinglyLinkedListRecursion,main/1[java.lang.String[]],false,4,2,3,0,3,3,2,10,0,3,1,2,1,2,2,0,0,0,0,6,3,0,1,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\SearchSinglyLinkedListRecursion.java,DataStructures.Lists.SearchSinglyLinkedListRecursion,"searchRecursion/2[DataStructures.Lists.Node,int]",false,23,2,3,2,1,3,1,3,1,0,2,1,1,0,0,2,0,1,0,0,0,0,0,0,0,0,20,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\BinaryToDecimal.java,Conversions.BinaryToDecimal,main/1[java.lang.String[]],false,13,0,0,0,0,2,5,14,0,6,1,5,0,0,1,1,0,0,2,6,8,3,1,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\PrintTopViewofTree.java,DataStructures.Trees.QItem,"QItem/2[DataStructures.Trees.TreeNode,int]",true,27,1,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\AmicableNumber.java,Maths.AmicableNumber,"isAmicableNumber/2[int,int]",false,65,1,2,1,1,3,1,3,1,0,2,1,1,1,0,2,0,2,0,0,0,0,0,0,0,0,20,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\AmicableNumber.java,Maths.AmicableNumber,main/1[java.lang.String[]],false,18,1,1,0,1,1,1,3,0,0,1,1,1,3,0,0,0,0,0,2,0,0,0,0,0,0,2,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\AmicableNumber.java,Maths.AmicableNumber,"findAllInRange/2[int,int]",false,31,1,2,1,1,4,5,14,0,4,2,5,1,2,2,0,0,0,9,3,4,3,3,0,0,0,21,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\AmicableNumber.java,Maths.AmicableNumber,"recursiveCalcOfDividerSum/2[int,int]",false,77,1,3,2,1,3,1,11,3,0,2,1,1,0,0,2,0,0,0,3,0,2,1,0,0,0,27,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\MaxValue.java,Maths.MaxValue,"max/2[int,int]",false,29,0,1,1,0,2,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\MaxValue.java,Maths.MaxValue,main/1[java.lang.String[]],false,8,1,1,0,1,2,3,8,0,4,1,3,1,1,1,1,0,0,0,6,4,2,1,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArray.java,DataStructures.Stacks.StackArray,main/1[java.lang.String[]],false,14,1,7,0,7,5,6,15,0,1,1,6,6,4,0,4,0,0,0,9,1,0,0,0,0,0,8,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArray.java,DataStructures.Stacks.StackArray,resize/1[int],false,111,1,2,2,0,2,0,8,0,2,1,0,0,0,1,0,0,0,0,1,5,0,1,0,0,0,8,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArray.java,DataStructures.Stacks.StackArray,isEmpty/0,false,127,0,3,3,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,8,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArray.java,DataStructures.Stacks.StackArray,StackArray/0,true,48,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArray.java,DataStructures.Stacks.StackArray,size/0,false,155,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,5,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArray.java,DataStructures.Stacks.StackArray,isFull/0,false,136,0,2,2,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArray.java,DataStructures.Stacks.StackArray,StackArray/1[int],true,57,1,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArray.java,DataStructures.Stacks.StackArray,pop/0,false,83,1,5,2,3,3,4,13,3,0,0,4,3,1,0,0,0,0,1,3,0,2,1,0,0,0,20,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArray.java,DataStructures.Stacks.StackArray,push/1[int],false,68,1,5,2,3,2,3,10,0,0,1,3,3,1,0,0,0,0,0,1,1,1,1,0,0,0,17,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArray.java,DataStructures.Stacks.StackArray,makeEmpty/0,false,146,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,23,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArray.java,DataStructures.Stacks.StackArray,peek/0,false,102,1,2,1,1,2,2,9,2,0,0,2,1,1,0,0,0,0,1,1,0,0,1,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CountSinglyLinkedListRecursion.java,DataStructures.Lists.CountSinglyLinkedListRecursion,countRecursion/1[DataStructures.Lists.Node],false,18,2,3,2,1,2,1,3,1,0,1,1,1,0,0,1,0,0,0,2,0,1,0,0,0,0,11,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CountSinglyLinkedListRecursion.java,DataStructures.Lists.CountSinglyLinkedListRecursion,main/1[java.lang.String[]],false,4,2,3,0,3,3,2,7,0,2,1,2,1,2,1,1,0,0,0,3,2,0,1,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\CountSinglyLinkedListRecursion.java,DataStructures.Lists.CountSinglyLinkedListRecursion,count/0,false,23,2,3,1,2,1,2,3,1,0,0,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\RgbHsvConversion.java,Conversions.RgbHsvConversion,main/1[java.lang.String[]],false,16,3,3,0,3,1,4,22,0,0,1,4,3,3,0,0,0,0,0,120,0,0,0,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\RgbHsvConversion.java,Conversions.RgbHsvConversion,"hsvToRgb/3[double,double,double]",false,54,2,2,1,1,7,2,16,1,4,3,2,1,2,0,0,0,1,3,10,4,7,1,0,0,0,39,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\RgbHsvConversion.java,Conversions.RgbHsvConversion,"rgbToHsv/3[int,int,int]",false,83,1,1,1,0,11,2,32,1,7,3,2,0,0,0,4,0,7,3,21,11,19,1,0,0,0,36,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\RgbHsvConversion.java,Conversions.RgbHsvConversion,"approximatelyEqualHsv/2[double[],double[]]",false,119,1,1,1,0,4,1,6,1,3,2,1,0,0,0,0,0,0,0,9,3,3,0,0,0,0,8,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\RgbHsvConversion.java,Conversions.RgbHsvConversion,convertToInt/1[double],false,162,0,1,1,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,4,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\RgbHsvConversion.java,Conversions.RgbHsvConversion,"getRgbBySection/4[double,double,double,double]",false,128,2,2,1,1,11,1,36,1,3,4,1,1,1,0,0,0,0,0,10,18,12,1,0,0,0,17,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\ShellSort.java,Sorts.ShellSort,sort/1[T[]],false,15,2,1,0,1,6,1,18,1,5,1,1,0,0,4,0,0,0,0,6,10,5,3,0,0,0,20,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\ShellSort.java,Sorts.ShellSort,main/1[java.lang.String[]],false,38,2,3,0,3,2,2,9,0,3,1,2,0,0,1,0,0,0,0,12,3,2,1,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\KadaneAlgorithm.java,DynamicProgramming.KadaneAlgorithm,largestContiguousSum/1[int[]],false,19,1,1,1,0,5,0,14,2,4,1,0,0,0,1,1,0,0,0,6,7,0,2,0,0,0,20,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\KadaneAlgorithm.java,DynamicProgramming.KadaneAlgorithm,main/1[java.lang.String[]],false,40,2,1,0,1,2,4,12,0,5,1,4,1,1,1,0,0,0,0,1,6,0,1,0,0,0,17,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\MinValue.java,Maths.MinValue,"min/2[int,int]",false,29,0,1,1,0,2,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\MinValue.java,Maths.MinValue,main/1[java.lang.String[]],false,8,1,1,0,1,2,3,8,0,4,1,3,1,1,1,1,0,0,0,6,4,2,1,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Factorial.java,Maths.Factorial,factorial/1[int],false,19,0,1,1,0,3,0,8,1,2,1,0,0,0,1,0,0,0,1,3,3,0,1,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Factorial.java,Maths.Factorial,main/1[java.lang.String[]],false,6,1,1,0,1,5,1,6,0,0,1,1,1,1,0,4,0,0,0,8,0,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\BellmanFord.java,DataStructures.Graphs.BellmanFord,go/0,false,52,3,3,1,2,13,6,44,0,12,0,6,1,1,7,3,0,0,7,15,24,5,3,0,0,0,18,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\BellmanFord.java,DataStructures.Graphs.BellmanFord,"addEdge/3[int,int,int]",false,154,1,1,0,1,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,10,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\BellmanFord.java,DataStructures.Graphs.BellmanFord,"show/3[int,int,DataStructures.Graphs.BellmanFord.Edge[]]",false,113,4,1,0,1,10,4,28,0,7,3,4,1,1,4,3,0,0,4,10,15,6,3,0,0,0,17,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\BellmanFord.java,DataStructures.Graphs.BellmanFord,"BellmanFord/2[int,int]",true,13,1,1,1,0,1,0,5,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\BellmanFord.java,DataStructures.Graphs.BellmanFord,"printPath/2[int[],int]",false,37,2,4,3,1,2,2,5,1,0,2,2,1,0,0,1,0,0,1,1,0,1,1,0,0,0,14,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\BellmanFord.java,DataStructures.Graphs.BellmanFord,getEdgeArray/0,false,158,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\BellmanFord.java,DataStructures.Graphs.BellmanFord,main/1[java.lang.String[]],false,44,1,2,0,2,1,1,4,0,1,1,1,1,2,0,0,0,0,0,2,1,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\SumOfDigits.java,Maths.SumOfDigits,sumOfDigitsFast/1[int],false,47,1,1,1,0,3,1,9,1,3,1,1,0,0,1,0,0,1,1,3,5,2,1,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\SumOfDigits.java,Maths.SumOfDigits,sumOfDigitsRecursion/1[int],false,36,1,3,2,1,3,1,4,1,0,1,1,1,0,0,0,0,0,0,4,1,3,0,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\SumOfDigits.java,Maths.SumOfDigits,main/1[java.lang.String[]],false,4,1,3,0,3,10,3,5,0,0,1,3,3,1,0,9,0,0,0,18,0,0,0,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\SumOfDigits.java,Maths.SumOfDigits,sumOfDigits/1[int],false,20,0,1,1,0,3,0,9,1,1,1,0,0,0,1,1,0,0,0,5,4,1,1,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\MinimizingLateness\MinimizingLateness.java,MinimizingLateness.MinimizingLateness,main/1[java.lang.String[]],false,22,1,1,0,1,5,9,32,1,9,1,9,0,0,2,2,0,1,5,8,15,8,1,0,0,0,24,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\SkylineAlgorithm.java,divideconquer.SkylineAlgorithm$Point,getX/0,false,137,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\SkylineAlgorithm.java,divideconquer.SkylineAlgorithm$Point,"Point/2[int,int]",true,131,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,12,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\SkylineAlgorithm.java,divideconquer.SkylineAlgorithm$Point,dominates/1[divideconquer.SkylineAlgorithm.Point],false,153,1,1,1,0,5,0,3,1,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,19,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\divideconquer\SkylineAlgorithm.java,divideconquer.SkylineAlgorithm$Point,getY/0,false,142,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\InsertionSort.java,Sorts.InsertionSort,main/1[java.lang.String[]],false,31,2,4,0,4,1,3,9,0,3,1,3,0,0,0,0,0,0,5,9,3,0,0,0,0,0,10,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\InsertionSort.java,Sorts.InsertionSort,sort/1[T[]],false,16,2,1,0,1,5,1,13,1,3,1,1,0,0,2,1,0,0,0,6,5,4,2,0,0,0,18,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT,"fft/2[java.util.ArrayList<com.maths.FFT.Complex>,boolean]",false,170,2,8,1,7,10,12,32,0,15,2,12,2,1,6,0,0,1,0,16,18,11,3,0,0,0,80,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT,"reverseBits/2[int,int]",false,225,0,1,1,0,4,0,7,1,2,2,0,0,0,1,1,0,3,0,6,3,3,2,0,0,0,39,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FFT.java,com.maths.FFT,paddingPowerOfTwo/1[java.util.ArrayList<com.maths.FFT.Complex>],false,239,1,2,1,1,3,2,6,0,3,1,2,0,0,2,0,0,0,0,3,4,1,1,0,0,0,33,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree$Node,"Node/2[int,DataStructures.Trees.AVLTree.Node]",true,13,1,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\MergeSortedSinglyLinkedList.java,DataStructures.Lists.MergeSortedSinglyLinkedList,"merge/2[DataStructures.Lists.SinglyLinkedList,DataStructures.Lists.SinglyLinkedList]",false,25,2,5,1,4,6,2,25,1,5,2,2,0,0,1,4,0,0,0,0,12,1,2,0,0,0,21,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\MergeSortedSinglyLinkedList.java,DataStructures.Lists.MergeSortedSinglyLinkedList,main/1[java.lang.String[]],false,5,2,4,0,4,2,4,11,0,3,1,4,1,1,1,0,0,0,3,4,4,1,1,0,0,0,11,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.AdjacencyMatrixGraph,setNumberOfEdges/1[int],false,46,0,3,3,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.AdjacencyMatrixGraph,"addEdge/2[int,int]",false,89,1,6,1,5,4,5,11,2,0,2,5,5,3,0,0,0,0,0,1,2,1,2,0,0,0,27,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.AdjacencyMatrixGraph,toString/0,false,126,1,1,0,1,4,2,15,1,4,0,2,1,1,3,0,0,0,6,3,9,5,2,0,0,0,19,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.AdjacencyMatrixGraph,numberOfEdges/0,false,50,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.AdjacencyMatrixGraph,"removeEdge/2[int,int]",false,109,1,5,0,5,4,5,11,2,0,2,5,5,3,0,0,0,0,0,1,2,1,2,0,0,0,25,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.AdjacencyMatrixGraph,adjacency/0,false,58,1,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.AdjacencyMatrixGraph,"adjacencyOfEdgeDoesExist/2[int,int]",false,62,1,4,3,1,2,1,3,1,0,2,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.AdjacencyMatrixGraph,AdjacencyMatrixGraph/1[int],true,27,2,5,1,4,3,4,10,0,2,1,4,4,1,2,0,0,0,0,3,3,0,2,0,0,0,9,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.AdjacencyMatrixGraph,setAdjacency/1[int[][]],false,54,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.AdjacencyMatrixGraph,"edgeDoesExist/2[int,int]",false,74,1,2,0,2,3,2,6,2,0,2,2,2,3,0,0,0,1,0,0,0,0,1,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.AdjacencyMatrixGraph,setNumberOfVertices/1[int],false,38,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.AdjacencyMatrixGraph,numberOfVertices/0,false,42,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\MatrixGraphs.java,DataStructures.Graphs.AdjacencyMatrixGraph,vertexDoesExist/1[int],false,66,1,4,3,1,3,1,8,2,0,1,1,1,1,0,0,0,0,0,1,0,0,1,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star$PathAndDistance,getEstimated/0,false,79,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star$PathAndDistance,printSolution/0,false,83,0,1,1,0,2,2,4,0,0,0,2,0,0,0,1,0,0,3,0,0,1,1,0,0,0,10,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star$PathAndDistance,getDistance/0,false,71,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star$PathAndDistance,"PathAndDistance/3[int,java.util.ArrayList<java.lang.Integer>,int]",true,65,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star$PathAndDistance,getPath/0,false,75,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star$Edge,getFrom/0,false,45,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star$Edge,getTo/0,false,49,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star$Edge,getWeight/0,false,53,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\A_Star.java,A_Star.A_Star$Edge,"Edge/3[int,int,int]",true,39,0,2,2,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Floor.java,Maths.Floor,main/1[java.lang.String[]],false,6,1,1,0,1,2,3,7,0,3,1,3,1,1,1,1,0,0,0,2,3,0,1,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Floor.java,Maths.Floor,floor/1[double],false,20,0,1,1,0,3,0,11,3,0,1,0,0,0,0,1,0,0,0,3,0,3,1,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Dijkstra.java,Others.Graph,dijkstra/1[java.lang.String],false,140,2,2,1,1,5,6,14,1,2,1,6,1,1,1,2,0,0,1,1,4,0,1,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Dijkstra.java,Others.Graph,Graph/1[Others.Graph.Edge[]],true,122,2,2,1,1,5,4,10,0,0,1,4,0,0,2,0,0,0,0,0,1,0,2,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Dijkstra.java,Others.Graph,printPath/1[java.lang.String],false,183,1,2,1,1,2,5,8,1,0,1,5,0,0,0,0,0,0,1,0,0,0,1,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Dijkstra.java,Others.Graph,dijkstra/1[java.util.NavigableSet<Others.Graph.Vertex>],false,159,1,1,1,0,5,7,17,0,3,1,7,0,0,2,1,0,0,0,0,5,1,3,0,0,0,13,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Dijkstra.java,Others.Graph,printAllPaths/0,false,194,1,1,0,1,2,3,6,0,0,0,3,0,0,1,0,0,0,0,0,0,0,1,0,0,0,18,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\DecimalToAnyUsingStack.java,DataStructures.Stacks.DecimalToAnyUsingStack,main/1[java.lang.String[]],false,6,1,1,0,1,1,2,7,0,0,1,2,1,1,0,0,0,0,5,10,0,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\DecimalToAnyUsingStack.java,DataStructures.Stacks.DecimalToAnyUsingStack,"convert/2[int,int]",false,22,1,1,1,0,5,6,17,1,3,2,6,0,0,2,1,0,0,1,3,4,2,1,0,0,0,22,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MatrixChainMultiplication.java,DynamicProgramming.MatrixChainMultiplication,main/1[java.lang.String[]],false,15,3,8,0,8,10,16,44,0,10,1,16,4,1,7,2,0,0,8,21,15,9,2,0,0,0,26,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MatrixChainMultiplication.java,DynamicProgramming.MatrixChainMultiplication,input/1[java.lang.String],false,107,0,1,1,0,1,3,4,1,0,1,3,0,0,0,0,0,1,1,0,0,0,0,0,0,0,2,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MatrixChainMultiplication.java,DynamicProgramming.MatrixChainMultiplication,"printOptimalParens/2[int,int]",false,66,1,3,2,1,2,2,11,0,0,2,2,1,0,0,1,0,0,3,1,0,2,1,0,0,0,5,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MatrixChainMultiplication.java,DynamicProgramming.MatrixChainMultiplication,printArray/1[int[][]],false,77,1,1,1,0,3,3,8,0,2,1,3,0,0,2,0,0,0,1,4,2,2,2,0,0,0,6,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MatrixChainMultiplication.java,DynamicProgramming.MatrixChainMultiplication,matrixChainOrder/0,false,86,0,1,1,0,6,0,18,0,6,0,0,0,0,4,0,0,0,0,10,10,10,4,0,0,0,9,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\VampireNumber.java,Maths.VampireNumber,"splitIntoDigits/2[int,int]",false,58,0,1,1,0,4,4,17,1,2,2,4,0,0,3,0,0,0,0,6,4,2,1,0,0,0,10,8,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\VampireNumber.java,Maths.VampireNumber,main/1[java.lang.String[]],false,19,1,1,0,1,1,1,3,0,0,1,1,1,3,0,0,0,0,0,2,0,0,0,0,0,0,3,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\VampireNumber.java,Maths.VampireNumber,"isVampireNumber/3[int,int,boolean]",false,40,1,2,1,1,4,2,10,2,2,3,2,1,1,0,0,0,0,0,3,2,3,2,0,0,0,15,8,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\VampireNumber.java,Maths.VampireNumber,"test/2[int,int]",false,24,1,2,1,1,4,3,13,0,4,2,3,1,2,2,0,0,0,6,1,4,4,3,0,0,0,14,8,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RestrictedTowerOfHanoi\Main\Hanoi.java,Hanoi$Anonymous1,actionPerformed/1[java.awt.event.ActionEvent],false,135,1,2,0,2,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\ThreeSum.java,Others.ThreeSum,main/1[java.lang.String[]],false,17,1,0,0,0,6,4,23,0,8,1,4,0,0,3,1,0,0,3,4,9,5,3,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RestrictedTowerOfHanoi\Main\Hanoi.java,Hanoi$Anonymous2,actionPerformed/1[java.awt.event.ActionEvent],false,144,0,2,0,2,1,1,3,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RestrictedTowerOfHanoi\Main\Hanoi.java,Hanoi$Anonymous3,actionPerformed/1[java.awt.event.ActionEvent],false,153,1,2,0,2,1,2,4,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\CoinChange.java,DynamicProgramming.CoinChange,printAmount/1[int[]],false,76,1,0,0,0,2,2,6,0,1,1,2,0,0,1,0,0,0,1,1,1,1,1,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\CoinChange.java,DynamicProgramming.CoinChange,"change/2[int[],int]",false,29,1,1,1,0,3,0,10,1,2,2,0,0,0,2,0,0,0,0,4,4,3,2,0,0,0,25,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\CoinChange.java,DynamicProgramming.CoinChange,"minimumCoins/2[int[],int]",false,52,1,1,1,0,7,0,16,1,4,2,0,0,0,3,1,0,0,0,7,7,4,4,0,0,0,28,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\CoinChange.java,DynamicProgramming.CoinChange,main/1[java.lang.String[]],false,7,2,2,0,2,1,3,6,0,2,1,3,2,1,0,0,0,0,4,4,2,2,0,0,0,0,12,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RestrictedTowerOfHanoi\Main\Hanoi.java,Hanoi$Anonymous4,actionPerformed/1[java.awt.event.ActionEvent],false,163,0,2,0,2,2,3,6,0,0,1,3,0,0,0,1,0,0,0,0,0,0,1,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RestrictedTowerOfHanoi\Main\Hanoi.java,Hanoi$Anonymous5,actionPerformed/1[java.awt.event.ActionEvent],false,176,1,2,0,2,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\FibToN.java,Others.FibToN,main/1[java.lang.String[]],false,14,0,0,0,0,2,3,12,0,5,1,3,0,0,1,0,0,0,0,2,7,1,1,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PowRecursion.java,Maths.PowRecursion,"pow/2[int,int]",false,18,1,3,2,1,2,1,3,1,0,2,1,1,0,0,1,0,0,0,3,0,2,0,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PowRecursion.java,Maths.PowRecursion,main/1[java.lang.String[]],false,4,1,1,0,1,5,3,6,0,0,1,3,1,1,0,4,0,0,0,20,0,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RemoveDuplicateFromString.java,Others.RemoveDuplicateFromString,removeDuplicate/1[java.lang.String],false,25,0,1,1,0,5,7,13,2,3,1,7,0,0,1,2,0,0,0,2,3,0,2,0,0,0,35,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\RemoveDuplicateFromString.java,Others.RemoveDuplicateFromString,main/1[java.lang.String[]],false,8,1,1,0,1,1,4,7,0,2,1,4,1,1,0,0,0,0,2,0,2,2,0,0,0,0,15,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BinaryTree.java,DataStructures.Trees.BinaryTree,remove/1[int],false,106,2,2,0,2,17,2,61,8,2,1,2,2,1,0,12,0,0,0,0,27,0,3,0,0,0,24,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BinaryTree.java,DataStructures.Trees.BinaryTree,inOrder/1[DataStructures.Trees.BinaryTree.Node],false,226,2,2,1,1,2,2,7,0,0,1,2,1,0,0,1,0,0,1,0,0,1,1,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BinaryTree.java,DataStructures.Trees.BinaryTree,find/1[int],false,59,1,2,2,0,6,0,17,4,1,1,0,0,0,1,3,0,0,0,0,3,0,3,0,0,0,23,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BinaryTree.java,DataStructures.Trees.BinaryTree,BinaryTree/0,true,49,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BinaryTree.java,DataStructures.Trees.BinaryTree,put/1[int],false,80,2,2,0,2,3,1,17,2,2,1,1,1,1,0,1,0,0,0,0,7,0,3,0,0,0,18,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BinaryTree.java,DataStructures.Trees.BinaryTree,preOrder/1[DataStructures.Trees.BinaryTree.Node],false,239,2,2,1,1,2,2,7,0,0,1,2,1,0,0,1,0,0,1,0,0,1,1,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BinaryTree.java,DataStructures.Trees.BinaryTree,postOrder/1[DataStructures.Trees.BinaryTree.Node],false,252,2,2,1,1,2,2,7,0,0,1,2,1,0,0,1,0,0,1,0,0,1,1,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BinaryTree.java,DataStructures.Trees.BinaryTree,findSuccessor/1[DataStructures.Trees.BinaryTree.Node],false,201,1,1,1,0,3,0,10,2,2,1,0,0,0,1,2,0,0,0,0,4,0,1,0,0,0,29,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BinaryTree.java,DataStructures.Trees.BinaryTree,getRoot/0,false,217,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\SortAlgorithm.java,Sorts.SortAlgorithm,sort/1[T[]],false,13,1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\SortAlgorithm.java,Sorts.SortAlgorithm,sort/1[java.util.List<T>],false,28,2,1,0,1,1,4,3,1,0,1,4,1,1,0,0,0,0,1,0,0,0,0,0,0,0,20,65536,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,"insert/2[BSTRecursive.Node,int]",false,92,2,4,2,2,4,1,12,1,0,2,1,1,0,0,1,0,0,0,0,3,0,1,0,0,0,24,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,inorder/0,false,195,1,1,0,1,1,3,5,0,0,0,3,1,1,0,0,0,0,1,0,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,find/1[int],false,220,1,1,0,1,2,2,8,2,0,1,2,1,1,0,0,0,0,2,0,0,2,1,0,0,0,19,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,"search/2[BSTRecursive.Node,int]",false,164,2,3,2,1,4,1,14,4,0,2,1,1,0,0,2,0,0,0,0,0,0,1,0,0,0,25,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,postorder/0,false,202,1,1,0,1,1,3,5,0,0,0,3,1,1,0,0,0,0,1,0,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,preOrder/1[BSTRecursive.Node],false,108,2,3,2,1,4,2,12,1,0,1,2,1,0,0,3,0,0,1,0,0,1,1,0,0,0,15,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,add/1[int],false,181,1,1,0,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,18,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,BSTRecursive/0,true,21,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,12,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,postOrder/1[BSTRecursive.Node],false,126,2,3,2,1,4,2,12,1,0,1,2,1,0,0,3,0,0,1,0,0,1,1,0,0,0,12,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,remove/1[int],false,190,1,1,0,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,preorder/0,false,209,1,1,0,1,1,3,5,0,0,0,3,1,1,0,0,0,0,1,0,0,0,0,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,inOrder/1[BSTRecursive.Node],false,144,2,3,2,1,4,2,12,1,0,1,2,1,0,0,3,0,0,1,0,0,1,1,0,0,0,12,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,"delete/2[BSTRecursive.Node,int]",false,54,2,3,2,1,9,2,35,1,3,2,2,1,0,1,6,0,0,1,0,13,0,3,0,0,0,25,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\BSTRecursive.java,BSTRecursive,main/1[java.lang.String[]],false,26,1,5,0,5,1,4,16,0,1,1,4,0,0,0,0,0,0,5,12,1,0,0,0,0,0,28,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\NumberOfDigits.java,Maths.NumberOfDigits,numberOfDigitsRecursion/1[int],false,56,1,3,2,1,2,1,3,1,0,1,1,1,0,0,1,0,0,0,5,0,3,0,0,0,0,14,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\NumberOfDigits.java,Maths.NumberOfDigits,numberOfDigits/1[int],false,21,0,1,1,0,2,0,9,1,1,1,0,0,0,1,1,0,0,0,3,2,0,1,0,0,0,12,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\NumberOfDigits.java,Maths.NumberOfDigits,main/1[java.lang.String[]],false,5,2,4,0,4,2,4,9,0,2,1,4,4,1,1,4,0,0,0,14,2,4,1,0,0,0,11,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\NumberOfDigits.java,Maths.NumberOfDigits,numberOfDigitsFaster/1[int],false,46,0,1,1,0,2,1,3,1,0,1,1,0,0,0,0,0,2,2,1,0,2,0,0,0,0,14,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\NumberOfDigits.java,Maths.NumberOfDigits,numberOfDigitsFast/1[int],false,36,0,1,1,0,2,3,3,1,0,1,3,0,0,0,1,0,0,0,3,0,1,0,0,0,0,14,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FactorialRecursion.java,Maths.FactorialRecursion,factorial/1[int],false,20,1,3,2,1,4,1,6,1,0,1,1,1,0,0,2,0,0,1,5,0,2,1,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FactorialRecursion.java,Maths.FactorialRecursion,main/1[java.lang.String[]],false,6,1,1,0,1,6,1,7,0,0,1,1,1,1,0,5,0,0,0,10,0,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\AbsoluteMax.java,Maths.AbsoluteMax,absMax/1[int[]],false,25,1,1,1,0,3,1,9,1,3,1,1,0,0,1,0,0,0,0,2,4,0,2,0,0,0,13,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\AbsoluteMax.java,Maths.AbsoluteMax,main/1[java.lang.String[]],false,11,2,1,0,1,2,3,6,0,2,1,3,1,1,0,1,0,0,2,7,2,1,0,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackOfLinkedList.java,DataStructures.Stacks.Node,Node/1[int],true,37,0,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Lists\Merge_K_SortedLinkedlist.java,DataStructures.Lists.Merge_K_SortedLinkedlist,"mergeKList/2[DataStructures.Lists.Merge_K_SortedLinkedlist.Node[],int]",false,17,1,0,0,0,3,7,16,1,5,2,7,0,0,1,1,0,0,0,1,6,0,2,0,0,1,20,0,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\TowerOfHanoi.java,Others.TowerOfHanoi,"shift/4[int,java.lang.String,java.lang.String,java.lang.String]",false,6,1,3,2,1,2,2,7,0,0,4,2,1,0,0,1,0,0,1,3,0,2,1,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\TowerOfHanoi.java,Others.TowerOfHanoi,main/1[java.lang.String[]],false,19,1,1,0,1,1,4,7,0,2,1,4,1,1,0,0,0,0,4,0,2,0,0,0,0,0,12,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\IterativeBinarySearch.java,Searches.IterativeBinarySearch,"find/2[T[],T]",false,33,1,0,0,0,4,1,19,2,4,2,1,0,0,1,1,0,1,0,6,6,3,2,0,0,0,25,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\IterativeBinarySearch.java,Searches.IterativeBinarySearch,main/1[java.lang.String[]],false,56,1,2,0,2,2,9,12,0,8,1,9,0,0,0,1,0,0,2,3,8,1,0,0,0,1,31,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$LinkedList,findEnd/1[DataStructures.HashMap.Hashing.HashMap.Node],false,57,2,4,2,2,2,2,8,2,0,1,2,1,0,0,1,0,0,0,0,0,0,1,0,0,0,5,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$LinkedList,display/1[DataStructures.HashMap.Hashing.HashMap.Node],false,111,2,5,2,3,2,3,8,2,0,1,3,1,0,0,1,0,0,2,0,0,1,1,0,0,0,4,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$LinkedList,findKey/1[int],false,65,2,2,0,2,2,3,9,2,0,1,3,2,1,0,0,0,0,1,0,0,0,1,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$LinkedList,display/0,false,107,1,2,1,1,1,1,3,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$LinkedList,isEmpty/0,false,119,0,3,3,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$LinkedList,LinkedList/0,true,43,0,1,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$LinkedList,insert/1[int],false,47,2,5,1,4,2,3,8,1,1,1,3,2,1,0,0,0,0,0,0,2,0,1,0,0,0,9,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$LinkedList,delete/1[int],false,85,2,4,1,3,3,4,13,0,0,1,4,2,1,0,1,0,0,1,0,1,0,2,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$LinkedList,"delete/2[DataStructures.HashMap.Hashing.HashMap.Node,int]",false,97,1,4,1,3,3,3,10,0,0,2,3,0,0,0,2,0,0,0,0,0,0,2,0,0,0,4,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\HashMap\Hashing\HashMap.java,DataStructures.HashMap.Hashing.HashMap$LinkedList,"findKey/2[DataStructures.HashMap.Hashing.HashMap.Node,int]",false,74,2,5,2,3,3,4,12,3,0,2,4,1,0,0,2,0,0,1,0,0,0,1,0,0,0,7,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,printBalance/1[DataStructures.Trees.AVLTree.Node],false,181,2,3,2,1,2,2,7,0,0,1,2,1,0,0,1,0,0,1,0,0,0,1,0,0,0,5,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,delete/1[DataStructures.Trees.AVLTree.Node],false,46,2,4,2,2,8,2,26,1,3,1,2,2,6,2,7,0,0,0,0,10,0,4,0,0,0,8,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,height/1[DataStructures.Trees.AVLTree.Node],false,165,1,3,3,0,2,0,4,2,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,4,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,printBalance/0,false,177,1,2,1,1,1,1,3,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,rotateLeftThenRight/1[DataStructures.Trees.AVLTree.Node],false,155,2,3,1,2,1,2,4,1,0,1,2,2,4,0,0,0,0,0,0,1,0,0,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,reheight/1[DataStructures.Trees.AVLTree.Node],false,189,2,2,1,1,2,2,5,0,0,1,2,1,1,0,1,0,0,0,1,1,1,1,0,0,0,5,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,insert/1[int],false,19,2,3,1,2,7,1,24,2,3,1,1,1,6,1,3,0,0,0,0,7,0,5,0,0,0,12,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,rebalance/1[DataStructures.Trees.AVLTree.Node],false,86,2,10,3,7,6,7,17,0,0,1,7,7,5,0,3,0,0,0,2,5,0,2,0,0,0,12,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,setBalance/1[DataStructures.Trees.AVLTree.Node[]],false,170,2,5,3,2,2,2,6,0,0,1,2,2,2,1,0,0,0,0,0,1,1,1,0,0,0,7,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,rotateRight/1[DataStructures.Trees.AVLTree.Node],false,130,2,4,3,1,4,1,18,1,1,1,1,1,3,0,3,0,0,0,0,8,0,2,0,0,0,8,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,rotateRightThenLeft/1[DataStructures.Trees.AVLTree.Node],false,160,2,3,1,2,1,2,4,1,0,1,2,2,4,0,0,0,0,0,0,1,0,0,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,delete/1[int],false,71,2,1,0,1,5,1,13,2,2,1,1,1,7,1,3,0,0,0,0,4,0,2,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,"searchHelper/2[DataStructures.Trees.AVLTree.Node,int]",false,202,2,3,2,1,4,1,5,3,0,2,1,1,0,0,2,0,0,0,0,0,0,1,0,0,0,6,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,main/1[java.lang.String[]],false,215,1,3,0,3,2,4,7,0,2,1,4,2,8,1,0,0,0,2,2,2,0,1,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,rotateLeft/1[DataStructures.Trees.AVLTree.Node],false,105,2,4,3,1,4,1,18,1,1,1,1,1,3,0,3,0,0,0,0,8,0,2,0,0,0,8,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\AVLTree.java,DataStructures.Trees.AVLTree,search/1[int],false,195,2,1,0,1,2,1,5,2,1,1,1,1,1,0,1,0,0,0,0,1,0,1,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\LevelOrderTraversal.java,DataStructures.Trees.LevelOrderTraversal$Node,Node/1[int],true,9,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\HexaDecimalToBinary.java,Conversions.HexaDecimalToBinary,completeDigits/1[java.lang.String],false,18,0,1,1,0,2,1,6,1,1,1,1,0,0,1,0,0,0,1,0,2,1,1,0,0,0,14,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\HexaDecimalToBinary.java,Conversions.HexaDecimalToBinary,main/1[java.lang.String[]],false,25,1,2,0,2,2,1,7,0,2,1,1,1,2,1,0,0,0,11,0,2,0,1,0,0,0,11,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Conversions\HexaDecimalToBinary.java,Conversions.HexaDecimalToBinary,convert/1[java.lang.String],false,9,1,2,1,1,1,4,5,0,2,1,4,1,1,0,0,0,0,1,1,2,1,0,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Trees\RedBlackBST.java,DataStructures.Trees.RedBlackBST$Node,Node/1[int],true,16,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArrayList.java,DataStructures.Stacks.StackArrayList,isEmpty/0,false,81,0,3,3,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArrayList.java,DataStructures.Stacks.StackArrayList,main/1[java.lang.String[]],false,18,1,6,0,6,8,5,21,0,2,1,5,5,3,2,5,1,0,0,6,2,0,1,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArrayList.java,DataStructures.Stacks.StackArrayList,push/1[int],false,57,0,1,1,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArrayList.java,DataStructures.Stacks.StackArrayList,StackArrayList/0,true,48,0,1,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArrayList.java,DataStructures.Stacks.StackArrayList,size/0,false,102,0,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArrayList.java,DataStructures.Stacks.StackArrayList,peek/0,false,90,1,2,1,1,2,3,6,1,0,0,3,1,1,0,0,0,0,0,1,0,1,1,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Stacks\StackArrayList.java,DataStructures.Stacks.StackArrayList,pop/0,false,67,1,2,1,1,2,3,6,1,0,0,3,1,1,0,0,0,0,0,1,0,1,1,0,0,0,16,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\LinkedQueue.java,DataStructures.Queues.LinkedQueue,size/0,false,112,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\LinkedQueue.java,DataStructures.Queues.LinkedQueue,clear/0,false,117,1,3,1,2,2,2,5,0,0,0,2,2,2,1,0,0,0,0,0,0,0,1,0,0,0,9,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\LinkedQueue.java,DataStructures.Queues.LinkedQueue,toString/0,false,124,2,1,0,1,3,6,14,2,2,0,6,1,1,1,1,0,0,4,1,3,1,1,0,0,0,9,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\LinkedQueue.java,DataStructures.Queues.LinkedQueue,dequeue/0,false,66,2,3,2,1,3,1,14,1,2,0,1,1,1,0,0,0,0,1,0,5,0,1,0,0,0,21,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\LinkedQueue.java,DataStructures.Queues.LinkedQueue,isEmpty/0,false,43,0,6,6,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,8,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\LinkedQueue.java,DataStructures.Queues.LinkedQueue,peekFront/0,false,88,1,2,1,1,2,1,6,1,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,17,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\LinkedQueue.java,DataStructures.Queues.LinkedQueue,enqueue/1[int],false,53,1,2,1,1,1,0,7,1,1,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,17,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\LinkedQueue.java,DataStructures.Queues.LinkedQueue,peekRear/0,false,100,1,2,1,1,2,1,6,1,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,18,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\LinkedQueue.java,DataStructures.Queues.LinkedQueue,LinkedQueue/0,true,34,1,2,1,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,6,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Queues\LinkedQueue.java,DataStructures.Queues.LinkedQueue,main/1[java.lang.String[]],false,140,1,8,0,8,5,8,15,0,1,1,8,7,5,0,4,0,0,0,7,1,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinPriorityQueue.java,DataStructures.Heaps.MinPriorityQueue,insert/1[int],false,27,1,2,1,1,4,1,14,1,2,1,1,1,1,1,0,0,0,0,7,6,6,2,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinPriorityQueue.java,DataStructures.Heaps.MinPriorityQueue,main/1[java.lang.String[]],false,110,1,4,0,4,1,3,14,0,1,1,3,3,4,0,0,0,0,0,9,1,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinPriorityQueue.java,DataStructures.Heaps.MinPriorityQueue,isEmpty/0,false,48,0,0,0,0,2,0,4,2,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinPriorityQueue.java,DataStructures.Heaps.MinPriorityQueue,peek/0,false,43,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinPriorityQueue.java,DataStructures.Heaps.MinPriorityQueue,print/0,false,60,0,1,1,0,2,2,4,0,1,0,2,0,0,1,0,0,0,1,1,1,1,1,0,0,0,2,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinPriorityQueue.java,DataStructures.Heaps.MinPriorityQueue,heapSort/0,false,68,1,2,1,1,2,1,3,0,1,0,1,1,2,1,0,0,0,0,1,1,0,1,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinPriorityQueue.java,DataStructures.Heaps.MinPriorityQueue,MinPriorityQueue/1[int],true,19,1,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,2,3,1,0,0,0,0,4,0,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinPriorityQueue.java,DataStructures.Heaps.MinPriorityQueue,delete/0,false,101,1,2,1,1,1,1,8,1,1,0,1,1,1,0,0,0,0,0,2,3,0,0,0,0,0,2,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinPriorityQueue.java,DataStructures.Heaps.MinPriorityQueue,isFull/0,false,54,0,1,1,0,2,0,4,2,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Heaps\MinPriorityQueue.java,DataStructures.Heaps.MinPriorityQueue,sink/0,false,73,0,1,1,0,12,0,29,0,3,0,0,0,0,1,0,0,0,0,24,8,23,3,0,0,0,5,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FindMin.java,Maths.FindMin,findMin/1[int[]],false,30,1,1,1,0,3,0,9,1,2,1,0,0,0,1,0,0,0,0,2,3,0,2,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\FindMin.java,Maths.FindMin,main/1[java.lang.String[]],false,9,2,1,0,1,3,6,9,0,4,1,6,1,1,1,1,0,0,0,4,5,2,1,0,0,0,12,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem10.java,ProjectEuler.Problem10,isPrime/1[int],false,31,0,1,1,0,6,1,14,4,2,1,1,0,0,1,3,0,0,0,7,3,2,2,0,0,0,14,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem10.java,ProjectEuler.Problem10,solution1/1[long],false,46,1,2,1,1,3,1,9,1,2,1,1,1,1,1,0,0,0,0,2,3,0,2,0,0,0,6,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem10.java,ProjectEuler.Problem10,main/1[java.lang.String[]],false,11,2,1,0,1,2,1,6,0,1,1,1,1,2,1,1,0,0,0,14,1,0,1,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\GCD.java,Maths.GCD,main/1[java.lang.String[]],false,50,2,2,0,2,1,4,5,0,1,1,4,2,2,0,0,0,0,1,7,1,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\GCD.java,Maths.GCD,gcd/1[int[]],false,41,2,2,1,1,2,1,5,1,2,1,1,1,1,1,0,0,0,0,2,3,0,1,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\GCD.java,Maths.GCD,"gcd/2[int,int]",false,18,0,2,2,0,6,1,14,2,1,2,1,0,0,1,3,0,0,0,5,3,3,1,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem12.java,ProjectEuler.Problem12,main/1[java.lang.String[]],false,20,1,1,0,1,2,1,3,0,0,1,1,1,2,0,1,0,0,0,2,0,0,0,0,0,0,6,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem12.java,ProjectEuler.Problem12,solution1/1[int],false,31,1,2,1,1,4,2,13,1,4,1,2,1,1,2,1,0,0,0,7,7,1,3,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem12.java,ProjectEuler.Problem12,triangleNumber/1[int],false,25,0,1,1,0,2,0,5,1,2,1,0,0,0,1,0,0,0,0,2,3,0,1,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\PasswordGen.java,Others.PasswordGen,main/1[java.lang.String[]],false,15,1,1,0,1,1,2,4,0,1,1,2,1,1,0,0,0,0,1,2,1,1,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\PasswordGen.java,Others.PasswordGen,"generatePassword/2[int,int]",false,20,0,1,1,0,3,8,16,1,9,2,8,0,0,2,0,0,0,4,1,9,3,1,0,0,0,19,8,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\AliquotSum.java,Maths.AliquotSum,aliquotSum/1[int],false,23,0,1,1,0,3,0,9,1,3,1,0,0,0,1,1,0,0,0,4,4,2,2,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\AliquotSum.java,Maths.AliquotSum,main/1[java.lang.String[]],false,10,1,1,0,1,5,1,6,0,0,1,1,1,1,0,4,0,0,0,8,0,0,0,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PrimeFactorization.java,Maths.PrimeFactorization,pfactors/1[int],false,16,0,1,1,0,5,3,13,0,1,1,3,0,0,3,2,0,0,2,8,4,4,2,0,0,0,3,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\PrimeFactorization.java,Maths.PrimeFactorization,main/1[java.lang.String[]],false,6,1,1,0,1,1,5,9,0,2,1,5,1,1,0,0,0,1,4,0,2,1,0,0,0,0,11,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\QuickSort.java,Sorts.QuickSort,"partition/3[T[],int,int]",false,59,2,3,1,2,5,2,18,1,2,3,2,0,0,3,0,0,1,0,1,2,2,2,0,0,0,23,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\QuickSort.java,Sorts.QuickSort,main/1[java.lang.String[]],false,80,2,4,0,4,1,3,9,0,3,1,3,0,0,0,0,0,0,5,17,3,0,0,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\QuickSort.java,Sorts.QuickSort,sort/1[T[]],false,18,2,1,0,1,1,1,4,1,0,1,1,1,3,0,0,0,0,0,2,0,1,0,0,0,0,17,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\QuickSort.java,Sorts.QuickSort,"doSort/3[T[],int,int]",false,30,2,4,2,2,2,2,7,0,1,3,2,2,2,0,0,0,0,0,1,1,1,1,0,0,0,19,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\QuickSort.java,Sorts.QuickSort,"randomPartition/3[T[],int,int]",false,46,3,3,1,2,1,3,5,1,1,3,3,1,1,0,0,0,2,0,1,1,4,0,0,0,0,23,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\ReturnSubsequence.java,Others.ReturnSubsequence,returnSubsequence/1[java.lang.String],false,23,1,3,2,1,4,4,17,2,5,1,4,1,0,2,1,0,0,1,8,8,3,1,0,0,0,10,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\ReturnSubsequence.java,Others.ReturnSubsequence,main/1[java.lang.String[]],false,6,1,1,0,1,2,4,11,0,4,1,4,1,1,1,0,0,0,2,1,4,0,1,0,0,0,10,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Dijkstra.java,Others.Dijkstra,main/1[java.lang.String[]],false,34,1,3,0,3,1,2,5,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,23,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\TernarySearch.java,Searches.TernarySearch,"find/2[T[],T]",false,30,2,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,2,0,1,0,0,0,0,22,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\TernarySearch.java,Searches.TernarySearch,"ternarySearch/4[T[],T,int,int]",false,41,2,3,2,1,6,2,22,6,2,4,2,1,0,0,2,0,2,0,8,2,7,1,0,0,0,31,2,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Searches\TernarySearch.java,Searches.TernarySearch,main/1[java.lang.String[]],false,73,1,2,0,2,2,9,12,0,8,1,9,0,0,0,1,0,0,2,3,8,1,0,0,0,1,30,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Dijkstra.java,Others.Graph$Vertex,hashCode/0,false,106,1,2,1,1,4,4,8,1,1,0,4,1,0,0,3,0,3,0,7,5,8,0,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Dijkstra.java,Others.Graph$Vertex,compareTo/1[Others.Graph.Vertex],false,81,1,0,0,0,2,2,4,2,0,1,2,0,0,0,1,0,0,0,0,0,0,1,0,0,0,5,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Dijkstra.java,Others.Graph$Vertex,toString/0,false,116,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,4,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Dijkstra.java,Others.Graph$Vertex,Vertex/1[java.lang.String],true,66,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Dijkstra.java,Others.Graph$Vertex,equals/1[java.lang.Object],false,88,1,2,1,1,9,5,11,8,1,1,5,1,0,0,10,0,0,0,0,1,0,1,0,0,0,14,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\Dijkstra.java,Others.Graph$Vertex,printPath/0,false,70,1,4,3,1,3,2,12,0,0,0,2,1,0,0,2,0,0,3,0,0,0,1,0,0,0,4,2,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\PancakeSort.java,Sorts.PancakeSort,main/1[java.lang.String[]],false,31,2,3,0,3,1,3,7,0,2,1,3,0,0,0,0,0,0,1,28,2,0,0,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\PancakeSort.java,Sorts.PancakeSort,sort/1[T[]],false,14,2,2,0,2,4,2,15,1,5,1,2,0,0,2,0,0,0,0,5,7,2,3,0,0,0,10,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MinimumPathSum.java,DynamicProgramming.MinimumPathSum,testLessColumns/0,false,39,2,1,0,1,1,2,4,0,1,0,2,1,1,0,0,0,0,0,6,1,0,0,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MinimumPathSum.java,DynamicProgramming.MinimumPathSum,testRegular/0,false,30,2,1,0,1,1,2,4,0,1,0,2,1,1,0,0,0,0,0,9,1,0,0,0,0,0,6,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MinimumPathSum.java,DynamicProgramming.MinimumPathSum,testLessRows/0,false,48,2,1,0,1,1,2,4,0,1,0,2,1,1,0,0,0,0,0,6,1,0,0,0,0,0,7,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MinimumPathSum.java,DynamicProgramming.MinimumPathSum,testOneRowOneColumn/0,false,56,2,1,0,1,1,2,4,0,1,0,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,8,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DynamicProgramming\MinimumPathSum.java,DynamicProgramming.MinimumPathSum,minimumPathSum/1[int[][]],false,61,1,4,4,0,6,1,20,2,7,1,1,0,0,4,1,0,0,0,27,11,13,2,0,0,0,9,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\BinaryPow.java,Maths.BinaryPow,"binPow/2[int,int]",false,12,0,1,1,0,4,0,11,1,1,2,0,0,0,1,1,0,1,0,5,4,2,2,0,0,0,18,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\BinaryPow.java,Maths.BinaryPow,main/1[java.lang.String[]],false,41,1,1,0,1,1,1,4,0,0,1,1,1,2,0,0,0,0,0,4,0,0,0,0,0,0,11,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\BinaryPow.java,Maths.BinaryPow,"test/2[int,int]",false,30,1,2,1,1,2,3,5,0,1,2,3,1,1,0,1,0,0,3,0,1,1,0,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Pangram.java,strings.Pangram,main/1[java.lang.String[]],false,7,1,1,0,1,1,1,4,0,0,1,1,1,1,0,0,0,0,2,0,0,0,0,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\Pangram.java,strings.Pangram,isPangram/1[java.lang.String],false,18,2,1,1,0,6,3,16,2,3,1,3,0,0,2,0,0,0,0,1,4,2,2,0,0,0,20,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Convolution.java,com.maths.Convolution,"convolution/2[double[],double[]]",false,18,1,0,0,0,4,1,12,1,3,2,1,0,0,2,0,0,0,0,6,5,7,2,0,0,0,34,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\ConnectedComponent.java,DataStructures.Graphs.ConnectedComponent,main/1[java.lang.String[]],false,108,1,6,0,6,1,5,22,0,2,1,5,0,0,0,0,0,0,2,14,2,2,0,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem07.java,ProjectEuler.Problem07,solution1/1[int],false,49,1,2,1,1,3,1,10,1,2,1,1,1,1,1,1,0,0,0,2,2,0,2,0,0,0,6,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem07.java,ProjectEuler.Problem07,isPrime/1[int],false,34,0,1,1,0,6,1,14,4,2,1,1,0,0,1,3,0,0,0,7,3,2,2,0,0,0,13,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem07.java,ProjectEuler.Problem07,main/1[java.lang.String[]],false,12,2,1,0,1,2,1,6,0,1,1,1,1,2,1,1,0,0,0,20,1,0,1,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KochSnowflake.java,Others.KochSnowflake$Vector2,rotate/1[double],false,225,1,2,1,1,1,2,8,1,5,1,2,0,0,0,0,0,0,0,1,5,8,0,0,0,0,22,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KochSnowflake.java,Others.KochSnowflake$Vector2,toString/0,false,179,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KochSnowflake.java,Others.KochSnowflake$Vector2,add/1[Others.KochSnowflake.Vector2],false,189,1,2,1,1,1,0,5,1,2,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KochSnowflake.java,Others.KochSnowflake$Vector2,multiply/1[double],false,213,1,2,1,1,1,0,5,1,2,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,14,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KochSnowflake.java,Others.KochSnowflake$Vector2,"Vector2/2[double,double]",true,173,0,6,6,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\KochSnowflake.java,Others.KochSnowflake$Vector2,subtract/1[Others.KochSnowflake.Vector2],false,201,1,2,1,1,1,0,5,1,2,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,11,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem09.java,ProjectEuler.Problem09,main/1[java.lang.String[]],false,13,1,1,0,1,2,1,3,0,0,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem09.java,ProjectEuler.Problem09,solution1/0,false,17,0,1,1,0,4,0,11,2,3,0,0,0,0,2,1,0,0,0,6,3,6,3,0,0,0,4,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Kruskal.java,Kruskal,kruskal/1[java.util.HashSet<Kruskal.Edge>[]],false,70,3,2,1,1,6,10,25,1,10,1,10,1,1,2,1,0,1,0,2,13,0,2,0,0,2,14,1,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Kruskal.java,Kruskal,main/1[java.lang.String[]],false,36,2,3,0,3,6,3,30,0,6,1,3,2,2,5,0,0,0,6,34,7,2,2,0,0,0,12,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\DataStructures\Graphs\Kruskal.java,Kruskal,"addEdge/4[java.util.HashSet<Kruskal.Edge>[],int,int,int]",false,32,1,3,2,1,1,1,3,0,0,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Armstrong.java,Maths.Armstrong,isArmStrong/1[int],false,25,0,1,1,0,5,0,18,1,6,1,0,0,0,3,2,0,0,0,9,11,2,2,0,0,0,23,10,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Armstrong.java,Maths.Armstrong,main/1[java.lang.String[]],false,10,1,1,0,1,1,1,8,0,0,1,1,1,1,0,0,0,6,0,6,0,0,0,0,0,0,6,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\PerlinNoise.java,Others.PerlinNoise,"generatePerlinNoise/5[int,int,int,float,long]",false,20,2,2,1,1,9,2,31,1,14,5,2,1,2,8,0,0,0,0,11,20,2,3,0,0,0,38,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\PerlinNoise.java,Others.PerlinNoise,"generatePerlinNoiseLayer/4[float[][],int,int,int]",false,72,2,2,1,1,3,1,19,1,13,4,1,1,1,2,0,0,6,0,4,14,14,2,0,0,0,33,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\PerlinNoise.java,Others.PerlinNoise,"interpolate/3[float,float,float]",false,111,0,1,1,0,1,0,3,1,0,3,0,0,0,0,0,0,1,0,1,0,4,0,0,0,0,15,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Others\PerlinNoise.java,Others.PerlinNoise,main/1[java.lang.String[]],false,115,3,1,0,1,5,10,41,0,15,1,10,1,3,3,0,0,0,6,3,16,1,4,0,0,0,26,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\CocktailShakerSort.java,Sorts.CocktailShakerSort,main/1[java.lang.String[]],false,45,2,4,0,4,1,3,7,0,3,1,3,0,0,0,0,0,0,5,9,3,0,0,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Sorts\CocktailShakerSort.java,Sorts.CocktailShakerSort,sort/1[T[]],false,15,2,2,0,2,6,2,25,1,7,1,2,0,0,3,0,0,0,0,8,11,6,3,0,0,0,25,1,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Mode.java,Maths.Mode,mode/1[int[]],false,32,1,1,1,0,6,10,20,2,4,1,10,0,0,2,2,0,0,0,3,3,1,2,0,0,1,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\Maths\Mode.java,Maths.Mode,main/1[java.lang.String[]],false,16,2,1,0,1,2,2,7,0,0,1,2,1,1,0,1,0,1,0,33,0,0,0,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem01.java,ProjectEuler.Problem01,solution2/1[int],false,37,0,1,1,0,1,0,10,1,2,1,0,0,0,0,0,0,9,0,19,7,21,0,0,0,0,4,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem01.java,ProjectEuler.Problem01,solution1/1[int],false,27,0,1,1,0,4,0,9,1,2,1,0,0,0,1,2,0,0,0,6,3,2,2,0,0,0,4,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem01.java,ProjectEuler.Problem01,main/1[java.lang.String[]],false,12,2,2,0,2,2,2,7,0,1,1,2,2,1,1,2,0,0,0,14,1,0,1,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem02.java,ProjectEuler.Problem02,main/1[java.lang.String[]],false,15,2,1,0,1,2,1,6,0,1,1,1,1,1,1,1,0,0,0,12,1,0,1,0,0,0,7,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem02.java,ProjectEuler.Problem02,solution1/1[int],false,29,0,1,1,0,3,0,14,1,4,1,0,0,0,1,1,0,0,0,5,7,2,2,0,0,0,6,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem03.java,ProjectEuler.Problem03,maxPrimeFactor/1[long],false,39,1,2,1,1,4,1,8,1,1,1,1,1,1,2,1,0,0,0,3,2,2,3,0,0,0,20,8,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem03.java,ProjectEuler.Problem03,main/1[java.lang.String[]],false,49,2,1,0,1,3,1,7,0,1,1,1,1,2,1,2,0,0,0,14,1,0,1,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem03.java,ProjectEuler.Problem03,isPrime/1[int],false,18,0,1,1,0,6,1,14,4,2,1,1,0,0,1,3,0,0,0,7,3,2,2,0,0,0,14,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\ReverseString.java,strings.ReverseString,reverse/1[java.lang.String],false,17,0,1,1,0,1,2,3,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\ReverseString.java,strings.ReverseString,main/1[java.lang.String[]],false,6,1,2,0,2,1,3,4,0,0,1,3,2,1,0,0,0,0,4,0,0,0,0,0,0,0,5,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\strings\ReverseString.java,strings.ReverseString,reverse2/1[java.lang.String],false,27,1,1,1,0,4,3,12,2,4,1,3,0,0,1,1,0,0,0,2,6,1,1,0,0,0,18,9,0,true
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem04.java,ProjectEuler.Problem04,solution1/1[int],false,26,0,1,1,0,6,5,13,2,3,1,5,0,0,2,2,0,0,0,7,3,3,4,0,0,0,8,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem04.java,ProjectEuler.Problem04,main/1[java.lang.String[]],false,12,1,1,0,1,11,1,12,0,0,1,1,1,1,0,10,0,0,0,20,0,0,0,0,0,0,4,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem06.java,ProjectEuler.Problem06,main/1[java.lang.String[]],false,13,2,2,0,2,2,2,6,0,1,1,2,2,1,1,2,0,0,0,12,1,0,1,0,0,0,8,9,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem06.java,ProjectEuler.Problem06,solutions2/1[int],false,37,0,1,1,0,1,1,5,1,2,1,1,0,0,0,0,0,4,0,7,2,9,0,0,0,0,7,10,0,false
D:\trabCKMetrics\repos\TheAlgorithmsJava\ProjectEuler\Problem06.java,ProjectEuler.Problem06,solution1/1[int],false,27,0,1,1,0,2,0,9,1,3,1,0,0,0,1,0,0,0,0,3,5,3,1,0,0,0,5,10,0,false
